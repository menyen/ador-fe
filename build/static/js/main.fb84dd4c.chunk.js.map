{"version":3,"sources":["interfaces.ts","utils/endpointRequests.ts","image/mini-logo-white.svg","image/logo.svg","components/Buttons.tsx","components/Login.tsx","image/mini-logo.svg","hooks/useAuth.ts","components/LeftNav.tsx","components/GenericTable.tsx","components/PacientsTable.tsx","components/PhysicianPage.tsx","components/ClinicsTable.tsx","components/ClinicForm.tsx","components/Settings.tsx","actions/clinic.ts","reducers/clinic.ts","components/AdminPage.tsx","components/UsersTable.tsx","actions/user.ts","reducers/user.ts","components/UserForm.tsx","components/ManagerPage.tsx","App.tsx","utils/loggedUser.ts","reportWebVitals.ts","index.tsx"],"names":["LoginPanelType","AdminPanelType","PhysicianPanelType","ManagerPanelType","auth","RolesEnum","ADMIN","MANAGER","PHYSICIAN","baseUrl","getAuth","JSON","parse","localStorage","getItem","loginUser","credentials","a","fetch","method","headers","body","stringify","then","data","json","getTermsOfUse","Authorization","token","setTermsOfUse","text","OutlinedButton","withStyles","theme","root","color","backgroundColor","border","maxWidth","margin","spacing","Button","OrangeButton","palette","getContrastText","deepOrange","useStyles","makeStyles","createStyles","flexGrow","left","justifyContent","alignItems","display","right","paper","height","boxShadow","contentBox","centralize","textAlign","marginBottom","marginTop","input","termsAndPolicy","fontSize","link","textDecoration","alignRight","forgotLink","DefaultButton","textTransform","InitialPanel","props","classes","preventDefault","event","Paper","className","clsx","Grid","container","item","xs","src","logo","alt","Typography","variant","gutterBottom","onClick","nextPanel","size","Link","href","LoginPanel","useState","email","setEmail","password","setPassword","history","useHistory","location","useLocation","handleLoginSubmit","e","state","from","pathname","setAuth","replace","onSubmit","TextField","fullWidth","id","label","onChange","target","value","type","ForgotPasswordPanel","setEmailForgotPsw","handleForgotPswSubmit","Login","Initial","panel","setPanel","Slide","in","direction","mountOnEnter","unmountOnExit","minilogo","width","ForgotPassword","useAuth","tokenString","userAuth","setItem","removeItem","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","collapsedToolbar","paddingLeft","toolbar","padding","mixins","content","bottomButton","search","position","borderRadius","shape","alpha","common","white","marginRight","searchIcon","pointerEvents","inputRoot","inputInput","LeftNav","useTheme","open","setOpen","role","currentPanel","AppBar","Toolbar","IconButton","edge","InputBase","placeholder","inputProps","Drawer","Divider","List","ListItem","button","selected","ClinicsTable","ClinicForm","includes","openClinicsTablePage","ListItemIcon","ListItemText","primary","Settings","openTermsOfUsePage","push","maxHeight","tableHeadCell","black","tableHeadCheckbox","PacientsTable","React","page","setPage","rowsPerPage","setRowsPerPage","setSelected","columns","rows","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","indeterminate","length","checked","newSelecteds","map","n","column","align","style","minWidth","TableBody","slice","row","index","isItemSelected","indexOf","labelId","hover","tabIndex","cpf","selectedIndex","newSelected","concat","handleClick","format","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","toString","padStart","regex","arg1","arg2","arg3","arg4","dateFormat","Date","getDate","getMonth","getFullYear","createData","name","lastQnaireDate","appRoot","PhysicianPage","CssBaseline","ClinicStatus","setRows","clinics","deleteClinic","openClinicForm","useEffect","clinic","handleClinicDetails","stopPropagation","handleDeleteClinic","status","details","setClinicsIntoTable","headerSection","ownerHeaderSection","footerSection","currentClinic","setClinic","clinicName","setClinicName","tax_id","taxId","setTaxId","address_zipcode","zipcode","setZipcode","address_street","streetAddress","setStreetAddress","address_city","city","setCity","address_state","stateAddress","setStateAddress","phone","setPhone","owner","ownerName","setOwnerName","ownerEmail","setOwnerEmail","ownerPassword","setOwnerPassword","handleSetClinic","payload","user","alignContent","defaultValue","textarea","tou","setTou","termsOfUse","term","getTOU","handleSetTerms","TextareaAutosize","minRows","IActions","createClinic","dispatch","response","CLINIC_CREATED","updateClinic","CLINIC_UPDATED","clinicReducer","action","CLINICS_FETCHED","CLINIC_DELETED","filter","AdminPage","setCurrentClinic","useReducer","getClinics","ok","UsersTable","deleteUser","users","handleUserDetails","handleDeleteUser","setUsersIntoTable","openUserForm","createUser","USER_CREATED","updateUser","USER_UPDATED","userReducer","USERS_FETCHED","USER_DELETED","roleOptions","UserForm","currentUser","setUser","userName","setUserName","crm","setCrm","setRole","handleSetUser","FormControl","InputLabel","htmlFor","Select","native","roleOption","openUsersTablePage","ManagerPage","setCurrentUser","getUsers","App","currentRole","roles","defaultPath","PrivateRoute","children","rest","render","path","to","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb84dd4c.chunk.js","sourcesContent":["import { Clinic } from './models/Clinic';\r\nimport { User } from './models/User';\r\nimport { UserAuth } from './models/UserAuth';\r\n\r\nexport interface LoginProps {\r\n  setAuth: (setAuth?: UserAuth) => void;\r\n}\r\n\r\nexport interface TableColumn<K extends string = string> {\r\n  id: K;\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport type TableRow<K extends string = string, T = any> = Record<K, T>;\r\n\r\nexport interface TableProps<K extends string = string, L extends K = K> {\r\n  columns: TableColumn<L>[];\r\n  rows: TableRow<K>[];\r\n}\r\n\r\nexport interface PanelCommonProps {\r\n  nextPanel: () => void;\r\n}\r\n\r\nexport interface PatientTableColumn {\r\n  id: 'name' | 'email' | 'cpf' | 'lastQnaireDate';\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport interface PatientTableData {\r\n  name: string;\r\n  email: string;\r\n  cpf: number;\r\n  lastQnaireDate: number;\r\n}\r\n\r\nexport interface ClinicTableColumn {\r\n  id:\r\n    | 'id'\r\n    | 'name'\r\n    | 'tax_id'\r\n    | 'address_zipcode'\r\n    | 'address_street'\r\n    | 'address_city'\r\n    | 'address_state'\r\n    | 'phone'\r\n    | 'owner_id'\r\n    | 'status'\r\n    | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport interface ClinicTableData extends Clinic {\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface UserTableColumn {\r\n  id:\r\n    | 'id'\r\n    | 'name'\r\n    | 'tax_id'\r\n    | 'email'\r\n    | 'address_zipcode'\r\n    | 'address_street'\r\n    | 'address_city'\r\n    | 'address_state'\r\n    | 'crm'\r\n    | 'phone'\r\n    | 'role'\r\n    | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport interface UserTableData extends User {\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface Credentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport enum LoginPanelType {\r\n  Initial,\r\n  Login,\r\n  ForgotPassword,\r\n  CreatePassword,\r\n}\r\n\r\nexport enum AdminPanelType {\r\n  ClinicsTable,\r\n  ClinicForm,\r\n  Settings,\r\n}\r\n\r\nexport enum PhysicianPanelType {\r\n  PacientsTable,\r\n  ReceptionistsTable,\r\n  ReportsTable,\r\n}\r\n\r\nexport enum ManagerPanelType {\r\n  UsersTable,\r\n  UserForm,\r\n}\r\n\r\nexport const RolesEnum = {\r\n  ADMIN: 'admin',\r\n  MANAGER: 'manager',\r\n  PHYSICIAN: 'physician',\r\n} as const;\r\n\r\nexport interface ClinicPayload {\r\n  name: string;\r\n  tax_id: string;\r\n  address_zipcode: string;\r\n  address_street: string;\r\n  address_city: string;\r\n  address_state: string;\r\n  phone: string;\r\n  user: {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n  };\r\n}\r\n\r\nexport interface UserPayload {\r\n  name: string;\r\n  tax_id: string;\r\n  email: string;\r\n  password: string;\r\n  address_zipcode: string;\r\n  address_street: string;\r\n  address_city: string;\r\n  address_state: string;\r\n  crm: string;\r\n  phone: string;\r\n  role: string;\r\n}\r\n","import { Credentials } from '../interfaces';\r\nimport { UserAuth } from '../models/UserAuth';\r\n\r\nexport const baseUrl = 'https://api-ador.iponce.com.br';\r\nlet auth: UserAuth;\r\nexport function getAuth() {\r\n  if (!auth) {\r\n    auth = JSON.parse(localStorage.getItem('auth') || '{}');\r\n  }\r\n  return auth;\r\n}\r\n\r\nexport async function loginUser(credentials: Credentials) {\r\n  return fetch(`${baseUrl}/api/v1/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport async function getTermsOfUse() {\r\n  return fetch(`${baseUrl}/api/v1/terms`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: `Bearer ${getAuth().token}`,\r\n    },\r\n  }).then((data) => data.json());\r\n}\r\n\r\nexport async function setTermsOfUse(text: string) {\r\n  return fetch(`${baseUrl}/api/v1/terms/1`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: `Bearer ${getAuth().token}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ text }),\r\n  });\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mini-logo-white.d2319d1d.svg\";","export default __webpack_public_path__ + \"static/media/logo.1480c7f8.svg\";","import { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nexport const OutlinedButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    backgroundColor: 'white',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n    },\r\n    border: '1px solid rgba(0, 0, 0, 1)',\r\n    // textTransform: 'capitalize',\r\n    maxWidth: 185,\r\n    margin: theme.spacing(1),\r\n  },\r\n}))(Button);\r\n\r\nexport const OrangeButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    '&:hover': {\r\n      backgroundColor: deepOrange[700],\r\n    },\r\n    // marginLeft: 'auto',\r\n    margin: theme.spacing(1),\r\n  },\r\n}))(Button);\r\n","import React, { useState } from 'react';\r\nimport {\r\n  withStyles,\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\nimport clsx from 'clsx';\r\nimport { LoginPanelType, LoginProps, PanelCommonProps } from '../interfaces';\r\nimport minilogo from '../image/mini-logo-white.svg';\r\nimport logo from '../image/logo.svg';\r\nimport { loginUser } from '../utils/endpointRequests';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { OutlinedButton } from './Buttons';\r\n\r\ntype LoginPanelProps = LoginProps & PanelCommonProps;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    left: {\r\n      backgroundColor: 'black',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n    },\r\n    right: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n    },\r\n    paper: {\r\n      height: '100vh',\r\n      boxShadow: 'none',\r\n    },\r\n    contentBox: {\r\n      maxWidth: '400px',\r\n    },\r\n    centralize: {\r\n      textAlign: 'center',\r\n      marginBottom: theme.spacing(6),\r\n      marginTop: theme.spacing(6),\r\n    },\r\n    input: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    termsAndPolicy: {\r\n      fontSize: '0.875rem',\r\n    },\r\n    link: {\r\n      textDecoration: 'underline',\r\n    },\r\n    alignRight: {\r\n      textAlign: 'end',\r\n    },\r\n    forgotLink: {\r\n      marginTop: 10,\r\n      fontSize: '0.75rem',\r\n    },\r\n  })\r\n);\r\n\r\nconst DefaultButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: 'white',\r\n    backgroundColor: 'black',\r\n    '&:hover': {\r\n      backgroundColor: 'black',\r\n    },\r\n    textTransform: 'capitalize',\r\n    maxWidth: 185,\r\n  },\r\n}))(Button);\r\n\r\nfunction InitialPanel(props: PanelCommonProps) {\r\n  const classes = useStyles();\r\n  const preventDefault = (event: React.SyntheticEvent) =>\r\n    event.preventDefault();\r\n\r\n  return (\r\n    <Paper className={clsx(classes.paper, classes.right)}>\r\n      <Grid container spacing={0} className={classes.contentBox}>\r\n        <Grid item xs={12} className={classes.centralize}>\r\n          <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Seja Bem-vindo!\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Por favor informe suas credenciais para acessar a plataforma!\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centralize}>\r\n          <DefaultButton\r\n            variant=\"contained\"\r\n            onClick={props.nextPanel}\r\n            size=\"large\"\r\n          >\r\n            Entrar\r\n          </DefaultButton>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centralize}>\r\n          <Typography className={classes.termsAndPolicy}>\r\n            <Link\r\n              href=\"#\"\r\n              color=\"textPrimary\"\r\n              onClick={preventDefault}\r\n              className={classes.link}\r\n            >\r\n              Termos de uso\r\n            </Link>\r\n            &nbsp;e&nbsp;\r\n            <Link\r\n              href=\"#\"\r\n              color=\"textPrimary\"\r\n              onClick={preventDefault}\r\n              className={classes.link}\r\n            >\r\n              Políticas de privacidade\r\n            </Link>\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction LoginPanel(props: LoginPanelProps) {\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation<{ from: { pathname: string } }>();\r\n\r\n  const handleLoginSubmit = async (e: React.SyntheticEvent) => {\r\n    const { from } = location.state || { from: { pathname: '/' } };\r\n    e.preventDefault();\r\n    const token = await loginUser({\r\n      email,\r\n      password,\r\n    });\r\n    props.setAuth(token);\r\n    history.replace(from);\r\n  };\r\n\r\n  return (\r\n    <Paper className={clsx(classes.paper, classes.right)}>\r\n      <form onSubmit={handleLoginSubmit}>\r\n        <Grid container spacing={0} className={classes.contentBox}>\r\n          <Grid item xs={12} className={classes.centralize}>\r\n            <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Seja Bem-vindo!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Por favor informe suas credenciais para acessar a plataforma!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.input}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email-input\"\r\n              label=\"E-mail\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.input}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"password-input\"\r\n              label=\"Senha\"\r\n              type=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.alignRight}>\r\n            <Typography className={classes.forgotLink}>\r\n              <Link href=\"#\" color=\"textPrimary\" onClick={props.nextPanel}>\r\n                Esqueceu a senha?\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centralize}>\r\n            <DefaultButton variant=\"contained\" type=\"submit\" size=\"large\">\r\n              Entrar\r\n            </DefaultButton>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction ForgotPasswordPanel(props: PanelCommonProps) {\r\n  const [emailForgotPsw, setEmailForgotPsw] = useState<string>('');\r\n\r\n  const handleForgotPswSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // TODO call forgotPassword function here\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={clsx(classes.paper, classes.right)}>\r\n      <form onSubmit={handleForgotPswSubmit}>\r\n        <Grid container spacing={0} className={classes.contentBox}>\r\n          <Grid item xs={12} className={classes.centralize}>\r\n            <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Esqueceu sua senha?\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Enviaremos um código de recuperação para o seu email\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.input}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email-forgot-psw-input\"\r\n              label=\"E-mail\"\r\n              onChange={(e) => setEmailForgotPsw(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid container className={classes.centralize}>\r\n            <Grid item xs={6}>\r\n              <OutlinedButton\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                onClick={props.nextPanel}\r\n              >\r\n                Cancelar\r\n              </OutlinedButton>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DefaultButton variant=\"contained\" type=\"submit\" size=\"large\">\r\n                Enviar\r\n              </DefaultButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function Login(props: LoginProps) {\r\n  const [panel, setPanel] = useState<LoginPanelType>(LoginPanelType.Initial);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Grid container justifyContent=\"center\" spacing={0}>\r\n          <Slide\r\n            in={panel !== LoginPanelType.Initial}\r\n            direction=\"right\"\r\n            mountOnEnter\r\n            unmountOnExit\r\n          >\r\n            <Grid item xs={6}>\r\n              <Paper className={clsx(classes.paper, classes.left)}>\r\n                <img src={minilogo} alt=\"logo\" width=\"300\" />\r\n              </Paper>\r\n            </Grid>\r\n          </Slide>\r\n          <Grid item xs={6}>\r\n            {panel === LoginPanelType.Initial && (\r\n              <InitialPanel nextPanel={() => setPanel(LoginPanelType.Login)} />\r\n            )}\r\n            {panel === LoginPanelType.Login && (\r\n              <LoginPanel\r\n                {...props}\r\n                nextPanel={() => setPanel(LoginPanelType.ForgotPassword)}\r\n              />\r\n            )}\r\n            {panel === LoginPanelType.ForgotPassword && (\r\n              <ForgotPasswordPanel\r\n                nextPanel={() => setPanel(LoginPanelType.Login)}\r\n              />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mini-logo.b070b62c.svg\";","import { useState } from 'react';\r\nimport { UserAuth } from '../models/UserAuth';\r\n\r\nexport default function useAuth(): [\r\n  token: UserAuth,\r\n  saveToken: (userToken?: UserAuth) => void\r\n] {\r\n  const getAuth = () => {\r\n    const tokenString = localStorage.getItem('auth') || '{}';\r\n    const userToken: UserAuth = JSON.parse(tokenString);\r\n    return userToken;\r\n  };\r\n\r\n  const [auth, setAuth] = useState(getAuth());\r\n\r\n  const saveAuth = (userAuth?: UserAuth) => {\r\n    if (userAuth) {\r\n      localStorage.setItem('auth', JSON.stringify(userAuth));\r\n      setAuth(userAuth);\r\n    } else {\r\n      localStorage.removeItem('auth');\r\n    }\r\n  };\r\n\r\n  return [auth, saveAuth];\r\n}\r\n","import { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  alpha,\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport logo from '../image/logo.svg';\r\nimport minilogo from '../image/mini-logo.svg';\r\nimport useAuth from '../hooks/useAuth';\r\nimport {\r\n  AdminPanelType,\r\n  ManagerPanelType,\r\n  PhysicianPanelType,\r\n  RolesEnum,\r\n} from '../interfaces';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {},\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(8),\r\n      },\r\n    },\r\n    collapsedToolbar: {\r\n      paddingLeft: 12,\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    bottomButton: {\r\n      marginTop: 'auto',\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ninterface LeftNavProps {\r\n  role: string;\r\n  currentPanel: AdminPanelType | PhysicianPanelType | ManagerPanelType;\r\n  openClinicsTablePage?: () => void;\r\n  openTermsOfUsePage?: () => void;\r\n}\r\n\r\nexport default function LeftNav(props: LeftNavProps) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n  const { role, currentPanel } = props;\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const [, setAuth] = useAuth();\r\n\r\n  const signout = () => {\r\n    setAuth();\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        color='default'\r\n      >\r\n        <Toolbar className={classes.collapsedToolbar}>\r\n          <IconButton\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            edge='start'\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <img src={minilogo} alt='logo' width='39' />\r\n          </IconButton>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder='Pesquisar paciente'\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant='permanent'\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <img src={logo} className='app-logo' alt='logo' />\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {role === RolesEnum.ADMIN && (\r\n          <List>\r\n            <ListItem\r\n              button\r\n              key='LocalHospitalIcon'\r\n              selected={[\r\n                AdminPanelType.ClinicsTable,\r\n                AdminPanelType.ClinicForm,\r\n              ].includes(currentPanel as AdminPanelType)}\r\n              onClick={props.openClinicsTablePage}\r\n            >\r\n              <ListItemIcon>\r\n                <LocalHospitalIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Clínicas' />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              key='SettingsIcon'\r\n              selected={\r\n                AdminPanelType.Settings === (currentPanel as AdminPanelType)\r\n              }\r\n              onClick={props.openTermsOfUsePage}\r\n            >\r\n              <ListItemIcon>\r\n                <SettingsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Configurações' />\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n        {role === RolesEnum.MANAGER && (\r\n          <List>\r\n            <ListItem button key='PersonIcon' selected>\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Usuários' />\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n        {role === RolesEnum.PHYSICIAN && (\r\n          <List>\r\n            <ListItem button key='PersonIcon' selected>\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Pacientes' />\r\n            </ListItem>\r\n            <ListItem button key='FavoriteIcon'>\r\n              <ListItemIcon>\r\n                <FavoriteIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Acolhimento' />\r\n            </ListItem>\r\n            <ListItem button key='PieChartIcon'>\r\n              <ListItemIcon>\r\n                <PieChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary='Relatórios' />\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n        <Button className={classes.bottomButton} onClick={signout}>\r\n          SAIR\r\n        </Button>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { TableProps } from '../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n    tableHeadCell: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    tableHeadCheckbox: {\r\n      color: theme.palette.common.white,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function PacientsTable(props: TableProps) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [selected, setSelected] = React.useState<number[]>([]);\r\n\r\n  const { columns, rows } = props;\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, cpf: number) => {\r\n    const selectedIndex = selected.indexOf(cpf);\r\n    let newSelected: number[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, cpf);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (id: number) => selected.indexOf(id) !== -1;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\" className={classes.tableHeadCell}>\r\n                <Checkbox\r\n                  indeterminate={\r\n                    selected.length > 0 && selected.length < rows.length\r\n                  }\r\n                  checked={rows.length > 0 && selected.length === rows.length}\r\n                  onChange={handleSelectAllClick}\r\n                  inputProps={{ 'aria-label': 'select all desserts' }}\r\n                  color=\"default\"\r\n                  classes={{ root: classes.tableHeadCheckbox }}\r\n                />\r\n              </TableCell>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align=\"left\"\r\n                  style={{ minWidth: column.minWidth }}\r\n                  className={classes.tableHeadCell}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                const isItemSelected = isSelected(row.id);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    aria-checked={isItemSelected}\r\n                    selected={isItemSelected}\r\n                    onClick={(event) => handleClick(event, row.id)}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isItemSelected}\r\n                        inputProps={{ 'aria-labelledby': labelId }}\r\n                      />\r\n                    </TableCell>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align=\"left\">\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import { PatientTableColumn, PatientTableData } from '../interfaces';\r\nimport GenericTable from './GenericTable';\r\n\r\nconst columns: PatientTableColumn[] = [\r\n  { id: 'name', label: 'Nome', minWidth: 170 },\r\n  { id: 'email', label: 'E-mail', minWidth: 100 },\r\n  {\r\n    id: 'cpf',\r\n    label: 'CPF',\r\n    minWidth: 170,\r\n    format: (value: number) =>\r\n      value\r\n        .toString()\r\n        .padStart(11, '0')\r\n        .replace(\r\n          /(\\d{3})(\\d{3})(\\d{3})(\\d{2})/,\r\n          (regex, arg1, arg2, arg3, arg4) =>\r\n            arg1 + '.' + arg2 + '.' + arg3 + '-' + arg4\r\n        ),\r\n  },\r\n  {\r\n    id: 'lastQnaireDate',\r\n    label: 'Data do último questionário',\r\n    minWidth: 170,\r\n    format: (value: number) => {\r\n      const dateFormat = new Date(value);\r\n      return (\r\n        dateFormat.getDate() +\r\n        '/' +\r\n        (dateFormat.getMonth() + 1) +\r\n        '/' +\r\n        dateFormat.getFullYear()\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nfunction createData(\r\n  name: string,\r\n  email: string,\r\n  cpf: number,\r\n  lastQnaireDate: number\r\n): PatientTableData {\r\n  return { name, email, cpf, lastQnaireDate };\r\n}\r\n\r\nconst rows = [\r\n  createData('André Silva', 'aaa@ddd.com', 1324171354, 1580266800000),\r\n  createData('José da Cunha', 'aaa@ddd.com', 1403500365, 1580256000000),\r\n  createData('Bruno', 'aaa@ddd.com', 60483973, 1580266800000),\r\n  createData('Alice in Chains', 'aaa@ddd.com', 327167434, 1580256000000),\r\n  createData('Eduardo Cabral', 'aaa@ddd.com', 37602103, 1580256000000),\r\n  createData('Victor Camejo', 'aaa@ddd.com', 25475400, 1580266800000),\r\n  createData('Josefina', 'aaa@ddd.com', 83019200, 1580266800000),\r\n  createData('Luana Amaral', 'aaa@ddd.com', 4857000, 1580266800000),\r\n  createData('Simone Souza', 'aaa@ddd.com', 126577691, 1580256000000),\r\n  createData('Bia Novaes', 'aaa@ddd.com', 126317000, 1580266800000),\r\n  createData('João Camilo', 'aaa@ddd.com', 67022000, 1580266800000),\r\n  createData('Julia Hitaki', 'aaa@ddd.com', 67545757, 1580266800000),\r\n  createData('Claudia Paes', 'aaa@ddd.com', 146793744, 1580256000000),\r\n  createData('Tulio Pazos', 'aaa@ddd.com', 200962417, 1580256000000),\r\n  createData('Saulo Silva', 'aaa@ddd.com', 210147125, 1580266800000),\r\n];\r\n\r\nexport default function PacientsTable() {\r\n  return <GenericTable columns={columns} rows={rows} />;\r\n}\r\n","import clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LeftNav from './LeftNav';\r\nimport PacientsTable from './PacientsTable';\r\nimport { PhysicianPanelType } from '../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appRoot: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nfunction PhysicianPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.appRoot]: true,\r\n      })}\r\n    >\r\n      <CssBaseline />\r\n      <LeftNav\r\n        role=\"physician\"\r\n        currentPanel={PhysicianPanelType.PacientsTable}\r\n      />\r\n      <main className={classes.content}>\r\n        <PacientsTable />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhysicianPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ClinicTableColumn, ClinicTableData } from '../interfaces';\r\nimport { Clinic } from '../models/Clinic';\r\nimport GenericTable from './GenericTable';\r\nimport { OrangeButton } from './Buttons';\r\n\r\n// TODO: Need to double check if these values below are valid in the back-end\r\nenum ClinicStatus {\r\n  ACTIVE = 'Ativo',\r\n  INACTIVE = 'Inativo',\r\n}\r\n\r\nconst columns: ClinicTableColumn[] = [\r\n  // { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'Nome', minWidth: 100 },\r\n  { id: 'address_zipcode', label: 'CEP', minWidth: 100 },\r\n  { id: 'address_street', label: 'Endereço', minWidth: 100 },\r\n  { id: 'address_city', label: 'Cidade', minWidth: 100 },\r\n  { id: 'address_state', label: 'Estado', minWidth: 100 },\r\n  { id: 'phone', label: 'Telefone', minWidth: 100 },\r\n  { id: 'status', label: 'Status', minWidth: 100 },\r\n  { id: 'details', label: 'Detalhes', minWidth: 100 },\r\n];\r\n\r\nfunction setClinicsIntoTable(\r\n  clinics: Clinic[],\r\n  deleteClinic: (clinic: Clinic) => Promise<void>,\r\n  openClinicForm: (clinic?: Clinic) => void\r\n) {\r\n  return clinics.map((clinic: ClinicTableData) => {\r\n    const handleClinicDetails = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      openClinicForm(clinic);\r\n    };\r\n    const handleDeleteClinic = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      deleteClinic(clinic);\r\n    };\r\n\r\n    clinic.status = (ClinicStatus as any)[clinic.status];\r\n    clinic.details = (\r\n      <>\r\n        <IconButton onClick={handleClinicDetails}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDeleteClinic}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n    return clinic;\r\n  });\r\n}\r\n\r\ninterface ClinicsTableProps {\r\n  clinics: Clinic[];\r\n  deleteClinic: (clinic: Clinic) => Promise<void>;\r\n  openClinicForm: (clinic?: Clinic) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ClinicsTable(props: ClinicsTableProps) {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState<ClinicTableData[]>([]);\r\n\r\n  const { clinics, deleteClinic, openClinicForm } = props;\r\n\r\n  useEffect(() => {\r\n    setRows(setClinicsIntoTable(clinics, deleteClinic, openClinicForm));\r\n  }, [clinics, deleteClinic, openClinicForm]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      spacing={1}\r\n      alignItems='flex-end'\r\n      justifyContent='flex-end'\r\n    >\r\n      <OrangeButton\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={() => props.openClinicForm()}\r\n      >\r\n        Cadastrar nova clínica\r\n      </OrangeButton>\r\n      <GenericTable columns={columns} rows={rows} />\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport { OrangeButton, OutlinedButton } from './Buttons';\r\nimport { Clinic } from '../models/Clinic';\r\nimport { ClinicPayload } from '../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    ownerHeaderSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    footerSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\ninterface ClinicFormProps {\r\n  currentClinic?: Clinic;\r\n  openClinicsTablePage: () => void;\r\n  setClinic: (id: number | undefined, payload: ClinicPayload) => Promise<void>;\r\n}\r\n\r\nexport default function ClinicForm(props: ClinicFormProps) {\r\n  const { currentClinic, setClinic } = props;\r\n  const [clinicName, setClinicName] = useState<string>(\r\n    currentClinic?.name || ''\r\n  );\r\n  const [taxId, setTaxId] = useState<string>(currentClinic?.tax_id || '');\r\n  const [zipcode, setZipcode] = useState<string>(\r\n    currentClinic?.address_zipcode?.toString() || ''\r\n  );\r\n  const [streetAddress, setStreetAddress] = useState<string>(\r\n    currentClinic?.address_street || ''\r\n  );\r\n  const [city, setCity] = useState<string>(currentClinic?.address_city || '');\r\n  const [stateAddress, setStateAddress] = useState<string>(\r\n    currentClinic?.address_state || ''\r\n  );\r\n  const [phone, setPhone] = useState<string>(currentClinic?.phone || '');\r\n  // TODO: Need to get owner's data. Get clinic is not returning them\r\n  const [ownerName, setOwnerName] = useState<string>(\r\n    currentClinic?.owner?.name || ''\r\n  );\r\n  const [ownerEmail, setOwnerEmail] = useState<string>(\r\n    currentClinic?.owner?.email || ''\r\n  );\r\n  const [ownerPassword, setOwnerPassword] = useState<string>('');\r\n  const classes = useStyles();\r\n\r\n  const handleSetClinic = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      name: clinicName,\r\n      tax_id: taxId,\r\n      address_zipcode: zipcode,\r\n      address_street: streetAddress,\r\n      address_city: city,\r\n      address_state: stateAddress,\r\n      phone,\r\n      user: {\r\n        name: ownerName,\r\n        email: ownerEmail,\r\n        password: ownerPassword,\r\n      },\r\n    };\r\n    setClinic(currentClinic?.id, payload);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form onSubmit={handleSetClinic}>\r\n        <Grid\r\n          container\r\n          justifyContent='flex-start'\r\n          alignItems='flex-start'\r\n          alignContent='flex-start'\r\n        >\r\n          <Typography\r\n            variant='h6'\r\n            gutterBottom\r\n            className={classes.headerSection}\r\n          >\r\n            Dados da clínica\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              id='clinic-name-input'\r\n              label='Nome da clínica'\r\n              defaultValue={clinicName}\r\n              onChange={(e) => setClinicName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              id='tax-id-input'\r\n              label='CNPJ/CPF'\r\n              defaultValue={taxId}\r\n              onChange={(e) => setTaxId(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id='zipcode-input'\r\n              label='CEP'\r\n              defaultValue={zipcode}\r\n              onChange={(e) => setZipcode(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <TextField\r\n              fullWidth\r\n              id='street-address-input'\r\n              label='Logradouro'\r\n              defaultValue={streetAddress}\r\n              onChange={(e) => setStreetAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id='city-input'\r\n              label='Cidade'\r\n              defaultValue={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField\r\n              fullWidth\r\n              id='state-address-input'\r\n              label='Estado'\r\n              defaultValue={stateAddress}\r\n              onChange={(e) => setStateAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id='phone-input'\r\n              label='Telefone'\r\n              defaultValue={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          justifyContent='flex-start'\r\n          alignItems='flex-start'\r\n          alignContent='flex-start'\r\n        >\r\n          <Typography\r\n            variant='h6'\r\n            gutterBottom\r\n            className={clsx(classes.headerSection, classes.ownerHeaderSection)}\r\n          >\r\n            Dados da proprietário\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id='owner-name-input'\r\n              label='Nome do proprietário'\r\n              defaultValue={ownerName}\r\n              onChange={(e) => setOwnerName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id='owner-email-input'\r\n              label='Email do proprietário'\r\n              defaultValue={ownerEmail}\r\n              onChange={(e) => setOwnerEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              type='password'\r\n              id='owner-password-input'\r\n              label='Senha do proprietário'\r\n              defaultValue={ownerPassword}\r\n              onChange={(e) => setOwnerPassword(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          alignContent='center'\r\n          className={classes.footerSection}\r\n        >\r\n          <OutlinedButton\r\n            variant='outlined'\r\n            onClick={props.openClinicsTablePage}\r\n          >\r\n            Cancelar\r\n          </OutlinedButton>\r\n          <OrangeButton type='submit'>Salvar</OrangeButton>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport { getTermsOfUse, setTermsOfUse } from '../utils/endpointRequests';\r\nimport { OrangeButton } from './Buttons';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    textarea: {\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Settings() {\r\n  const classes = useStyles();\r\n  const [tou, setTou] = useState<string>('');\r\n  useEffect(() => {\r\n    async function getTOU() {\r\n      const termsOfUse: { message: string; term: string } =\r\n        await getTermsOfUse();\r\n      setTou(termsOfUse.term);\r\n    }\r\n    getTOU();\r\n  }, []);\r\n\r\n  const handleSetTerms = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setTermsOfUse(tou);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        alignContent=\"flex-start\"\r\n      >\r\n        <Typography variant=\"h6\" gutterBottom className={classes.headerSection}>\r\n          Termos de uso\r\n        </Typography>\r\n      </Grid>\r\n      <form onSubmit={handleSetTerms}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          alignContent=\"flex-end\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <TextareaAutosize\r\n              minRows={10}\r\n              placeholder=\"Digite os termos de uso aqui...\"\r\n              defaultValue={tou}\r\n              className={classes.textarea}\r\n              onChange={(e) => setTou(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <OrangeButton type=\"submit\">Salvar</OrangeButton>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Dispatch } from 'react';\r\nimport { ClinicPayload } from '../interfaces';\r\nimport { Clinic } from '../models/Clinic';\r\nimport { baseUrl, getAuth } from '../utils/endpointRequests';\r\n\r\nexport enum IActions {\r\n  CLINICS_FETCHED,\r\n  // CLINIC_FETCHED,\r\n  CLINIC_CREATED,\r\n  CLINIC_DELETED,\r\n  CLINIC_UPDATED,\r\n}\r\n\r\nexport interface IClinicsDispatchProps {\r\n  type: IActions;\r\n  clinics: Clinic[];\r\n}\r\n\r\nexport function getClinics() {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    }).then((data) => data.json());\r\n\r\n    dispatch({ type: IActions.CLINICS_FETCHED, clinics: response.clinics });\r\n  };\r\n}\r\n\r\n// export async function getClinic(id: number) {\r\n//   return fetch(`${baseUrl}/api/v1/clinics/${id}`, {\r\n//     method: 'GET',\r\n//     headers: {\r\n//       Authorization: `Bearer ${getAuth().token}`,\r\n//     },\r\n//   }).then((data) => data.json());\r\n// }\r\n\r\nexport function deleteClinic(clinic: Clinic) {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics/${clinic.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.CLINIC_DELETED, clinics: [clinic] });\r\n    }\r\n  };\r\n}\r\n\r\nexport function createClinic(clinic: ClinicPayload) {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'applciation/json',\r\n      },\r\n      body: JSON.stringify(clinic),\r\n    }).then((data) => data.json());\r\n    dispatch({ type: IActions.CLINIC_CREATED, clinics: [response.clinic] });\r\n  };\r\n}\r\n\r\nexport function updateClinic(id: number, clinic: ClinicPayload) {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'applciation/json',\r\n      },\r\n      body: JSON.stringify(clinic),\r\n    }).then((data) => data.json());\r\n\r\n    dispatch({ type: IActions.CLINIC_UPDATED, clinics: [response.clinic] });\r\n  };\r\n}\r\n","import { IActions, IClinicsDispatchProps } from '../actions/clinic';\r\nimport { Clinic } from '../models/Clinic';\r\n\r\nexport default function clinicReducer(\r\n  state: Clinic[],\r\n  action: IClinicsDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.CLINICS_FETCHED:\r\n      return action.clinics;\r\n    case IActions.CLINIC_CREATED:\r\n      return [...state, ...action.clinics];\r\n    case IActions.CLINIC_DELETED:\r\n      return state.filter(\r\n        (clinic: Clinic) => clinic.id !== action.clinics[0].id\r\n      );\r\n    case IActions.CLINIC_UPDATED:\r\n      return state.map((clinic: Clinic) => {\r\n        if (clinic.id === action.clinics[0].id) {\r\n          return action.clinics[0];\r\n        }\r\n        return clinic;\r\n      });\r\n  }\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LeftNav from './LeftNav';\r\nimport ClinicsTable from './ClinicsTable';\r\nimport ClinicForm from './ClinicForm';\r\nimport { AdminPanelType, ClinicPayload } from '../interfaces';\r\nimport { Clinic } from '../models/Clinic';\r\nimport Settings from './Settings';\r\nimport clinicReducer from '../reducers/clinic';\r\nimport {\r\n  createClinic,\r\n  deleteClinic,\r\n  getClinics,\r\n  updateClinic,\r\n} from '../actions/clinic';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appRoot: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nfunction AdminPage() {\r\n  const classes = useStyles();\r\n  const [panel, setPanel] = useState<AdminPanelType>(\r\n    AdminPanelType.ClinicsTable\r\n  );\r\n  const [currentClinic, setCurrentClinic] = useState<Clinic>();\r\n  const [clinics, dispatch] = useReducer(clinicReducer, []);\r\n\r\n  const setClinic = async (id: number | undefined, payload: ClinicPayload) => {\r\n    if (id) {\r\n      await updateClinic(id, payload)(dispatch);\r\n    } else {\r\n      await createClinic(payload)(dispatch);\r\n    }\r\n    setPanel(AdminPanelType.ClinicsTable);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClinics()(dispatch);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.appRoot]: true,\r\n      })}\r\n    >\r\n      <CssBaseline />\r\n      <LeftNav\r\n        role='admin'\r\n        currentPanel={panel}\r\n        openClinicsTablePage={() => setPanel(AdminPanelType.ClinicsTable)}\r\n        openTermsOfUsePage={() => setPanel(AdminPanelType.Settings)}\r\n      />\r\n      <main className={classes.content}>\r\n        {panel === AdminPanelType.ClinicsTable && (\r\n          <ClinicsTable\r\n            clinics={clinics}\r\n            deleteClinic={(clinic: Clinic) => deleteClinic(clinic)(dispatch)}\r\n            openClinicForm={(clinic?: Clinic) => {\r\n              setCurrentClinic(clinic);\r\n              setPanel(AdminPanelType.ClinicForm);\r\n            }}\r\n          />\r\n        )}\r\n        {panel === AdminPanelType.ClinicForm && (\r\n          <ClinicForm\r\n            currentClinic={currentClinic}\r\n            openClinicsTablePage={() => setPanel(AdminPanelType.ClinicsTable)}\r\n            setClinic={setClinic}\r\n          />\r\n        )}\r\n        {panel === AdminPanelType.Settings && <Settings />}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { UserTableColumn, UserTableData } from '../interfaces';\r\nimport GenericTable from './GenericTable';\r\nimport { OrangeButton } from './Buttons';\r\nimport { User } from '../models/User';\r\n\r\nconst columns: UserTableColumn[] = [\r\n  // { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'Nome', minWidth: 100 },\r\n  { id: 'tax_id', label: 'CPF/CNPJ', minWidth: 50 },\r\n  { id: 'email', label: 'E-mail', minWidth: 100 },\r\n  { id: 'address_zipcode', label: 'CEP', minWidth: 50 },\r\n  { id: 'address_street', label: 'Endereço', minWidth: 100 },\r\n  { id: 'address_city', label: 'Cidade', minWidth: 50 },\r\n  { id: 'address_state', label: 'Estado', minWidth: 10 },\r\n  { id: 'crm', label: 'CRM', minWidth: 50 },\r\n  { id: 'phone', label: 'Telefone', minWidth: 50 },\r\n  { id: 'details', label: 'Detalhes', minWidth: 50 },\r\n];\r\n\r\nfunction setUsersIntoTable(\r\n  users: User[],\r\n  deleteUser: (user: User) => Promise<void>\r\n) {\r\n  return users.map((user: UserTableData) => {\r\n    const handleUserDetails = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    };\r\n    const handleDeleteUser = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      deleteUser(user);\r\n    };\r\n\r\n    user.details = (\r\n      <>\r\n        <IconButton onClick={handleUserDetails}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDeleteUser}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n    return user;\r\n  });\r\n}\r\n\r\ninterface UsersTableProps {\r\n  users: User[];\r\n  deleteUser: (user: User) => Promise<void>;\r\n  openUserForm: (user?: User) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\nexport default function UsersTable(props: UsersTableProps) {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState<UserTableData[]>([]);\r\n\r\n  const { deleteUser, users } = props;\r\n\r\n  useEffect(() => {\r\n    setRows(setUsersIntoTable(props.users, deleteUser));\r\n  }, [props.users]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      spacing={1}\r\n      alignItems='flex-end'\r\n      justifyContent='flex-end'\r\n    >\r\n      <OrangeButton\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={() => props.openUserForm()}\r\n      >\r\n        Cadastrar novo Usuário\r\n      </OrangeButton>\r\n      <GenericTable columns={columns} rows={rows} />\r\n    </Grid>\r\n  );\r\n}\r\n","import { Dispatch } from 'react';\r\nimport { UserPayload } from '../interfaces';\r\nimport { User } from '../models/User';\r\nimport { baseUrl, getAuth } from '../utils/endpointRequests';\r\n\r\nexport enum IActions {\r\n  USERS_FETCHED,\r\n  // USER_FETCHED,\r\n  USER_CREATED,\r\n  USER_DELETED,\r\n  USER_UPDATED,\r\n}\r\n\r\nexport interface IUsersDispatchProps {\r\n  type: IActions;\r\n  users: User[];\r\n}\r\n\r\nexport function getUsers() {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/users`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    }).then((data) => data.json());\r\n\r\n    dispatch({ type: IActions.USERS_FETCHED, users: response.users });\r\n  };\r\n}\r\n\r\nexport function deleteUser(user: User) {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/users/${user.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.USER_DELETED, users: [user] });\r\n    }\r\n  };\r\n}\r\n\r\nexport function createUser(user: UserPayload) {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/users`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'applciation/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then((data) => data.json());\r\n    dispatch({ type: IActions.USER_CREATED, users: [response.user] });\r\n  };\r\n}\r\n\r\nexport function updateUser(id: number, user: UserPayload) {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/users/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'applciation/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then((data) => data.json());\r\n\r\n    dispatch({ type: IActions.USER_UPDATED, users: [response.user] });\r\n  };\r\n}\r\n","import { IActions, IUsersDispatchProps } from '../actions/user';\r\nimport { User } from '../models/User';\r\n\r\nexport default function userReducer(\r\n  state: User[],\r\n  action: IUsersDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.USERS_FETCHED:\r\n      return action.users;\r\n    case IActions.USER_CREATED:\r\n      return [...state, ...action.users];\r\n    case IActions.USER_DELETED:\r\n      return state.filter((user: User) => user.id !== action.users[0].id);\r\n    case IActions.USER_UPDATED:\r\n      return state.map((user: User) => {\r\n        if (user.id === action.users[0].id) {\r\n          return action.users[0];\r\n        }\r\n        return user;\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { OrangeButton, OutlinedButton } from './Buttons';\r\nimport { User } from '../models/User';\r\nimport { UserPayload } from '../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    ownerHeaderSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    footerSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\ninterface UserFormProps {\r\n  currentUser?: User;\r\n  openUsersTablePage: () => void;\r\n  setUser: (id: number | undefined, payload: UserPayload) => Promise<void>;\r\n}\r\n\r\nconst roleOptions = [\r\n  { value: 'MANAGER', label: 'Gerente' },\r\n  { value: 'PHYSICIAN', label: 'Médico' },\r\n  { value: 'RECEPTIONIST', label: 'Recepcionista' },\r\n];\r\n\r\nexport default function UserForm(props: UserFormProps) {\r\n  const { currentUser, setUser } = props;\r\n  const [userName, setUserName] = useState<string>(currentUser?.name || '');\r\n  const [taxId, setTaxId] = useState<string>(currentUser?.tax_id || '');\r\n  const [email, setEmail] = useState<string>(currentUser?.email || '');\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  const [zipcode, setZipcode] = useState<string>(\r\n    currentUser?.address_zipcode?.toString() || ''\r\n  );\r\n  const [streetAddress, setStreetAddress] = useState<string>(\r\n    currentUser?.address_street || ''\r\n  );\r\n  const [city, setCity] = useState<string>(currentUser?.address_city || '');\r\n  const [stateAddress, setStateAddress] = useState<string>(\r\n    currentUser?.address_state || ''\r\n  );\r\n  const [phone, setPhone] = useState<string>(currentUser?.phone || '');\r\n  const [crm, setCrm] = useState<string>(currentUser?.crm || '');\r\n  const [role, setRole] = useState<string>(currentUser?.role[0] || '');\r\n  const classes = useStyles();\r\n\r\n  const handleSetUser = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      name: userName,\r\n      tax_id: taxId,\r\n      email,\r\n      password,\r\n      address_zipcode: zipcode,\r\n      address_street: streetAddress,\r\n      address_city: city,\r\n      address_state: stateAddress,\r\n      phone,\r\n      crm,\r\n      role,\r\n    };\r\n    setUser(currentUser?.id, payload);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form onSubmit={handleSetUser}>\r\n        <Grid\r\n          container\r\n          justifyContent='flex-start'\r\n          alignItems='flex-start'\r\n          alignContent='flex-start'\r\n        >\r\n          <Typography\r\n            variant='h6'\r\n            gutterBottom\r\n            className={classes.headerSection}\r\n          >\r\n            Dados do Usuário\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id='user-name-input'\r\n              label='Nome do usuário'\r\n              defaultValue={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id='tax-id-input'\r\n              label='CNPJ/CPF'\r\n              defaultValue={taxId}\r\n              onChange={(e) => setTaxId(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              id='crm-input'\r\n              label='CRM'\r\n              defaultValue={crm}\r\n              onChange={(e) => setCrm(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id='email-input'\r\n              label='E-mail'\r\n              defaultValue={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id='tax-id-input'\r\n              label='Senha'\r\n              defaultValue={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <FormControl>\r\n              <InputLabel htmlFor='role-select'>Perfil</InputLabel>\r\n              <Select\r\n                native\r\n                id='role-select'\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value as string)}\r\n              >\r\n                {roleOptions.map((roleOption) => (\r\n                  <option key={roleOption.value} value={roleOption.value}>\r\n                    {roleOption.label}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id='zipcode-input'\r\n              label='CEP'\r\n              defaultValue={zipcode}\r\n              onChange={(e) => setZipcode(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <TextField\r\n              fullWidth\r\n              id='street-address-input'\r\n              label='Logradouro'\r\n              defaultValue={streetAddress}\r\n              onChange={(e) => setStreetAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id='city-input'\r\n              label='Cidade'\r\n              defaultValue={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField\r\n              fullWidth\r\n              id='state-address-input'\r\n              label='Estado'\r\n              defaultValue={stateAddress}\r\n              onChange={(e) => setStateAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id='phone-input'\r\n              label='Telefone'\r\n              defaultValue={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justifyContent='center'\r\n          alignItems='center'\r\n          alignContent='center'\r\n          className={classes.footerSection}\r\n        >\r\n          <OutlinedButton variant='outlined' onClick={props.openUsersTablePage}>\r\n            Cancelar\r\n          </OutlinedButton>\r\n          <OrangeButton type='submit'>Salvar</OrangeButton>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useEffect, useReducer, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LeftNav from './LeftNav';\r\nimport { ManagerPanelType, UserPayload } from '../interfaces';\r\nimport UsersTable from './UsersTable';\r\nimport userReducer from '../reducers/user';\r\nimport { getUsers, deleteUser, updateUser, createUser } from '../actions/user';\r\nimport { User } from '../models/User';\r\nimport UserForm from './UserForm';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appRoot: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ManagerPage() {\r\n  const classes = useStyles();\r\n  const [panel, setPanel] = useState<ManagerPanelType>(\r\n    ManagerPanelType.UsersTable\r\n  );\r\n  const [currentUser, setCurrentUser] = useState<User>();\r\n  const [users, dispatch] = useReducer(userReducer, []);\r\n\r\n  useEffect(() => {\r\n    getUsers()(dispatch);\r\n  }, []);\r\n\r\n  const setUser = async (id: number | undefined, payload: UserPayload) => {\r\n    if (id) {\r\n      await updateUser(id, payload)(dispatch);\r\n    } else {\r\n      await createUser(payload)(dispatch);\r\n    }\r\n    setPanel(ManagerPanelType.UsersTable);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.appRoot]: true,\r\n      })}\r\n    >\r\n      <CssBaseline />\r\n      <LeftNav role='manager' currentPanel={panel} />\r\n      <main className={classes.content}>\r\n        {panel === ManagerPanelType.UsersTable && (\r\n          <UsersTable\r\n            users={users}\r\n            deleteUser={(user: User) => deleteUser(user)(dispatch)}\r\n            openUserForm={(user?: User) => {\r\n              setCurrentUser(user);\r\n              setPanel(ManagerPanelType.UserForm);\r\n            }}\r\n          />\r\n        )}\r\n        {panel === ManagerPanelType.UserForm && (\r\n          <UserForm\r\n            setUser={setUser}\r\n            openUsersTablePage={() => setPanel(ManagerPanelType.UsersTable)}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  BrowserRouter,\r\n  Redirect,\r\n  Route,\r\n  RouteProps,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport Login from './components/Login';\r\nimport PhysicianPage from './components/PhysicianPage';\r\nimport useAuth from './hooks/useAuth';\r\nimport { RolesEnum } from './interfaces';\r\nimport { isValidRole } from './utils/loggedUser';\r\nimport AdminPage from './components/AdminPage';\r\n\r\nimport './App.css';\r\nimport ManagerPage from './components/ManagerPage';\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useAuth();\r\n\r\n  const currentRole = auth?.user?.roles[0];\r\n  const defaultPath = isValidRole(currentRole)\r\n    ? `/${RolesEnum[currentRole]}`\r\n    : '/login';\r\n\r\n  function PrivateRoute({ children, ...rest }: RouteProps) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          auth.token ? (\r\n            rest.path?.includes(defaultPath) ? (\r\n              children\r\n            ) : (\r\n              <Redirect to={defaultPath} />\r\n            )\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path='/login'>\r\n            <Login setAuth={setAuth} />\r\n          </Route>\r\n          <Route exact path='/'>\r\n            <Redirect to={defaultPath} />\r\n          </Route>\r\n          <PrivateRoute path='/admin'>\r\n            <AdminPage />\r\n          </PrivateRoute>\r\n          <PrivateRoute path='/manager'>\r\n            <ManagerPage />\r\n          </PrivateRoute>\r\n          <PrivateRoute path='/physician'>\r\n            <PhysicianPage />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { RolesEnum } from '../interfaces';\r\n\r\nexport function isValidRole(value: string): value is keyof typeof RolesEnum {\r\n  return value in RolesEnum;\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}