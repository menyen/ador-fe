{"version":3,"sources":["interfaces.ts","image/mini-logo-white.svg","image/logo.svg","components/Buttons.tsx","utils/loggedUser.ts","utils/alert.ts","utils/clinicSlug.ts","components/Login.tsx","image/mini-logo.svg","components/LeftNav.tsx","components/GenericTable.tsx","components/common/PatientsTable.tsx","actions/patient.ts","actions/questionaire.ts","reducers/patient.ts","reducers/questionaire.ts","actions/user.ts","reducers/user.ts","components/common/PatientForm.tsx","components/patient/BodyMapBPI.tsx","components/common/PatientSummary.tsx","utils/reportTable.tsx","components/common/inner-report/EPCInnerReport.tsx","components/common/form-reports/EPCReport.tsx","components/common/inner-report/DN4InnerReport.tsx","components/common/form-reports/DN4Report.tsx","components/common/inner-report/HADInnerReport.tsx","components/common/form-reports/HADReport.tsx","components/common/inner-report/OswestryInnerReport.tsx","components/common/form-reports/OswestryReport.tsx","components/patient/BodyMapFibromialgia.tsx","components/common/inner-report/FibromialgiaInnerReport.tsx","components/common/form-reports/FibromialgiaReport.tsx","components/common/inner-report/IADInnerReport.tsx","components/common/form-reports/IADReport.tsx","components/common/inner-report/SBSTInnerReport.tsx","components/common/form-reports/SBSTReport.tsx","components/common/inner-report/PSEQInnerReport.tsx","components/common/form-reports/PSEQReport.tsx","components/common/inner-report/WOMACInnerReport.tsx","components/common/form-reports/WOMACReport.tsx","components/common/inner-report/SPADIInnerReport.tsx","components/common/form-reports/SPADIReport.tsx","components/common/inner-report/SF36InnerReport.tsx","components/common/form-reports/SF36Report.tsx","components/common/inner-report/BPIInnerReport.tsx","components/common/form-reports/BPIReport.tsx","components/common/AllReports.tsx","components/common/PatientReports.tsx","actions/report.ts","reducers/report.ts","components/common/ReportsTable.tsx","components/physician/PhysicianPage.tsx","components/admin/ClinicsTable.tsx","hooks/useAuth.ts","components/admin/ClinicForm.tsx","actions/term.ts","reducers/term.ts","components/admin/Settings.tsx","actions/clinic.ts","reducers/clinic.ts","components/admin/AdminPage.tsx","components/manager/UsersTable.tsx","components/manager/UserForm.tsx","components/manager/ManagerPage.tsx","components/patient/OnBoard.tsx","image/onboard-step-1.svg","image/onboard-step-2.svg","image/onboard-step-3.svg","components/patient/EPC.tsx","components/patient/QuestionaireList.tsx","image/logo-white.svg","components/patient/DN4.tsx","components/patient/OSWESTRY.tsx","components/patient/HAD.tsx","components/patient/SF36.tsx","components/patient/BPI.tsx","components/patient/Fibromialgia.tsx","components/patient/IAD.tsx","components/patient/SBST.tsx","components/patient/PSEQ.tsx","components/patient/WOMAC.tsx","components/patient/SPADI.tsx","components/patient/PatientPage.tsx","components/receptionist/ReceptionistPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoginPanelType","AdminPanelType","PhysicianPanelType","ReceptionistPanelType","ManagerPanelType","PatientReportPanelType","PatientPanel","RolesEnum","ADMIN","MANAGER","PHYSICIAN","RECEPTIONIST","PATIENT","QUESTIONAIRE_LIST","value","label","OutlinedButton","withStyles","theme","root","color","backgroundColor","border","maxWidth","margin","spacing","Button","OrangeButton","palette","getContrastText","deepOrange","baseUrl","process","AuthContext","createContext","token","getAuth","JSON","parse","localStorage","getItem","AlertContext","ClinicSlugContext","useStyles","makeStyles","createStyles","flexGrow","loginPatient","height","paperLoginPatient","width","gridLoginPatient","padding","left","justifyContent","alignItems","display","right","paper","boxShadow","contentBox","centralize","textAlign","marginBottom","marginTop","input","termsAndPolicy","fontSize","link","textDecoration","alignRight","forgotLink","modal","modalPaper","background","shadows","overflow","textarea","loginUser","credentials","setAlertMessage","a","fetch","method","headers","body","stringify","response","ok","json","error","message","tax_id","clinic_slug","getTermsNoLogin","DefaultButton","textTransform","LoginPatientButton","green","InitialPanel","props","classes","useState","term","terms","setTerms","useContext","React","openModal","setOpenModal","handleOpenModal","event","preventDefault","fetchedTerms","handleCloseModal","Paper","className","clsx","Grid","container","item","xs","src","logo","alt","Typography","variant","gutterBottom","onClick","nextPanel","size","Link","href","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","TextareaAutosize","disabled","minRows","defaultValue","LoginPanel","setAuth","email","setEmail","password","setPassword","history","useHistory","location","useLocation","handleLoginSubmit","e","state","from","pathname","replace","onSubmit","TextField","fullWidth","onChange","target","type","ForgotPasswordPanel","setEmailForgotPsw","handleForgotPswSubmit","taxId","setTaxId","setClinicSlug","useParams","component","align","Login","Initial","panel","setPanel","isPatient","Slide","direction","mountOnEnter","unmountOnExit","minilogo","ForgotPassword","drawerWidth","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","collapsedToolbar","paddingLeft","toolbar","mixins","content","bottomButton","search","position","borderRadius","shape","alpha","common","white","marginRight","searchIcon","pointerEvents","inputRoot","inputInput","LeftNav","auth","useTheme","setOpen","role","currentPanel","AppBar","Toolbar","IconButton","edge","InputBase","placeholder","inputProps","Drawer","Divider","List","ListItem","button","selected","ClinicsTable","ClinicForm","includes","openClinicsTablePage","ListItemIcon","ListItemText","primary","Settings","openTermsOfUsePage","UsersTable","PatientsTable","ReportsTable","window","user","push","maxHeight","tableHeadCell","black","tableHeadCheckbox","page","setPage","rowsPerPage","setRowsPerPage","setSelected","columns","rows","shouldHideCheckboxes","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","Checkbox","indeterminate","length","checked","newSelecteds","map","n","column","style","minWidth","TableBody","slice","row","index","isItemSelected","indexOf","labelId","hover","tabIndex","cpf","selectedIndex","newSelected","concat","handleClick","format","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","labelRowsPerPage","toString","padStart","regex","arg1","arg2","arg3","arg4","setRows","deletePatient","openPatientForm","patients","useEffect","patient","handlePatientDetails","stopPropagation","handleDeletePatient","details","setPatientsIntoTable","IActions","getPatients","dispatch","Authorization","data","PATIENTS_FETCHED","PATIENT_DELETED","createPatient","PATIENT_CREATED","updatePatient","PATIENT_UPDATED","patientReducer","action","filter","getQuestionaires","patient_id","QUESTIONAIRES_FETCHED","questionaires","forms","sendQuestionaires","clearQuestionaires","questionaireReducer","QUESTIONAIRES_SENT","getUsers","USERS_FETCHED","users","createUser","USER_CREATED","updateUser","dataResponse","USER_UPDATED","userReducer","USER_DELETED","headerSection","ownerHeaderSection","footerSection","PatientForm","currentPatient","setPatient","name","patientName","setPatientName","phone","setPhone","birthdate","setBirthdate","gender","setGender","physician_id","physicianId","setPhysicianId","questionairesClassified","reduce","acc","q","initialQuestionaires","Object","values","status","setQuestionaires","useReducer","physicians","physiciansDispatch","handleSetPatient","patientPayload","handleCheckboxOnChange","alignContent","InputLabel","htmlFor","FormControl","Select","native","Number","physician","FormGroup","FormControlLabel","control","openPatientsTablePage","colorArray","BodyMapBPI","preSelectedValues","markBodyPartsForBPI","disabledBodyMapClick","Array","fill","bodyMap","setBodyMap","isFrontSide","setIsBodyFrontSide","handleClickArea","bodyPartNumber","s","newValues","frontSide","xmlns","viewBox","transform","d","fontFamily","x","y","stroke","strokeWidth","strokeLinecap","fontWeight","rx","cursor","backSide","circularProgress","circle","bottom","grey","dn4Slider","oswLinearProgress","oswPercentage","hadTextResult","slider","divider","fibromialgiaDiagnosis","BorderLinearProgress","colorPrimary","bar","LinearProgress","PatientSummary","setReportPanel","epcForms","epcLatestForm","epcResult","results","scoreEPC","score","epcCard","Date","updated_at","toLocaleDateString","Box","CircularProgress","thickness","top","text","EPC","dn4Forms","dn4LatestForm","dn4Result","scoreDN4","marks","dn4Card","Slider","step","valueLabelDisplay","max","DN4","oswForms","oswLatestForm","oswResult","scorOSW","oswCard","OSWESTRY","hadForms","hadLatestForm","hadResult","hadAnxiety","ansiedade","hadDepression","depressao","hadCard","HAD","bpiForms","bpiLatestForm","bpiResult","gradesLabels","percentagesLabels","bpiCard","body_pain","area","pain_level","grades","grade","gradeIndex","min","treatments","treatment","treatmentIndex","secondary","started_at","frequency","percentages","percentage","percentageIndex","paragraph","sf36Forms","chartData","useMemo","sf36","raw_scale","result","primaryAxis","getValue","datum","secondaryAxes","elementType","sf36Card","paddingBottom","options","fibromialgiaForms","fibromialgiaLatestForm","fibromialgiaResult","fibromialgiaCard","diagnosis","criteria","idg_score","ess_score","booleans","FIBROMIALGIA","iadForms","iadLatestForm","iadCard","IAD","sbstForms","sbstLatestForm","sbstResult","sbstCard","total_points","psychosocial_points","SBST","pseqForms","pseqLatestForm","pseqResult","pseqCard","PSEQ","womacForms","womacLatestForm","womacResult","womacCard","function_index","pain_index","stiffness_index","total_index","total_percentage","total_ratio","WOMAC","spadiForms","spadiLatestForm","spadiResult","spadiCard","disability","pain","total","SPADI","setTimeout","tickLabelsY","document","querySelectorAll","indexOfLabel50","el","textContent","setAttribute","simpleColumns","noResultColumns","allResultsColumns","spadiColumns","setDataIntoSimpleTable","selectForm","form","date","setDataIntoNoResultTable","EPCFormItem","EPCSlider","ECPSliderLabel","sliderSubLabel","lineHeight","EPCInnerReport","selectedForm","answers","textEPC","lg","question","EPCReport","setSelectedForm","hideBreadcrumb","Breadcrumbs","goToSummary","formItem","referenceInfo","formLabel","DN4InnerReport","textDN4","questions","title","sections","getRealIndex","questionIndex","sectionIndex","i","qIndex","section","sIndex","FormLabel","RadioGroup","Radio","DN4Report","HADInnerReport","alternatives","find","HADReport","result_anxiety","result_depression","OswestryInnerReport","scoreOswestry","textOswestry","altIndex","OswestryReport","BodyMapFibromialgia","markBodyParts","getAreaColor","areaNumber","cx","cy","opacity","ry","r","radioSpanLabel","radioLabel","radioGroup","FibromialgiaInnerReport","ess","idg","bodyPain","alternative","aIndex","labelPlacementBottom","labelPlacement","toUpperCase","FibromialgiaReport","IADFormItem","IADSlider","IADInnerReport","IADReport","SBSTInnerReport","SBSTReport","PSEQFormItem","PSEQSlider","PSEQInnerReport","scorePSEQ","textPSEQ","PSEQReport","WOMACInnerReport","WOMACReport","sliderMakrLabel","sectionElement","SPADIInnerReport","subtitle","markLabel","SPADIReport","result_disability","result_pain","result_total","SF36InnerReport","SF36Report","BPIInnerReport","BPIReport","selectRenderByType","AllReports","setDataIntoAllResultTable","PatientReports","componentRef","useRef","initialReportPanel","Summary","reactToPrintContent","useCallback","current","handlePrint","useReactToPrint","documentTitle","toLocaleString","removeAfterPrint","ref","SF36","BPI","All","getReports","start_date","end_date","url","URL","urlParamObject","had_depression","had_anxiety","URLSearchParams","Accept","REPORTS_FETCHED","reports","clearReports","reportResultOptions","HAD_DEPRESSION","HAD_ANXIETY","today","lastMonth","setMonth","getMonth","reporttype","reportReducer","reportsDispatch","patientId","setPatientId","getFullYear","getDate","startDate","setStartDate","endDate","setEndDate","reportType","setReportType","setResult","searchReports","hasOwnProperty","String","resultOption","appRoot","PhysicianPage","ClinicStatus","setCurrentPatient","questionairesDispatch","questionairePayload","newPatient","CssBaseline","useAuth","tokenString","userAuth","setItem","removeItem","clinics","deleteClinic","openClinicForm","clinic","handleClinicDetails","handleDeleteClinic","setClinicsIntoTable","currentClinic","setClinic","clinicName","setClinicName","address_zipcode","zipcode","setZipcode","address_street","streetAddress","setStreetAddress","address_city","city","setCity","address_state","stateAddress","setStateAddress","owner","ownerName","setOwnerName","ownerEmail","setOwnerEmail","ownerPassword","setOwnerPassword","handleSetClinic","payload","setTermsOfUse","TERMS_UPDATED","termsReducer","TERMS_FETCHED","tou","getTermsOfUse","handleSetTerms","createClinic","CLINIC_CREATED","updateClinic","CLINIC_UPDATED","clinicReducer","CLINICS_FETCHED","CLINIC_DELETED","AdminPage","setCurrentClinic","getClinics","deleteUser","openUserForm","handleUserDetails","handleDeleteUser","setUsersIntoTable","roleOptions","UserForm","currentUser","setUser","userName","setUserName","crm","setCrm","currentRole","roles","isArray","setRole","handleSetUser","pseudoPayload","roleOption","openUsersTablePage","ManagerPage","setCurrentUser","usersDispatch","patientDispatch","tourSteps","imgPath","onboard","paddingTop","tourTitle","tourLabel","img","greenColor","OnBoard","activeStep","setActiveStep","maxSteps","setHasOnboardedToTrue","square","elevation","MobileStepper","steps","nextButton","prevActiveStep","KeyboardArrowRight","backButton","KeyboardArrowLeft","EPCAppBar","EPCTitle","EPCBodyContent","EPCForm","EPCFooter","EPCReferenceInfo","goToQuestionaire","EPCFormPanel","DESCRIPTION","currentEPCPanel","setCurrentEPCPanel","setAnswers","setCurrentPanel","INITIAL","ArrowBack","FORM","v","newAnswers","postEPCAnswers","patientAuth","BannerPanelType","logoWhite","profileMenu","profileButton","expandIcon","expandIconProfile","questionaireList","textField","BannerMenu","Description","Accordion","defaultExpanded","AccordionSummary","patientInfo","AccordionDetails","Profile","QuestionaireList","clinicSlug","getQuestionairesForPatient","mainColor","bodyContent","footer","progressBarRoot","progressBarLine","handleChange","postDN4Answers","some","undefined","postOSWAnswers","alternativeGreen","alternativeYellow","yellow","alternativeOrange","orange","alternativeRed","red","GreenRadio","YellowRadio","OrangeRadio","RedRadio","CustomRadio","getRadioColorByValue","postHADAnswers","numberButtonPrimary","numberButtonSecondary","numberSpacing","numberOptionLabel","colorSecondary","postSF36Answers","formControl","treatmentItem","_","cloneDeep","isEqual","arrayIndex","treatIndex","postBPIAnswers","getBooleansRealIndex","Fibromialgia","pain_flag","postFibromialgiaAnswers","IADAppBar","IADTitle","IADBodyContent","IADForm","IADFooter","IADReferenceInfo","IADFormPanel","currentIADPanel","setCurrentIADPanel","postIADAnswers","SBSTAppBar","SBSTTitle","SBSTBodyContent","SBSTForm","SBSTReferenceInfo","SBSTFormPanel","currentSBSTPanel","setCurrentSBSTPanel","postSBSTAnswers","PSEQAppBar","PSEQTitle","PSEQBodyContent","PSEQForm","PSEQFooter","PSEQReferenceInfo","PSEQFormPanel","currentPSEQPanel","setCurrentPSEQPanel","postPSEQAnswers","postWOMACAnswers","postSPADIAnswers","PatientPage","hasGoneOnboard","getHasOnboardedLocalStorage","hasOnboarded","setHasOnboarded","isOnboard","ReceptionistPage","App","alertMessage","defaultPath","PrivateRoute","children","rest","render","path","to","Provider","Snackbar","autoHideDuration","reason","severity","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab306a0e.chunk.js","sourcesContent":["import { Clinic } from './models/Clinic';\r\nimport { Patient } from './models/Patient';\r\nimport { PatientForm } from './models/PatientForm';\r\nimport { User } from './models/User';\r\nimport { LoggedPatient, UserAuth } from './models/UserAuth';\r\nexport interface TableColumn<K extends string = string> {\r\n  id: K;\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport type TableRow<K extends string = string, T = any> = Record<K, T>;\r\n\r\nexport interface TableProps<K extends string = string, L extends K = K> {\r\n  columns: TableColumn<L>[];\r\n  rows: TableRow<K>[];\r\n  shouldHideCheckboxes?: boolean;\r\n}\r\n\r\nexport interface PanelCommonProps {\r\n  nextPanel: () => void;\r\n}\r\n\r\nexport interface PatientTableColumn {\r\n  id:\r\n    | 'name'\r\n    | 'email'\r\n    | 'tax_id'\r\n    | 'phone'\r\n    | 'birthdate'\r\n    | 'gender'\r\n    | 'physician_id'\r\n    | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport interface PatientTableData extends Patient {\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface ClinicTableColumn {\r\n  id:\r\n    | 'id'\r\n    | 'name'\r\n    | 'tax_id'\r\n    | 'address_zipcode'\r\n    | 'address_street'\r\n    | 'address_city'\r\n    | 'address_state'\r\n    | 'phone'\r\n    | 'owner_id'\r\n    | 'status'\r\n    | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport interface ClinicTableData extends Clinic {\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface UserTableColumn {\r\n  id:\r\n    | 'id'\r\n    | 'name'\r\n    | 'tax_id'\r\n    | 'email'\r\n    | 'address_zipcode'\r\n    | 'address_street'\r\n    | 'address_city'\r\n    | 'address_state'\r\n    | 'crm'\r\n    | 'phone'\r\n    | 'role'\r\n    | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n  format?: (value: number) => string;\r\n}\r\n\r\nexport interface UserTableData extends User {\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface SimpleReportTableColumn {\r\n  id: 'id' | 'date' | 'result' | 'patient' | 'type' | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n}\r\n\r\nexport interface SimpleReportTableData {\r\n  date: string;\r\n  result: string;\r\n  patient?: string;\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface NoResultReportTableData {\r\n  date: string;\r\n  patient?: string;\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface HADReportTableColumn {\r\n  id:\r\n    | 'id'\r\n    | 'date'\r\n    | 'result_anxiety'\r\n    | 'result_depression'\r\n    | 'patient'\r\n    | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n}\r\n\r\nexport interface SPADIReportTableColumn {\r\n  id:\r\n    | 'id'\r\n    | 'date'\r\n    | 'result_disability'\r\n    | 'result_pain'\r\n    | 'result_total'\r\n    | 'patient'\r\n    | 'details';\r\n  label: string;\r\n  minWidth?: number;\r\n}\r\n\r\nexport interface HADReportTableData {\r\n  date: string;\r\n  result_anxiety: string;\r\n  result_depression: string;\r\n  patient?: string;\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface SPADIReportTableData {\r\n  date: string;\r\n  result_disability: string;\r\n  result_pain: string;\r\n  result_total: string;\r\n  patient?: string;\r\n  details?: JSX.Element;\r\n}\r\n\r\nexport interface Credentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport enum LoginPanelType {\r\n  Initial,\r\n  Login,\r\n  ForgotPassword,\r\n  CreatePassword,\r\n}\r\n\r\nexport enum AdminPanelType {\r\n  ClinicsTable,\r\n  ClinicForm,\r\n  Settings,\r\n}\r\n\r\nexport enum PhysicianPanelType {\r\n  PatientsTable,\r\n  PatientForm,\r\n  ReceptionistsTable,\r\n  ReportsTable,\r\n}\r\n\r\nexport enum ReceptionistPanelType {\r\n  PatientsTable,\r\n  PatientForm,\r\n  ReportsTable,\r\n}\r\n\r\nexport enum ManagerPanelType {\r\n  UsersTable,\r\n  UserForm,\r\n  PatientsTable,\r\n  PatientForm,\r\n  ReportsTable,\r\n}\r\n\r\nexport enum PatientReportPanelType {\r\n  Summary,\r\n  EPC,\r\n  DN4,\r\n  OSWESTRY,\r\n  HAD,\r\n  BPI,\r\n  SF36,\r\n  FIBROMIALGIA,\r\n  IAD,\r\n  SBST,\r\n  PSEQ,\r\n  WOMAC,\r\n  SPADI,\r\n  All,\r\n}\r\n\r\nexport type AllPanelTypes =\r\n  | AdminPanelType\r\n  | PhysicianPanelType\r\n  | ManagerPanelType\r\n  | ReceptionistPanelType;\r\n\r\nexport interface PatientCommonPanelProps {\r\n  setCurrentPanel: (panel: PatientPanel) => void;\r\n}\r\n\r\nexport interface QuestionaireListProps extends PatientCommonPanelProps {\r\n  patientInfo: LoggedPatient;\r\n}\r\n\r\nexport interface PatientFormProps extends PatientCommonPanelProps {\r\n  patientAuth: UserAuth;\r\n}\r\n\r\nexport interface BodyMapBPIProps {\r\n  markBodyPartsForBPI?: (bodyMapNumber: number[]) => void;\r\n  disabledBodyMapClick: boolean;\r\n  preSelectedValues?: number[];\r\n}\r\n\r\nexport interface BodyMapFibromialgiaProps {\r\n  markBodyParts?: (bodyMapNumber: number[]) => void;\r\n  disabledBodyMapClick: boolean;\r\n  preSelectedValues?: boolean[];\r\n}\r\n\r\nexport enum PatientPanel {\r\n  INITIAL,\r\n  EPC,\r\n  DN4,\r\n  OSWESTRY,\r\n  HAD,\r\n  SF36,\r\n  BPI,\r\n  FIBROMIALGIA,\r\n  IAD,\r\n  SBST,\r\n  PSEQ,\r\n  WOMAC,\r\n  SPADI,\r\n}\r\n\r\nexport const RolesEnum = {\r\n  ADMIN: 'admin',\r\n  MANAGER: 'manager',\r\n  PHYSICIAN: 'physician',\r\n  RECEPTIONIST: 'receptionist',\r\n  PATIENT: 'patient',\r\n} as const;\r\n\r\nexport interface ClinicPayload {\r\n  name: string;\r\n  tax_id: string;\r\n  address_zipcode: string;\r\n  address_street: string;\r\n  address_city: string;\r\n  address_state: string;\r\n  phone: string;\r\n  user: {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n  };\r\n}\r\n\r\nexport interface UserPayload {\r\n  name: string;\r\n  tax_id: string;\r\n  email?: string;\r\n  password?: string;\r\n  address_zipcode: string;\r\n  address_street: string;\r\n  address_city: string;\r\n  address_state: string;\r\n  crm: string;\r\n  phone: string;\r\n  role: string;\r\n}\r\n\r\nexport interface PatientPayload {\r\n  name: string;\r\n  tax_id: string;\r\n  email?: string;\r\n  phone: string;\r\n  birthdate: string;\r\n  gender: string;\r\n  physician_id: number;\r\n}\r\n\r\nexport const QUESTIONAIRE_LIST = [\r\n  { value: 'BPI', label: 'Breve Inventário de Dor (BPI)' },\r\n  { value: 'HAD', label: 'HAD' },\r\n  { value: 'SF36', label: 'Qualidade de vida - SF36' },\r\n  { value: 'DN4', label: 'Dor Neuropática (DN4)' },\r\n  { value: 'EPC', label: 'Escala de pensamento catastrófico' },\r\n  { value: 'FIBROMIALGIA', label: 'Fibromialgia' },\r\n  { value: 'OSWESTRY', label: 'Questionário de Oswestry' },\r\n  { value: 'IAD', label: 'Inventário de Atitudes frente à Dor (IAD - Breve)' },\r\n  { value: 'SBST', label: 'Start Back Screening Tool (SBST)' },\r\n  { value: 'PSEQ', label: 'Autoeficácia da dor (PSEQ)' },\r\n  {\r\n    value: 'WOMAC',\r\n    label: 'Qualidade de vida específico para osteoartrose WOMAC',\r\n  },\r\n  { value: 'SPADI', label: 'Índice de dor e incapacidade no ombro (SPADI)' },\r\n];\r\n\r\nexport interface RouterParams {\r\n  clinic_slug?: string;\r\n}\r\n\r\nexport interface ReportPageProps {\r\n  data: PatientForm[];\r\n  goToSummary: () => void;\r\n  hideBreadcrumb: boolean;\r\n}\r\n\r\nexport interface ReportsSearchPayload {\r\n  patient_id: string;\r\n  start_date: string;\r\n  end_date: string;\r\n  type: string;\r\n  result?: string;\r\n  had_depression?: string;\r\n  had_anxiety?: string;\r\n}\r\n\r\nexport interface InnerReportProps {\r\n  selectedForm: PatientForm;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mini-logo-white.d2319d1d.svg\";","export default __webpack_public_path__ + \"static/media/logo.1480c7f8.svg\";","import { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nexport const OutlinedButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: 'black',\r\n    backgroundColor: 'white',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n    },\r\n    border: '1px solid rgba(0, 0, 0, 1)',\r\n    // textTransform: 'capitalize',\r\n    maxWidth: 185,\r\n    margin: theme.spacing(1),\r\n  },\r\n}))(Button);\r\n\r\nexport const OrangeButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    '&:hover': {\r\n      backgroundColor: deepOrange[700],\r\n    },\r\n    // marginLeft: 'auto',\r\n    margin: theme.spacing(1),\r\n  },\r\n}))(Button);\r\n","import { createContext } from 'react';\r\nimport { RolesEnum } from '../interfaces';\r\nimport { UserAuth } from '../models/UserAuth';\r\n\r\nexport function isValidRole(value?: string): value is keyof typeof RolesEnum {\r\n  return value ? value in RolesEnum : false;\r\n}\r\n\r\nexport const baseUrl = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const AuthContext = createContext<\r\n  [token: UserAuth, saveToken: (userToken?: UserAuth) => void]\r\n>([{ token: '' }, () => {}]);\r\n\r\nexport function getAuth() {\r\n  return JSON.parse(localStorage.getItem('auth') || '{}');\r\n}\r\n","import { createContext } from 'react';\r\n\r\nexport const AlertContext = createContext<\r\n  [alertMessage: string, setAlertMessage: (message: string) => void]\r\n>(['', () => {}]);\r\n","import { createContext } from 'react';\r\n\r\nexport const ClinicSlugContext = createContext<\r\n  [alertMessage: string, setAlertMessage: (message: string) => void]\r\n>(['', () => {}]);\r\n","import React, { useContext, useState } from 'react';\r\nimport {\r\n  withStyles,\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Link from '@material-ui/core/Link';\r\nimport clsx from 'clsx';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nimport {\r\n  Credentials,\r\n  LoginPanelType,\r\n  PanelCommonProps,\r\n  RouterParams,\r\n} from '../interfaces';\r\nimport minilogo from '../image/mini-logo-white.svg';\r\nimport logo from '../image/logo.svg';\r\nimport { OutlinedButton } from './Buttons';\r\nimport { AuthContext, baseUrl } from '../utils/loggedUser';\r\nimport { AlertContext } from '../utils/alert';\r\nimport { ClinicSlugContext } from '../utils/clinicSlug';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    loginPatient: {\r\n      backgroundColor: '#CEEBEA',\r\n      height: '100vh',\r\n    },\r\n    paperLoginPatient: {\r\n      margin: 'auto',\r\n      width: '90vw',\r\n    },\r\n    gridLoginPatient: {\r\n      padding: '1rem',\r\n    },\r\n    left: {\r\n      backgroundColor: 'black',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n    },\r\n    right: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n    },\r\n    paper: {\r\n      height: '100vh',\r\n      boxShadow: 'none',\r\n    },\r\n    contentBox: {\r\n      maxWidth: '400px',\r\n    },\r\n    centralize: {\r\n      textAlign: 'center',\r\n      marginBottom: theme.spacing(6),\r\n      marginTop: theme.spacing(6),\r\n    },\r\n    input: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    termsAndPolicy: {\r\n      fontSize: '0.875rem',\r\n    },\r\n    link: {\r\n      textDecoration: 'underline',\r\n    },\r\n    alignRight: {\r\n      textAlign: 'end',\r\n    },\r\n    forgotLink: {\r\n      marginTop: 10,\r\n      fontSize: '0.75rem',\r\n    },\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    modalPaper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      height: '400px',\r\n      width: '900px',\r\n      overflow: 'auto',\r\n    },\r\n    textarea: {\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\nasync function loginUser(\r\n  credentials: Credentials,\r\n  setAlertMessage?: (message: string) => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    setAlertMessage!(error.message);\r\n    return null;\r\n  }\r\n  return response.json();\r\n}\r\n\r\nasync function loginPatient(\r\n  tax_id: string,\r\n  clinic_slug: string,\r\n  setAlertMessage?: (message: string) => void\r\n) {\r\n  const response = await fetch(\r\n    `${baseUrl}/api/v1/patient/login/${clinic_slug}`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ tax_id }),\r\n    }\r\n  );\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    setAlertMessage!(error.message);\r\n    return null;\r\n  }\r\n  return response.json();\r\n}\r\n\r\nasync function getTermsNoLogin(setAlertMessage?: (message: string) => void) {\r\n  const response = await fetch(`${baseUrl}/api/v1/terms/text`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    setAlertMessage!(error.message);\r\n    return null;\r\n  }\r\n  return response.json();\r\n}\r\n\r\nconst DefaultButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: 'white',\r\n    backgroundColor: 'black',\r\n    '&:hover': {\r\n      backgroundColor: 'black',\r\n    },\r\n    textTransform: 'capitalize',\r\n    maxWidth: 185,\r\n  },\r\n}))(Button);\r\n\r\nconst LoginPatientButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: 'white',\r\n    backgroundColor: green[400],\r\n  },\r\n  '&:hover': {\r\n    backgroundColor: green[700],\r\n  },\r\n}))(Button);\r\n\r\nfunction InitialPanel(props: PanelCommonProps) {\r\n  const classes = useStyles();\r\n  const [terms, setTerms] = useState({ message: '', term: '' });\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n\r\n  const handleOpenModal = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    const fetchedTerms = await getTermsNoLogin(setAlertMessage);\r\n    setTerms(fetchedTerms);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <Paper className={clsx(classes.paper, classes.right)}>\r\n      <Grid container spacing={0} className={classes.contentBox}>\r\n        <Grid item xs={12} className={classes.centralize}>\r\n          <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Seja Bem-vindo!\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Por favor informe suas credenciais para acessar a plataforma!\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centralize}>\r\n          <DefaultButton\r\n            variant=\"contained\"\r\n            onClick={props.nextPanel}\r\n            size=\"large\"\r\n          >\r\n            Entrar\r\n          </DefaultButton>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centralize}>\r\n          <Typography className={classes.termsAndPolicy}>\r\n            <Link\r\n              href=\"#\"\r\n              color=\"textPrimary\"\r\n              onClick={handleOpenModal}\r\n              className={classes.link}\r\n            >\r\n              Termos de uso\r\n            </Link>\r\n          </Typography>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className={classes.modal}\r\n            open={openModal}\r\n            onClose={handleCloseModal}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={openModal}>\r\n              <div className={classes.modalPaper}>\r\n                <h2 id=\"transition-modal-title\">{terms.message}</h2>\r\n                <TextareaAutosize\r\n                  id=\"transition-modal-description\"\r\n                  disabled\r\n                  minRows={10}\r\n                  defaultValue={terms.term}\r\n                  className={classes.textarea}\r\n                />\r\n                <Button onClick={handleCloseModal} variant=\"contained\">\r\n                  Fechar\r\n                </Button>\r\n              </div>\r\n            </Fade>\r\n          </Modal>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction LoginPanel(props: PanelCommonProps) {\r\n  const [, setAuth] = useContext(AuthContext);\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n  const [email, setEmail] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation<{ from: { pathname: string } }>();\r\n\r\n  const handleLoginSubmit = async (e: React.SyntheticEvent) => {\r\n    const { from } = location.state || { from: { pathname: '/' } };\r\n    e.preventDefault();\r\n    const token = await loginUser(\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      setAlertMessage\r\n    );\r\n    if (token) {\r\n      setAuth(token);\r\n      history.replace(from);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper className={clsx(classes.paper, classes.right)}>\r\n      <form onSubmit={handleLoginSubmit}>\r\n        <Grid container spacing={0} className={classes.contentBox}>\r\n          <Grid item xs={12} className={classes.centralize}>\r\n            <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Seja Bem-vindo!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Por favor informe suas credenciais para acessar a plataforma!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.input}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email-input\"\r\n              label=\"E-mail\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.input}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"password-input\"\r\n              label=\"Senha\"\r\n              type=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.alignRight}>\r\n            <Typography className={classes.forgotLink}>\r\n              <Link href=\"#\" color=\"textPrimary\" onClick={props.nextPanel}>\r\n                Esqueceu a senha?\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centralize}>\r\n            <DefaultButton variant=\"contained\" type=\"submit\" size=\"large\">\r\n              Entrar\r\n            </DefaultButton>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction ForgotPasswordPanel(props: PanelCommonProps) {\r\n  const [emailForgotPsw, setEmailForgotPsw] = useState<string>('');\r\n\r\n  const handleForgotPswSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    // TODO call forgotPassword function here\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={clsx(classes.paper, classes.right)}>\r\n      <form onSubmit={handleForgotPswSubmit}>\r\n        <Grid container spacing={0} className={classes.contentBox}>\r\n          <Grid item xs={12} className={classes.centralize}>\r\n            <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Esqueceu sua senha?\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              Enviaremos um código de recuperação para o seu email\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.input}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email-forgot-psw-input\"\r\n              label=\"E-mail\"\r\n              onChange={(e) => setEmailForgotPsw(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid container className={classes.centralize}>\r\n            <Grid item xs={6}>\r\n              <OutlinedButton\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                onClick={props.nextPanel}\r\n              >\r\n                Cancelar\r\n              </OutlinedButton>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DefaultButton variant=\"contained\" type=\"submit\" size=\"large\">\r\n                Enviar\r\n              </DefaultButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nfunction PatientPanel() {\r\n  const [taxId, setTaxId] = useState('');\r\n  const [, setAuth] = useContext(AuthContext);\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n  const [, setClinicSlug] = useContext(ClinicSlugContext);\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation<{ from: { pathname: string } }>();\r\n  const { clinic_slug } = useParams<RouterParams>();\r\n  const handleLoginSubmit = async (e: React.SyntheticEvent) => {\r\n    const { from } = location.state || {\r\n      from: { pathname: `/patient` },\r\n    };\r\n    e.preventDefault();\r\n    const token = await loginPatient(taxId, clinic_slug || '', setAlertMessage);\r\n    if (token) {\r\n      setAuth(token);\r\n      if (clinic_slug) setClinicSlug(clinic_slug);\r\n      history.replace(from);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      spacing={0}\r\n      className={classes.loginPatient}\r\n    >\r\n      <Paper className={classes.paperLoginPatient}>\r\n        <Grid item xs={12} spacing={0} className={classes.gridLoginPatient}>\r\n          <Typography component=\"h1\" variant=\"h6\">\r\n            Acesse para continuar\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} spacing={0} className={classes.gridLoginPatient}>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            Para ter acesso aos questionários, por favor insira seu CPF abaixo:\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12} spacing={0} className={classes.gridLoginPatient}>\r\n          <TextField\r\n            fullWidth\r\n            id=\"tax-id-input\"\r\n            label=\"CPF\"\r\n            onChange={(e) => setTaxId(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} spacing={0} className={classes.gridLoginPatient}>\r\n          <LoginPatientButton variant=\"contained\" onClick={handleLoginSubmit}>\r\n            Entrar\r\n          </LoginPatientButton>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\ninterface LoginProps {\r\n  isPatient?: boolean;\r\n}\r\n\r\nexport default function Login(props: LoginProps) {\r\n  const [panel, setPanel] = useState<LoginPanelType>(LoginPanelType.Initial);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={1}>\r\n      <Grid item xs={12}>\r\n        {props.isPatient ? (\r\n          <PatientPanel />\r\n        ) : (\r\n          <Grid container justifyContent=\"center\" spacing={0}>\r\n            <Slide\r\n              in={panel !== LoginPanelType.Initial}\r\n              direction=\"right\"\r\n              mountOnEnter\r\n              unmountOnExit\r\n            >\r\n              <Grid item xs={6}>\r\n                <Paper className={clsx(classes.paper, classes.left)}>\r\n                  <img src={minilogo} alt=\"logo\" width=\"300\" />\r\n                </Paper>\r\n              </Grid>\r\n            </Slide>\r\n            <Grid item xs={6}>\r\n              {panel === LoginPanelType.Initial && (\r\n                <InitialPanel\r\n                  nextPanel={() => setPanel(LoginPanelType.Login)}\r\n                />\r\n              )}\r\n              {panel === LoginPanelType.Login && (\r\n                <LoginPanel\r\n                  nextPanel={() => setPanel(LoginPanelType.ForgotPassword)}\r\n                />\r\n              )}\r\n              {panel === LoginPanelType.ForgotPassword && (\r\n                <ForgotPasswordPanel\r\n                  nextPanel={() => setPanel(LoginPanelType.Login)}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mini-logo.b070b62c.svg\";","import { useContext, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  alpha,\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  Theme,\r\n} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Smartphone from '@material-ui/icons/Smartphone';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AirlineSeatFlatIcon from '@material-ui/icons/AirlineSeatFlat';\r\nimport logo from '../image/logo.svg';\r\nimport minilogo from '../image/mini-logo.svg';\r\nimport {\r\n  AdminPanelType,\r\n  AllPanelTypes,\r\n  ManagerPanelType,\r\n  PhysicianPanelType,\r\n  RolesEnum,\r\n} from '../interfaces';\r\nimport { AuthContext } from '../utils/loggedUser';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {},\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(8),\r\n      },\r\n    },\r\n    collapsedToolbar: {\r\n      paddingLeft: 12,\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    bottomButton: {\r\n      marginTop: 'auto',\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ninterface LeftNavProps {\r\n  role: string;\r\n  currentPanel: AllPanelTypes;\r\n  openClinicsTablePage?: () => void;\r\n  openTermsOfUsePage?: () => void;\r\n  setPanel: (panelType: AllPanelTypes) => void;\r\n}\r\n\r\nexport default function LeftNav(props: LeftNavProps) {\r\n  const [auth, setAuth] = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(true);\r\n  const history = useHistory();\r\n  const { role, currentPanel, setPanel } = props;\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const signout = () => {\r\n    setAuth();\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n        color=\"default\"\r\n      >\r\n        <Toolbar className={classes.collapsedToolbar}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <img src={minilogo} alt=\"logo\" width=\"39\" />\r\n          </IconButton>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Pesquisar paciente\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <img src={logo} className=\"app-logo\" alt=\"logo\" />\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        {role === RolesEnum.ADMIN && (\r\n          <List>\r\n            <ListItem\r\n              button\r\n              key=\"LocalHospitalIcon\"\r\n              selected={[\r\n                AdminPanelType.ClinicsTable,\r\n                AdminPanelType.ClinicForm,\r\n              ].includes(currentPanel as AdminPanelType)}\r\n              onClick={props.openClinicsTablePage}\r\n            >\r\n              <ListItemIcon>\r\n                <LocalHospitalIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Clínicas\" />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              key=\"SettingsIcon\"\r\n              selected={\r\n                AdminPanelType.Settings === (currentPanel as AdminPanelType)\r\n              }\r\n              onClick={props.openTermsOfUsePage}\r\n            >\r\n              <ListItemIcon>\r\n                <SettingsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Configurações\" />\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n        {role === RolesEnum.MANAGER && (\r\n          <List>\r\n            <ListItem\r\n              onClick={() => setPanel(ManagerPanelType.UsersTable)}\r\n              button\r\n              key=\"PersonIcon\"\r\n              selected={\r\n                ManagerPanelType.UsersTable ===\r\n                (currentPanel as ManagerPanelType)\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Usuários\" />\r\n            </ListItem>\r\n            <ListItem\r\n              onClick={() => setPanel(ManagerPanelType.PatientsTable)}\r\n              button\r\n              key=\"AirlineSeatFlatIcon\"\r\n              selected={\r\n                ManagerPanelType.PatientsTable ===\r\n                (currentPanel as ManagerPanelType)\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <AirlineSeatFlatIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pacientes\" />\r\n            </ListItem>\r\n            <ListItem\r\n              onClick={() => setPanel(ManagerPanelType.ReportsTable)}\r\n              button\r\n              key=\"PieChartIcon\"\r\n              selected={\r\n                ManagerPanelType.ReportsTable ===\r\n                (currentPanel as ManagerPanelType)\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <PieChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Relatórios\" />\r\n            </ListItem>\r\n            <ListItem\r\n              onClick={() =>\r\n                window.open(\r\n                  `/login/patient/${auth?.user?.clinic_slug}`,\r\n                  '_blank',\r\n                  'noopener'\r\n                )\r\n              }\r\n              button\r\n              key=\"Smartphone\"\r\n            >\r\n              <ListItemIcon>\r\n                <Smartphone />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Área do Paciente\" />\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n        {role === RolesEnum.PHYSICIAN && (\r\n          <List>\r\n            <ListItem\r\n              onClick={() => setPanel(PhysicianPanelType.PatientsTable)}\r\n              button\r\n              key=\"PersonIcon\"\r\n              selected={\r\n                PhysicianPanelType.PatientsTable ===\r\n                (currentPanel as PhysicianPanelType)\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pacientes\" />\r\n            </ListItem>\r\n            <ListItem\r\n              onClick={() => setPanel(PhysicianPanelType.ReportsTable)}\r\n              button\r\n              key=\"PieChartIcon\"\r\n              selected={\r\n                PhysicianPanelType.ReportsTable ===\r\n                (currentPanel as PhysicianPanelType)\r\n              }\r\n            >\r\n              <ListItemIcon>\r\n                <PieChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Relatórios\" />\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n        {role === RolesEnum.RECEPTIONIST && (\r\n          <List>\r\n            <ListItem button key=\"PersonIcon\" selected>\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pacientes\" />\r\n            </ListItem>\r\n            <ListItem button key=\"PieChartIcon\">\r\n              <ListItemIcon>\r\n                <PieChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Relatórios\" />\r\n            </ListItem>\r\n          </List>\r\n        )}\r\n        <Button className={classes.bottomButton} onClick={signout}>\r\n          SAIR\r\n        </Button>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { TableProps } from '../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    container: {\r\n      maxHeight: 440,\r\n    },\r\n    tableHeadCell: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    tableHeadCheckbox: {\r\n      color: theme.palette.common.white,\r\n    },\r\n  })\r\n);\r\n\r\nexport default function PatientsTable(props: TableProps) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [selected, setSelected] = React.useState<number[]>([]);\r\n\r\n  const { columns, rows, shouldHideCheckboxes = false } = props;\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, cpf: number) => {\r\n    const selectedIndex = selected.indexOf(cpf);\r\n    let newSelected: number[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, cpf);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (id: number) => selected.indexOf(id) !== -1;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell padding=\"checkbox\" className={classes.tableHeadCell}>\r\n                {!shouldHideCheckboxes && (\r\n                  <Checkbox\r\n                    indeterminate={\r\n                      selected.length > 0 && selected.length < rows.length\r\n                    }\r\n                    checked={rows.length > 0 && selected.length === rows.length}\r\n                    onChange={handleSelectAllClick}\r\n                    inputProps={{ 'aria-label': 'select all desserts' }}\r\n                    color=\"default\"\r\n                    classes={{ root: classes.tableHeadCheckbox }}\r\n                  />\r\n                )}\r\n              </TableCell>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align=\"left\"\r\n                  style={{ minWidth: column.minWidth }}\r\n                  className={classes.tableHeadCell}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                const isItemSelected = isSelected(row.id);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    tabIndex={-1}\r\n                    key={row.id}\r\n                    aria-checked={isItemSelected}\r\n                    selected={isItemSelected}\r\n                    onClick={(event) =>\r\n                      !shouldHideCheckboxes && handleClick(event, row.id)\r\n                    }\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      {!shouldHideCheckboxes && (\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      )}\r\n                    </TableCell>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align=\"left\">\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        labelRowsPerPage={<>Linhas por página</>}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { PatientTableColumn, PatientTableData } from '../../interfaces';\r\nimport { Patient } from '../../models/Patient';\r\nimport GenericTable from '../GenericTable';\r\nimport { OrangeButton } from '../Buttons';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst columns: PatientTableColumn[] = [\r\n  { id: 'name', label: 'Nome', minWidth: 170 },\r\n  { id: 'email', label: 'E-mail', minWidth: 100 },\r\n  {\r\n    id: 'tax_id',\r\n    label: 'CPF',\r\n    minWidth: 100,\r\n    format: (value: number) =>\r\n      value\r\n        .toString()\r\n        .padStart(11, '0')\r\n        .replace(\r\n          /(\\d{3})(\\d{3})(\\d{3})(\\d{2})/,\r\n          (regex, arg1, arg2, arg3, arg4) =>\r\n            arg1 + '.' + arg2 + '.' + arg3 + '-' + arg4\r\n        ),\r\n  },\r\n  { id: 'phone', label: 'Telefone', minWidth: 100 },\r\n  { id: 'birthdate', label: 'Nascimento', minWidth: 100 },\r\n  { id: 'gender', label: 'Sexo', minWidth: 100 },\r\n  { id: 'details', label: 'Detalhes', minWidth: 50 },\r\n];\r\n\r\nfunction setPatientsIntoTable(\r\n  patients: Patient[],\r\n  deletePatient: (patient: Patient) => Promise<void>,\r\n  openPatientForm: (patient?: Patient) => void\r\n) {\r\n  return patients.map((patient: PatientTableData) => {\r\n    const handlePatientDetails = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      openPatientForm(patient);\r\n    };\r\n    const handleDeletePatient = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      deletePatient(patient);\r\n    };\r\n\r\n    patient.details = (\r\n      <>\r\n        <IconButton onClick={handlePatientDetails}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDeletePatient}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n    return patient;\r\n  });\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\ninterface PatientsTableProps {\r\n  patients: Patient[];\r\n  deletePatient: (patient: Patient) => Promise<void>;\r\n  openPatientForm: (patient?: Patient) => void;\r\n}\r\n\r\nexport default function PatientsTable(props: PatientsTableProps) {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState<PatientTableData[]>([]);\r\n\r\n  const { deletePatient, openPatientForm, patients } = props;\r\n\r\n  useEffect(() => {\r\n    setRows(setPatientsIntoTable(patients, deletePatient, openPatientForm));\r\n  }, [patients, deletePatient, openPatientForm]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      spacing={1}\r\n      alignItems=\"flex-end\"\r\n      justifyContent=\"flex-end\"\r\n    >\r\n      <OrangeButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => props.openPatientForm()}\r\n      >\r\n        Cadastrar novo Paciente\r\n      </OrangeButton>\r\n      <GenericTable columns={columns} rows={rows} />\r\n    </Grid>\r\n  );\r\n}\r\n","import { Dispatch } from 'react';\r\nimport { PatientPayload } from '../interfaces';\r\nimport { Patient } from '../models/Patient';\r\nimport { baseUrl, getAuth } from '../utils/loggedUser';\r\n\r\nexport enum IActions {\r\n  PATIENTS_FETCHED,\r\n  // PATIENT_FETCHED,\r\n  PATIENT_CREATED,\r\n  PATIENT_DELETED,\r\n  PATIENT_UPDATED,\r\n}\r\n\r\nexport interface IPatientsDispatchProps {\r\n  type: IActions;\r\n  patients: Patient[];\r\n}\r\n\r\nexport function getPatients(setAlertMessage: (message: string) => void) {\r\n  return async (dispatch: Dispatch<IPatientsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/patients`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.PATIENTS_FETCHED, patients: data.patients });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function deletePatient(\r\n  patient: Patient,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IPatientsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/patients/${patient.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.PATIENT_DELETED, patients: [patient] });\r\n    } else {\r\n      const error = await response.json();\r\n      setAlertMessage!(error.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function createPatient(\r\n  patient: PatientPayload,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IPatientsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/patients`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(patient),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.PATIENT_CREATED, patients: [data.patient] });\r\n      return data.patient;\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n      return null;\r\n    }\r\n  };\r\n}\r\n\r\nexport function updatePatient(\r\n  id: number,\r\n  patient: PatientPayload,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IPatientsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/patients/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(patient),\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.PATIENT_UPDATED, patients: [data.patient] });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n","import { Dispatch } from 'react';\r\nimport { PatientForm } from '../models/PatientForm';\r\nimport { baseUrl, getAuth } from '../utils/loggedUser';\r\n\r\nexport enum IActions {\r\n  QUESTIONAIRES_FETCHED,\r\n  QUESTIONAIRES_SENT,\r\n}\r\n\r\nexport interface IQuestionairesDispatchProps {\r\n  type: IActions;\r\n  questionaires: PatientForm[];\r\n}\r\n\r\nexport function getQuestionaires(\r\n  patient_id: number,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IQuestionairesDispatchProps>) => {\r\n    const response = await fetch(\r\n      `${baseUrl}/api/v1/forms/patient/${patient_id}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${getAuth().token}`,\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setAlertMessage!(data.message);\r\n    } else {\r\n      dispatch({\r\n        type: IActions.QUESTIONAIRES_FETCHED,\r\n        questionaires: data.forms,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function getQuestionairesForPatient(\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IQuestionairesDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/forms/patient`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setAlertMessage!(data.message);\r\n    } else {\r\n      dispatch({\r\n        type: IActions.QUESTIONAIRES_FETCHED,\r\n        questionaires: data.forms,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function sendQuestionaires(\r\n  patient_id: number,\r\n  forms: string[],\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IQuestionairesDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/forms/request`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ patient_id, forms }),\r\n    });\r\n    if (!response.ok) {\r\n      const error = await response.json();\r\n      setAlertMessage!(error.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function clearQuestionaires() {\r\n  return async (dispatch: Dispatch<IQuestionairesDispatchProps>) => {\r\n    dispatch({ type: IActions.QUESTIONAIRES_FETCHED, questionaires: [] });\r\n  };\r\n}\r\n","import { IActions, IPatientsDispatchProps } from '../actions/patient';\r\nimport { Patient } from '../models/Patient';\r\n\r\nexport default function patientReducer(\r\n  state: Patient[],\r\n  action: IPatientsDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.PATIENTS_FETCHED:\r\n      return action.patients;\r\n    case IActions.PATIENT_CREATED:\r\n      return [...state, ...action.patients];\r\n    case IActions.PATIENT_DELETED:\r\n      return state.filter(\r\n        (patient: Patient) => patient.id !== action.patients[0].id\r\n      );\r\n    case IActions.PATIENT_UPDATED:\r\n      return state.map((patient: Patient) => {\r\n        if (patient.id === action.patients[0].id) {\r\n          return action.patients[0];\r\n        }\r\n        return patient;\r\n      });\r\n  }\r\n}\r\n","import { IActions, IQuestionairesDispatchProps } from '../actions/questionaire';\r\nimport { PatientForm } from '../models/PatientForm';\r\n\r\nexport default function questionaireReducer(\r\n  state: PatientForm[],\r\n  action: IQuestionairesDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.QUESTIONAIRES_FETCHED:\r\n      return action.questionaires;\r\n    case IActions.QUESTIONAIRES_SENT:\r\n      return action.questionaires;\r\n  }\r\n}\r\n","import { Dispatch } from 'react';\r\nimport { UserPayload } from '../interfaces';\r\nimport { User } from '../models/User';\r\nimport { baseUrl, getAuth } from '../utils/loggedUser';\r\n\r\nexport enum IActions {\r\n  USERS_FETCHED,\r\n  // USER_FETCHED,\r\n  USER_CREATED,\r\n  USER_DELETED,\r\n  USER_UPDATED,\r\n}\r\n\r\nexport interface IUsersDispatchProps {\r\n  type: IActions;\r\n  users: User[];\r\n}\r\n\r\nexport function getUsers(\r\n  setAlertMessage: (message: string) => void,\r\n  role?: string\r\n) {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(\r\n      `${baseUrl}/api/v1/users${role ? `/${role}` : ''}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          Authorization: `Bearer ${getAuth().token}`,\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.USERS_FETCHED, users: data.users });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function deleteUser(\r\n  user: User,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/users/${user.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.USER_DELETED, users: [user] });\r\n    } else {\r\n      const error = await response.json();\r\n      setAlertMessage!(error.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function createUser(\r\n  user: UserPayload,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/users`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.USER_CREATED, users: [data.user] });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function updateUser(\r\n  id: number,\r\n  user: UserPayload,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IUsersDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/users/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(user),\r\n    });\r\n\r\n    const dataResponse = await response.json();\r\n    if (!response.ok) {\r\n      setAlertMessage!(dataResponse.message);\r\n      return;\r\n    }\r\n    dispatch({ type: IActions.USER_UPDATED, users: [dataResponse.user] });\r\n  };\r\n}\r\n","import { IActions, IUsersDispatchProps } from '../actions/user';\r\nimport { User } from '../models/User';\r\n\r\nexport default function userReducer(\r\n  state: User[],\r\n  action: IUsersDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.USERS_FETCHED:\r\n      return action.users;\r\n    case IActions.USER_CREATED:\r\n      return [...state, ...action.users];\r\n    case IActions.USER_DELETED:\r\n      return state.filter((user: User) => user.id !== action.users[0].id);\r\n    case IActions.USER_UPDATED:\r\n      return state.map((user: User) => {\r\n        if (user.id === action.users[0].id) {\r\n          return action.users[0];\r\n        }\r\n        return user;\r\n      });\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { OrangeButton, OutlinedButton } from '../Buttons';\r\nimport { PatientPayload, QUESTIONAIRE_LIST } from '../../interfaces';\r\nimport { Patient } from '../../models/Patient';\r\nimport { PatientForm as PatientFormModel } from '../../models/PatientForm';\r\nimport userReducer from '../../reducers/user';\r\nimport { getUsers } from '../../actions/user';\r\nimport { AlertContext } from '../../utils/alert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    ownerHeaderSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    footerSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\ninterface PatientFormProps {\r\n  currentPatient?: Patient;\r\n  questionaires: PatientFormModel[];\r\n  openPatientsTablePage: () => void;\r\n  setPatient: (\r\n    id: number | undefined,\r\n    patientPayload: PatientPayload,\r\n    questionairePayload: string[]\r\n  ) => Promise<void>;\r\n}\r\n\r\nexport default function PatientForm(props: PatientFormProps) {\r\n  const { currentPatient, setPatient } = props;\r\n  const [patientName, setPatientName] = useState<string>(\r\n    currentPatient?.name || ''\r\n  );\r\n  const [taxId, setTaxId] = useState<string>(currentPatient?.tax_id || '');\r\n  const [email, setEmail] = useState<string>(currentPatient?.email || '');\r\n\r\n  const [phone, setPhone] = useState<string>(currentPatient?.phone || '');\r\n  const [birthdate, setBirthdate] = useState<string>(\r\n    currentPatient?.birthdate || ''\r\n  );\r\n  const [gender, setGender] = useState<string>(currentPatient?.gender || 'F');\r\n  const [physicianId, setPhysicianId] = useState<number>(\r\n    currentPatient?.physician_id || 0\r\n  );\r\n\r\n  const questionairesClassified = props.questionaires.reduce(\r\n    (acc, q) => ({ ...acc, [q.type]: q }),\r\n    {}\r\n  );\r\n  const initialQuestionaires: any = Object.values(\r\n    questionairesClassified\r\n  ).reduce((acc, q) => {\r\n    if ((q as PatientFormModel).status === 'PENDING') {\r\n      return [...(acc as string[]), (q as PatientFormModel).type];\r\n    }\r\n    return acc;\r\n  }, []);\r\n  const [questionaires, setQuestionaires] =\r\n    useState<string[]>(initialQuestionaires);\r\n\r\n  const [physicians, physiciansDispatch] = useReducer(userReducer, []);\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getUsers(setAlertMessage, 'physicians')(physiciansDispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  useEffect(() => {\r\n    if (physicians?.length && !physicianId) {\r\n      setPhysicianId(physicians[0]?.id);\r\n    }\r\n  }, [physicians, physicianId]);\r\n\r\n  const handleSetPatient = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const patientPayload = {\r\n      name: patientName,\r\n      tax_id: taxId,\r\n      email,\r\n      phone,\r\n      birthdate,\r\n      gender,\r\n      physician_id: physicianId,\r\n    };\r\n    setPatient(currentPatient?.id, patientPayload, questionaires);\r\n  };\r\n\r\n  const handleCheckboxOnChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setQuestionaires(\r\n      event.target.checked\r\n        ? [...questionaires, event.target.name]\r\n        : questionaires.filter((q) => q !== event.target.name)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form onSubmit={handleSetPatient}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            className={classes.headerSection}\r\n          >\r\n            Dados do Paciente\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"user-name-input\"\r\n              label=\"Nome do usuário\"\r\n              defaultValue={patientName}\r\n              onChange={(e) => setPatientName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"tax-id-input\"\r\n              label=\"CNPJ/CPF\"\r\n              defaultValue={taxId}\r\n              onChange={(e) => setTaxId(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"birthdate-input\">\r\n              Data de Nascimento\r\n            </InputLabel>\r\n            <TextField\r\n              fullWidth\r\n              type=\"date\"\r\n              id=\"birthdate-input\"\r\n              defaultValue={birthdate}\r\n              onChange={(e) => setBirthdate(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email-input\"\r\n              label=\"E-mail\"\r\n              defaultValue={email}\r\n              disabled={!!currentPatient?.email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"gender-select\">Sexo</InputLabel>\r\n              <Select\r\n                native\r\n                id=\"gender-select\"\r\n                value={gender}\r\n                onChange={(e) => setGender(e.target.value as string)}\r\n              >\r\n                <option key=\"female\" value=\"F\">\r\n                  F\r\n                </option>\r\n                <option key=\"male\" value=\"M\">\r\n                  M\r\n                </option>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <InputLabel htmlFor=\"physician-id-input\">\r\n              Médico Responsável\r\n            </InputLabel>\r\n            <Select\r\n              fullWidth\r\n              native\r\n              id=\"physician-id-input\"\r\n              value={physicianId}\r\n              onChange={(e) => setPhysicianId(Number(e.target.value))}\r\n            >\r\n              {physicians?.length &&\r\n                physicians.map((physician) => (\r\n                  <option key={physician.id} value={physician.id}>\r\n                    {physician.name}\r\n                  </option>\r\n                ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"phone-input\"\r\n              label=\"Telefone\"\r\n              defaultValue={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n          style={{ marginTop: 36 }}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"subtitle1\" align=\"left\">\r\n              Quais questionários foram solicitados para esse paciente?\r\n            </Typography>\r\n          </Grid>\r\n          {QUESTIONAIRE_LIST.map((item) => (\r\n            <Grid item xs={12} key={item.value}>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={questionaires.includes(item.value)}\r\n                      onChange={handleCheckboxOnChange}\r\n                      name={item.value}\r\n                    />\r\n                  }\r\n                  label={item.label}\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          className={classes.footerSection}\r\n        >\r\n          <OutlinedButton\r\n            variant=\"outlined\"\r\n            onClick={props.openPatientsTablePage}\r\n          >\r\n            Cancelar\r\n          </OutlinedButton>\r\n          <OrangeButton type=\"submit\">Salvar</OrangeButton>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BodyMapBPIProps } from '../../interfaces';\r\n\r\nconst colorArray = ['#fff', '#44afab', '#f6f665', '#f66569'] as const;\r\n\r\nfunction BodyMapBPI(props: BodyMapBPIProps) {\r\n  const { preSelectedValues, markBodyPartsForBPI, disabledBodyMapClick } =\r\n    props;\r\n  const [bodyMap, setBodyMap] = React.useState(\r\n    preSelectedValues ?? new Array(53).fill(0)\r\n  );\r\n  const [isFrontSide, setIsBodyFrontSide] = React.useState(true);\r\n  const handleClickArea = (bodyPartNumber: number) =>\r\n    !disabledBodyMapClick &&\r\n    setBodyMap((s) => {\r\n      const newValues = [...s];\r\n      newValues[bodyPartNumber] =\r\n        s[bodyPartNumber] < 3 ? s[bodyPartNumber] + 1 : 0;\r\n      return newValues;\r\n    });\r\n\r\n  React.useEffect(\r\n    () => markBodyPartsForBPI && markBodyPartsForBPI(bodyMap),\r\n    [bodyMap, markBodyPartsForBPI]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (preSelectedValues) {\r\n      setBodyMap(preSelectedValues);\r\n    }\r\n  }, [preSelectedValues]);\r\n\r\n  const frontSide = (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"316\"\r\n      height=\"472.908\"\r\n      viewBox=\"0 0 316 472.908\"\r\n    >\r\n      <g data-name=\"Group 1692\" transform=\"translate(72 31.453)\">\r\n        <path\r\n          fill={colorArray[bodyMap[40]]}\r\n          onClick={() => handleClickArea(40)}\r\n          d=\"M12086.54-2267.378a56.079 56.079 0 008.553.808 41.1 41.1 0 007.78-.808s-1.6 2.948 1.784 8.1 9.788 6.472 11.623 11.428c1.772 4.783-6.757 9.636-6.757 9.636s-5.315 1.533-9.582 0-4.787-2.324-7.192-6.106-1.009-3.7-2.657-6.14-3.941-1.14-4.829-5.369 1.277-11.549 1.277-11.549z\"\r\n          data-name=\"Path 2846\"\r\n          transform=\"translate(-11981.302 2677.938)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[39]]}\r\n          onClick={() => handleClickArea(39)}\r\n          d=\"M11689.194-2267.378l1.979 13.125a52.84 52.84 0 00-8.107 8.037c-3.83 4.771-1.581 7.869-7.716 8.411s-15.18-.808-16.616-6.1 9.128-9.978 12.913-15.3 2-8.167 2-8.167a45.1 45.1 0 007.885.822 41.1 41.1 0 007.662-.828z\"\r\n          data-name=\"Path 2845\"\r\n          transform=\"translate(-11600.015 2677.938)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[37]]}\r\n          onClick={() => handleClickArea(37)}\r\n          d=\"M11681.138-2894.285a89.444 89.444 0 0015.552 1.192 87.644 87.644 0 0014.488-1.83s.511.277-1.537 15.584-.254 50.679-.254 50.679a34.324 34.324 0 01-7.815 1.242 31.392 31.392 0 01-7.644-.931 126.6 126.6 0 00-5.927-29.873c-1.079-4.951-3.03-9.927-3.837-14.082-3.198-16.483-3.026-21.981-3.026-21.981z\"\r\n          data-name=\"Path 2843\"\r\n          transform=\"translate(-11620.164 3239.024)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[38]]}\r\n          onClick={() => handleClickArea(38)}\r\n          d=\"M11709.268-2893.633a93.812 93.812 0 01-14.2.731 80.285 80.285 0 01-14.08-1.807s-1.511.184.537 15.492 3 50.434 3 50.434 1.793 1.48 5.659 1.558 11.076-1.558 11.076-1.558-2.071-12.45 2.562-28.372c1.078-4.95 1.237-10.588 2.044-14.743 3.196-16.484 3.402-21.735 3.402-21.735z\"\r\n          data-name=\"Path 2844\"\r\n          transform=\"translate(-11579.305 3239.043)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[36]]}\r\n          onClick={() => handleClickArea(36)}\r\n          d=\"M11721.121-3168.47a140.73 140.73 0 01-15.533 1.088 89.76 89.76 0 01-11.926-.7s.3 13.33-.554 19.055a73.143 73.143 0 00-.866 9.607l14.953 2.011 13.926-1.121s.029-15.424-.6-23.034.6-6.906.6-6.906z\"\r\n          data-name=\"Path 2842\"\r\n          transform=\"translate(-11590.38 3483.796)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[35]]}\r\n          onClick={() => handleClickArea(35)}\r\n          d=\"M11678.045-3168.327a140.825 140.825 0 0015.535 1.087 86.431 86.431 0 0013.4-1.087s-2.328 13.4-1.474 19.123 4.632 10 2.014 10.263c-1.292.129-15.511 1.013-15.511 1.013l-13.962-1.346z\"\r\n          data-name=\"Path 2841\"\r\n          transform=\"translate(-11617.399 3483.654)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[14]]}\r\n          onClick={() => handleClickArea(14)}\r\n          d=\"M11620.937-4137.5l5.532-77.794s-4.662-1.249-8.591-7.337c-2.5-3.063-4.121-8.338-7.036-11.745-7.814-9.134-12.174-9.083-14.773-12.439-6.944-4.482-10.074-5.48-10.074-5.48s-.321 1.6-1.571 8.564a120.637 120.637 0 00-2.74 19.946c.674 12.463 1.842 31.073 4.062 46.445 2.441 16.9 4.117 18.335 5.92 29.991s0 9.849 0 9.849l15.847 1.035z\"\r\n          data-name=\"Path 2839\"\r\n          transform=\"translate(-11531.242 4452.946)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[15]]}\r\n          onClick={() => handleClickArea(15)}\r\n          d=\"M11582.567-4144.373l-6.762-77.627a19.174 19.174 0 009.212-7.773c2.5-3.063 4.122-8.337 7.036-11.745 7.813-9.135 12.175-9.083 14.772-12.439 6.946-4.482 8.645-6.327 8.645-6.327s1.753 2.446 3 9.41a161.36 161.36 0 011.906 20.484c-.672 12.462-2.355 30.287-4.577 45.659-2.441 16.9-2.768 18.585-4.571 30.24s-1.356 10.883-1.356 10.883h-14.49z\"\r\n          data-name=\"Path 2840\"\r\n          transform=\"translate(-11479.709 4459.56)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[13]]}\r\n          onClick={() => handleClickArea(13)}\r\n          d=\"M11626.625-4268.85s22.643 1.8 42.6 1.879a212.816 212.816 0 0037.936-3.534s-12.607 12.072-21.911 21.411c-2.392 2.4-4.041 4.865-5.767 6.916-4.971 5.905-7.613 9.709-12.036 10.295-5.724.044-10.515-9.455-15.979-18.188s-24.843-18.779-24.843-18.779z\"\r\n          data-name=\"Path 2838\"\r\n          transform=\"translate(-11571.426 4469.324)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[12]]}\r\n          onClick={() => handleClickArea(12)}\r\n          d=\"M12056.816-4373.909l2.268 10.539s-11.441 2.075-21.075 3a155.662 155.662 0 01-17.458.686l-.365-10.937 18.437-.825z\"\r\n          data-name=\"Path 2837\"\r\n          transform=\"translate(-11923.307 4561.819)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[11]]}\r\n          onClick={() => handleClickArea(11)}\r\n          d=\"M11628.362-4369.52l39.878 2.751v11.25l-41.615-2.395z\"\r\n          data-name=\"Path 2836\"\r\n          transform=\"translate(-11571.426 4557.895)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[10]]}\r\n          onClick={() => handleClickArea(10)}\r\n          d=\"M12021.262-4500.851v13.644a92.432 92.432 0 0017.563-.46c9-1.187 18.955-2.421 18.955-2.421l-.609-13.719-17.135 1.983z\"\r\n          data-name=\"Path 2835\"\r\n          transform=\"translate(-11924.27 4677.985)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[9]]}\r\n          onClick={() => handleClickArea(9)}\r\n          d=\"M11643.907-4490l39.186 1.777v13.172h-10.413l-29.643-2.3z\"\r\n          data-name=\"Path 2834\"\r\n          transform=\"translate(-11586.1 4665.641)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[6]]}\r\n          onClick={() => handleClickArea(6)}\r\n          d=\"M11695.4-4902.752a188.178 188.178 0 0014.351 25.137c9.568 14.359 21.254 16.834 21.254 16.834a273.662 273.662 0 01-34.89 3.246c-18.536.457-39.256-1.419-39.256-1.419s10.694-2.753 19.62-14.417 18.921-29.381 18.921-29.381z\"\r\n          data-name=\"Path 2833\"\r\n          transform=\"translate(-11598.459 5034.741)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[5]]}\r\n          onClick={() => handleClickArea(5)}\r\n          d=\"M12058.852-4918.17s-3.561 7.436-16.512 25.375c-12.6 17.453-22.359 17.637-22.359 17.637l.727-18.78-2.355-16.836 13.719-9.56z\"\r\n          data-name=\"Path 2832\"\r\n          transform=\"translate(-11961.91 5050.359)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[7]]}\r\n          onClick={() => handleClickArea(7)}\r\n          d=\"M12021.218-4918.472s2.079 7.738 15.031 25.676c12.6 17.453 20.563 16.281 20.563 16.281l3.121-34.293-13.417-9.526z\"\r\n          data-name=\"Path 2831\"\r\n          transform=\"translate(-11924.229 5050.466)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[33]]}\r\n          onClick={() => handleClickArea(33)}\r\n          d=\"M15332.542-5599.569a47.963 47.963 0 00-11.645-3.123 40.21 40.21 0 00-10.93.346s-3.148 1.283-5.27 15.1c-.482 3.151-.611 7.625-1.338 12.568-2.445 16.673-6.4 37.965-6.4 37.965a31.518 31.518 0 006.859 3.364c3.654 1.2 8.486 2.21 8.486 2.21a331.426 331.426 0 0013.064-34.766c2.246-2.888 7.174-33.664 7.174-33.664z\"\r\n          data-name=\"Path 2828\"\r\n          transform=\"translate(-15275.749 5755.896)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[49]]}\r\n          onClick={() => handleClickArea(49)}\r\n          d=\"M.144 42.2c-1.215-6.451 5.589-35.636 7.85-38.464 1.186-1.484.887 2.78.559 7.044-.3 3.861-.615 7.723.126 7.316 1.56-.857 3.923-19.242 6.239-18.04s-1.781 16.789.147 16.789S19.855.023 22.631.056s-3.382 17.992-1.465 19.337c.915.642 2.39-3.611 3.969-7.863 1.73-4.659 3.585-9.317 4.966-7.541 2.643 3.4-10.463 28.292-5.316 27.6s13.342-2.79 11.052.757C33.845 35.433 19.2 44.2 15.41 46.439l.06.064-.1-.039-.849.5z\"\r\n          data-name=\"Union 46\"\r\n          transform=\"rotate(180 18.116 133.532)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[4]]}\r\n          onClick={() => handleClickArea(4)}\r\n          d=\"M15307.92-5915.6s-11.158-1.645-16.139-.335c-.84.222-.562 3.627-.562 3.627l-.748 13.11-1.916 17.649s6.338-2.3 12.066-1.576a37.562 37.562 0 0111.365 3.785s-.432-9.013-1.535-17.939-2.531-18.321-2.531-18.321z\"\r\n          data-name=\"Path 2825\"\r\n          transform=\"translate(-15255.782 6036.423)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[1]]}\r\n          onClick={() => handleClickArea(1)}\r\n          d=\"M15084.125-6394.62s-32.84 12.762-33.1 12.889c-16.348 12.641-10.068 29.3-10.363 38.2 0 0 13.824-2.533 16.262.5s3.766 18.162 3.766 18.162 22.586-11.676 26.146-31.809-2.711-37.942-2.711-37.942z\"\r\n          data-name=\"Path 2824\"\r\n          transform=\"translate(-15004.95 6465.1)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[3]]}\r\n          onClick={() => handleClickArea(3)}\r\n          d=\"M15051.745-6410.019s23.154 11.747 34.605 16.98 9.01 26.842 9.307 35.743c0 0-13.824-2.533-16.264.5s-3.764 18.163-3.764 18.163-22.586-11.676-26.146-31.809 2.262-39.577 2.262-39.577z\"\r\n          data-name=\"Path 2819\"\r\n          transform=\"translate(-14939.999 6478.237)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[8]]}\r\n          onClick={() => handleClickArea(8)}\r\n          d=\"M15301.154-5915.6s11.16-1.645 16.139-.335c.84.222.563 3.627.563 3.627v13.014l1.8 16.493a40.361 40.361 0 00-11.2-.323 52.616 52.616 0 00-11.715 3.23 129.107 129.107 0 01.848-17.4 161.366 161.366 0 013.565-18.306z\"\r\n          data-name=\"Path 2820\"\r\n          transform=\"translate(-15162.077 6036.74)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[50]]}\r\n          onClick={() => handleClickArea(50)}\r\n          d=\"M8.692 28.867c-.722-.4.008 3.591.638 7.578.73 4.624 1.325 9.248-.638 7.034C5.036 39.356-1.057 11.214.158 4.764L14.532 0s.307.179.849.5l.1-.039-.06.064c3.787 2.236 18.436 11.007 20.428 14.09 2.291 3.546-7.227 2.032-11.757 0s6.52 23.289 5.8 27.195c-.382 2.062-2.364-2.651-4.433-7.363-1.851-4.216-3.771-8.432-4.677-7.8-1.918 1.345 4.639 20.225 1.863 20.258s-5.785-18.04-7.714-18.04 2.316 16.837 0 18.04a.473.473 0 01-.22.056c-2.245.003-4.511-17.261-6.019-18.094z\"\r\n          data-name=\"Union 45\"\r\n          transform=\"translate(155.616 221.053)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[34]]}\r\n          onClick={() => handleClickArea(34)}\r\n          d=\"M15296.713-5599.569a47.933 47.933 0 0111.643-3.123 40.221 40.221 0 0110.932.346s3.146 1.283 5.268 15.1c.484 3.151.611 7.625 1.338 12.568 2.443 16.673 6.43 39.406 6.43 39.406a19.129 19.129 0 01-6.506 3.983 19.525 19.525 0 01-7.885.544s-8.854-17.922-14.045-35.16c-2.249-2.888-7.175-33.664-7.175-33.664z\"\r\n          data-name=\"Path 2821\"\r\n          transform=\"translate(-15162.289 5756.213)\"\r\n        ></path>\r\n        <path\r\n          fill={colorArray[bodyMap[2]]}\r\n          onClick={() => handleClickArea(2)}\r\n          d=\"M15133.352-6171.781a54.109 54.109 0 0016.654 2.5c6.125-.181 12.379-3.185 15.787-3.285-1.607 2.308-4.967 19.734-2.807 35.1 2.006 15.753 13.391 26.756 13.391 26.756a192.537 192.537 0 01-26.957 2.3 161.532 161.532 0 01-25.566-2.244s10.807-12.006 13.182-27.286-3.684-33.841-3.684-33.841z\"\r\n          data-name=\"Path 2811\"\r\n          transform=\"translate(-15054.228 6239.548)\"\r\n        ></path>\r\n        <g\r\n          fill={colorArray[bodyMap[0]]}\r\n          onClick={() => handleClickArea(0)}\r\n          data-name=\"Group 1623\"\r\n          transform=\"translate(71.631)\"\r\n        >\r\n          <path\r\n            d=\"M2755.055 251.342c3.706-15.663 1.087-10.881.636-14.826a25.593 25.593 0 00-1.589-4.342 69.669 69.669 0 01-5.93-14.191c-1.246-4.8.846-4.447.953-5.083 1.051-6.295-2.574-29.033 21.392-29.441 10.709-.182 17.44 4.66 20.439 10.7 3.459 6.961 2.255 15.279 2.224 16.309v.106s2.863 1.867 2.223 6.566-4.766 12.179-4.766 12.179l-4.13 9.743s-.209 9.409 1.377 11.967\"\r\n            data-name=\"Path 2786\"\r\n            transform=\"translate(-2747.777 -183.453)\"\r\n          ></path>\r\n          <path\r\n            d=\"M11851.5-5507.076s13.576 7.788 32.937-.424\"\r\n            data-name=\"Path 2785\"\r\n            transform=\"translate(-11844.326 5574.965)\"\r\n          ></path>\r\n        </g>\r\n      </g>\r\n      <g data-name=\"Group 1636\" transform=\"translate(72 32)\">\r\n        <text\r\n          data-name=\"1\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(96.825 39.841)\"\r\n        >\r\n          <tspan x=\"-6.674\" y=\"0\">\r\n            1\r\n          </tspan>\r\n        </text>\r\n        <g fill=\"none\" stroke=\"#000\" strokeWidth=\"1\" data-name=\"Group 1626\">\r\n          <path\r\n            d=\"M111.023 67.137c7.176 6.949 29.07 13.334 35.01 17.374a20.163 20.163 0 016.764 8.754 37.11 37.11 0 012.289 9.313s-.387 43.68 1.962 50.168a66.427 66.427 0 014.711 14.036c2 20.433 7.764 54.153 7.764 54.153s18.624 10.635 20.913 14.18-7.224 2.032-11.752 0 7.7 22.125 6.219 26.9-7.614-16.218-9.531-14.874 4.638 20.218 1.863 20.251-5.783-18.033-7.711-18.033 2.315 16.831 0 18.033-4.677-17.177-6.236-18.033 4.331 19.856 0 14.607-9.444-31.047-8.228-37.494c.6-3.2-8.216-19.434-13.553-35.866a194.146 194.146 0 01-7.309-33.393s-.163-21.75 4.907-36.938\"\r\n            data-name=\"Path 2769\"\r\n          ></path>\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            d=\"M135.066 140.648c-2.06 1.947-4.158 47-.474 55.148s5.324 33.925 5.324 33.925a257.049 257.049 0 01-1.879 27.207c-1.787 14.874-5.582 33.113-7.351 48.27-1.745 14.957-1.485 26.932-.5 29.24 1.838 4.327-4.2 32.076-7.472 53.21a145.978 145.978 0 00-1.734 24.365 7.6 7.6 0 000 4.125c.6 2.584 7.123 6.109 10.328 9.932 1.349 1.609 5.115 5.064 2.662 7.917-3.355 3.9-4.566 6.047-11.256 6.407-3.227.174-11.513-2.558-12.58-8.505s-5.83-6.743-6.056-7.6c-.2-.176-2.011-5.722 0-12.279 1.9-6.756-3.926-60.868-3.039-69.075s2.362-18.949 2.362-18.949l-8.369-86.762s-7.845 97.031-7.7 97.21-.092-.545 0 0c.551 3.26 3.535 4.137 3.172 15.279-4.714 23.446-1.8 61.156-1.8 61.156a58.329 58.329 0 00.709 7.331c.491 3.385 1.149 4.674 1.009 4.923-.139 2.053-2.06 1.542-5.831 5.743s-3.717 9.774-9.248 11.06-19.8-1.816-16.952-8.27 14.848-9.972 14.555-19.648c1.189-14.168-8.957-38.054-11.471-55.154a170.789 170.789 0 01-1.808-20.964s1.287-11.834 0-30.4a375.575 375.575 0 01-7.554-45.572c-1.242-13.274-1.7-25.537-2-29.179-.719-8.65 4.533-32.652 5.394-36.208s1.923-29.731 2.429-36.4-6.391-37.4-7-37.808 6.509 31.977 4.57 36.177c-.356.772.1 7.01-1.063 13.241a121.779 121.779 0 01-4.714 16.917s-12.87 35.7-14.187 38.719a1.531 1.531 0 01-.194.358c.221 2.929-5.457 38.468-8.01 37.545s1.651-15.03 0-14.19-3.556 18.175-6.6 17.55 1.8-16.557 0-16.557-4.353 14.939-7.189 16.557 3.025-18.505 1.02-19.345-5.807 16.98-9.04 15.985 8.376-21.843 6.708-26.551S.279 239.396.013 235.652s20.095-14.463 20.095-14.463l4.833-23.935 2.473-26.13 4.372-17.465s3.339-28.667 3.887-33.391-7.5-16.146 5.011-31.689c9.6-11.93 20.38-10.729 26.313-14.332.025-.014 10.465-1.843 11.522-6.31 3.7-15.658 1.1-10.924.648-14.868a25.446 25.446 0 00-1.585-4.366 69.809 69.809 0 01-5.9-14.2c-1.245-4.8.814-4.366.919-5 1.051-6.292-2.59-29.1 21.367-29.5 10.705-.182 17.514 4.654 20.513 10.688 3.458 6.958 2.211 15.326 2.181 16.355v.079s2.84 1.842 2.2 6.539-4.757 12.249-4.757 12.249l-4.087 9.669s-.258 9.425 1.327 11.983\"\r\n            data-name=\"Path 2768\"\r\n          ></path>\r\n          <path\r\n            d=\"M20.217 219.145a26.616 26.616 0 014.479 1.894 37.709 37.709 0 0010.965 3.507\"\r\n            data-name=\"Path 2789\"\r\n          ></path>\r\n          <path\r\n            d=\"M31.341 154.789s2.773-2.116 8.693-2.25c3.781-.086 8.785-.292 15.447 4.5\"\r\n            data-name=\"Path 2788\"\r\n          ></path>\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            d=\"M35.699 120.122s12.686-1.248 15.2.417\"\r\n            data-name=\"Path 2787\"\r\n          ></path>\r\n          <path\r\n            d=\"M78.397 68.265s19.184 49.543-23.256 70.694\"\r\n            data-name=\"Path 2744\"\r\n          ></path>\r\n          <path\r\n            d=\"M111.448 67.697s-18.361 50.205 24.074 71.355\"\r\n            data-name=\"Path 2745\"\r\n          ></path>\r\n          <path\r\n            d=\"M155.02 225.099s8.738 1.851 14.406-4.291\"\r\n            data-name=\"Path 2790\"\r\n          ></path>\r\n          <path\r\n            d=\"M134.43 156.298s13.5-5.328 22.738-2.6\"\r\n            data-name=\"Path 2791\"\r\n          ></path>\r\n          <path\r\n            d=\"M154.744 120.31s-12.027-1.6-16.043.317\"\r\n            data-name=\"Path 2792\"\r\n          ></path>\r\n          <path\r\n            d=\"M78.665 67.696s13.049 7.393 32.4-.815\"\r\n            data-name=\"Path 2770\"\r\n          ></path>\r\n          <path\r\n            d=\"M68.6 129.521a221.176 221.176 0 0026.986 1.984 207.49 207.49 0 0026.476-1.878\"\r\n            data-name=\"Path 2771\"\r\n          ></path>\r\n          <path\r\n            d=\"M57.247 175.176s25.856 1.394 39.401 1.517 35.591-2.986 35.591-2.986\"\r\n            data-name=\"Path 2774\"\r\n          ></path>\r\n          <path\r\n            d=\"M54.271 199.552s30.034 2.188 44.148 2.336c12.826.135 32.968-2.945 36.558-3.512l.517-.083\"\r\n            data-name=\"Path 2775\"\r\n          ></path>\r\n          <path\r\n            d=\"M56.212 187.897s28.306 2.621 42.415 2.77c12.825.135 34.913-3.175 34.913-3.175\"\r\n            data-name=\"Path 2776\"\r\n          ></path>\r\n          <path\r\n            d=\"M96.413 131.463s18.564 40.983 35.888 42.071\"\r\n            data-name=\"Path 2772\"\r\n          ></path>\r\n          <path\r\n            d=\"M96.146 131.427s-21.579 42.494-38.9 43.581\"\r\n            data-name=\"Path 2773\"\r\n          ></path>\r\n          <path d=\"M96.413 176.697v25.234\" data-name=\"Path 2777\"></path>\r\n          <path\r\n            d=\"M54.271 200.093s21.559 11.8 25.578 19.68 10 17.231 15.4 17.274 18.151-17.274 18.151-17.274l21.956-21.283\"\r\n            data-name=\"Path 2778\"\r\n          ></path>\r\n          <path\r\n            d=\"M60.082 315.134s10.135.861 17.5.9a64.153 64.153 0 0011.532-.787\"\r\n            data-name=\"Path 2779\"\r\n          ></path>\r\n          <path\r\n            d=\"M60.082 344.564s10.135.86 17.5.9a48.956 48.956 0 0012.686-1.518\"\r\n            data-name=\"Path 2781\"\r\n          ></path>\r\n          <path\r\n            d=\"M102.359 315.122s9.358.873 16.727.91a54.352 54.352 0 0011.039-.8\"\r\n            data-name=\"Path 2780\"\r\n          ></path>\r\n          <path\r\n            d=\"M100.928 344.276a163.942 163.942 0 0018.156 1.608 54.327 54.327 0 0011.039-.8\"\r\n            data-name=\"Path 2782\"\r\n          ></path>\r\n          <path\r\n            d=\"M72.795 410.502s3.936 1.485 11.057.756a44.646 44.646 0 004.757-.756\"\r\n            data-name=\"Path 2783\"\r\n          ></path>\r\n          <path\r\n            d=\"M104.66 410.502s3.936 1.485 11.057.756a44.646 44.646 0 004.757-.756\"\r\n            data-name=\"Path 2784\"\r\n          ></path>\r\n          <path\r\n            d=\"M111.448 67.697s-18.361 50.205 24.074 71.355\"\r\n            data-name=\"Path 2794\"\r\n          ></path>\r\n          <path\r\n            d=\"M154.744 120.31s-12.027-1.6-16.043.317\"\r\n            data-name=\"Path 2812\"\r\n          ></path>\r\n          <path\r\n            d=\"M111.448 67.697s-18.361 50.205 24.074 71.355\"\r\n            data-name=\"Path 2813\"\r\n          ></path>\r\n        </g>\r\n        <text\r\n          data-name=\"3\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(97.825 106.841)\"\r\n          onClick={() => handleClickArea(2)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            3\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"2\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(62.825 101.841)\"\r\n          onClick={() => handleClickArea(1)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            2\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"5\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(47.825 141.841)\"\r\n          onClick={() => handleClickArea(4)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            5\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"34\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(43.825 188.841)\"\r\n          onClick={() => handleClickArea(33)}\r\n        >\r\n          <tspan x=\"-13.348\" y=\"0\">\r\n            34\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"50\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(29.825 238.841)\"\r\n          onClick={() => handleClickArea(49)}\r\n        >\r\n          <tspan x=\"-13.348\" y=\"0\">\r\n            50\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"51\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(171.825 238.841)\"\r\n          onClick={() => handleClickArea(50)}\r\n        >\r\n          <tspan x=\"-12.235\" y=\"0\">\r\n            51\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"35\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(159.825 188.841)\"\r\n          onClick={() => handleClickArea(34)}\r\n        >\r\n          <tspan x=\"-12.235\" y=\"0\">\r\n            35\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"6\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"10\"\r\n          transform=\"translate(74.825 147.841)\"\r\n          onClick={() => handleClickArea(5)}\r\n        >\r\n          <tspan x=\"-5.562\" y=\"0\">\r\n            6\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"10\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(82.825 185.841)\"\r\n          onClick={() => handleClickArea(9)}\r\n        >\r\n          <tspan x=\"-13.348\" y=\"0\">\r\n            10\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"12\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"10\"\r\n          transform=\"translate(82.825 198.841)\"\r\n          onClick={() => handleClickArea(11)}\r\n        >\r\n          <tspan x=\"-11.123\" y=\"0\">\r\n            12\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"13\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"10\"\r\n          transform=\"translate(121.825 198.841)\"\r\n          onClick={() => handleClickArea(12)}\r\n        >\r\n          <tspan x=\"-11.123\" y=\"0\">\r\n            13\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"11\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(118.825 185.841)\"\r\n          onClick={() => handleClickArea(10)}\r\n        >\r\n          <tspan x=\"-12.463\" y=\"0\">\r\n            11\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"7\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(97.825 163.841)\"\r\n          onClick={() => handleClickArea(6)}\r\n        >\r\n          <tspan x=\"-6.674\" y=\"0\">\r\n            7\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"14\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(100.825 223.841)\"\r\n          onClick={() => handleClickArea(13)}\r\n        >\r\n          <tspan x=\"-12.235\" y=\"0\">\r\n            14\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"15\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(76.825 269.841)\"\r\n          onClick={() => handleClickArea(14)}\r\n        >\r\n          <tspan x=\"-12.235\" y=\"0\">\r\n            15\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"36\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(72.825 334.841)\"\r\n          onClick={() => handleClickArea(35)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            36\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"38\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(76.825 380.841)\"\r\n          onClick={() => handleClickArea(37)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            38\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"40\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(72.825 430.841)\"\r\n          onClick={() => handleClickArea(39)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            40\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"16\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(123.825 269.841)\"\r\n          onClick={() => handleClickArea(15)}\r\n        >\r\n          <tspan x=\"-12.235\" y=\"0\">\r\n            16\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"37\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(116.825 334.841)\"\r\n          onClick={() => handleClickArea(36)}\r\n        >\r\n          <tspan x=\"-6.674\" y=\"0\">\r\n            37\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"39\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(114.825 380.841)\"\r\n          onClick={() => handleClickArea(38)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            39\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"41\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"12\"\r\n          transform=\"translate(118.825 430.841)\"\r\n          onClick={() => handleClickArea(40)}\r\n        >\r\n          <tspan x=\"-6.674\" y=\"0\">\r\n            41\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"8\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(121.825 148.841)\"\r\n          onClick={() => handleClickArea(7)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            8\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"9\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"10\"\r\n          transform=\"translate(149.825 140.841)\"\r\n          onClick={() => handleClickArea(8)}\r\n        >\r\n          <tspan x=\"-5.562\" y=\"0\">\r\n            9\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          data-name=\"4\"\r\n          fontFamily=\"Helvetica\"\r\n          fontSize=\"11\"\r\n          transform=\"translate(130.825 101.841)\"\r\n          onClick={() => handleClickArea(3)}\r\n        >\r\n          <tspan x=\"-6.118\" y=\"0\">\r\n            4\r\n          </tspan>\r\n        </text>\r\n      </g>\r\n      <text\r\n        fontFamily=\"Montserrat-SemiBold, Montserrat\"\r\n        fontSize=\"14\"\r\n        fontWeight=\"600\"\r\n        transform=\"translate(144 14)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Frente\r\n        </tspan>\r\n      </text>\r\n      <g\r\n        data-name=\"Group 1628\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(-25 -213)\"\r\n      >\r\n        <text transform=\"translate(237 283)\">\r\n          <tspan x=\"0\" y=\"0\">\r\n            Esquerdo\r\n          </tspan>\r\n        </text>\r\n        <text transform=\"translate(99 283)\">\r\n          <tspan x=\"0\" y=\"0\">\r\n            Direito\r\n          </tspan>\r\n        </text>\r\n      </g>\r\n      <g data-name=\"Group 1006\" transform=\"translate(0 141.816)\">\r\n        <rect\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"#44afab\"\r\n          data-name=\"Rectangle 1922\"\r\n          rx=\"4\"\r\n          transform=\"translate(0 .184)\"\r\n        ></rect>\r\n      </g>\r\n      <g data-name=\"Group 1629\" transform=\"translate(0 90)\">\r\n        <rect\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"#f66569\"\r\n          data-name=\"Rectangle 1922\"\r\n          rx=\"4\"\r\n        ></rect>\r\n      </g>\r\n      <g data-name=\"Group 1630\" transform=\"translate(0 115.908)\">\r\n        <rect\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"#f6f665\"\r\n          data-name=\"Rectangle 1922\"\r\n          rx=\"4\"\r\n          transform=\"translate(0 .092)\"\r\n        ></rect>\r\n      </g>\r\n      <text\r\n        fill=\"#f66569\"\r\n        data-name=\"Dor forte\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(24 102)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Dor forte\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"Dor moderada\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(24 128)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Dor moderada\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"Dor leve\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(24 154)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Dor leve\r\n        </tspan>\r\n      </text>\r\n      <g\r\n        onClick={() => setIsBodyFrontSide(false)}\r\n        data-name=\"Group 1631\"\r\n        transform=\"translate(-17 205)\"\r\n      >\r\n        <text\r\n          fontFamily=\"Montserrat-Medium, Montserrat\"\r\n          fontSize=\"12\"\r\n          fontWeight=\"500\"\r\n          transform=\"translate(292 264)\"\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          <tspan x=\"0\" y=\"0\">\r\n            Costas\r\n          </tspan>\r\n        </text>\r\n        <g transform=\"translate(296 208.275)\">\r\n          <path\r\n            d=\"M31.084 26.057a.511.511 0 00-.51.51c0 3.327-6.768 6.136-14.778 6.137S1.017 29.893 1.017 26.567c0-1.536 1.521-3.08 4.171-4.232a27.23 27.23 0 0110.429-1.9L13.8 22.25a.51.51 0 00.722.72l3.05-3.047-3.05-3.05a.509.509 0 00-.72.72l1.823 1.823A28.321 28.321 0 004.784 21.4C1.7 22.742 0 24.578 0 26.568c0 4.014 6.94 7.156 15.8 7.156s15.8-3.146 15.8-7.158a.514.514 0 00-.516-.509z\"\r\n            data-name=\"Path 2878\"\r\n          ></path>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n\r\n  const backSide = (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"316\"\r\n      height=\"472.908\"\r\n      viewBox=\"0 0 316 472.908\"\r\n    >\r\n      <text\r\n        fontFamily=\"Montserrat-SemiBold, Montserrat\"\r\n        fontSize=\"14\"\r\n        fontWeight=\"600\"\r\n        transform=\"translate(144 14)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Costas\r\n        </tspan>\r\n      </text>\r\n      <g\r\n        data-name=\"Group 1628\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(-20 -213)\"\r\n      >\r\n        <text transform=\"translate(277 283)\">\r\n          <tspan x=\"-34.25\" y=\"0\">\r\n            Direito\r\n          </tspan>\r\n        </text>\r\n        <text transform=\"translate(99 283)\">\r\n          <tspan x=\"0\" y=\"0\">\r\n            Esquerdo\r\n          </tspan>\r\n        </text>\r\n      </g>\r\n      <g\r\n        onClick={() => setIsBodyFrontSide(true)}\r\n        data-name=\"Group 1631\"\r\n        transform=\"translate(-272 200)\"\r\n      >\r\n        <text\r\n          fontFamily=\"Montserrat-Medium, Montserrat\"\r\n          fontSize=\"12\"\r\n          fontWeight=\"500\"\r\n          transform=\"translate(292 264)\"\r\n          style={{ cursor: 'pointer' }}\r\n        >\r\n          <tspan x=\"0\" y=\"0\">\r\n            Frente\r\n          </tspan>\r\n        </text>\r\n        <g transform=\"translate(296 208.275)\">\r\n          <path\r\n            d=\"M31.084 26.057a.511.511 0 00-.51.51c0 3.327-6.768 6.136-14.778 6.137S1.017 29.893 1.017 26.567c0-1.536 1.521-3.08 4.171-4.232a27.23 27.23 0 0110.429-1.9L13.8 22.25a.51.51 0 00.722.72l3.05-3.047-3.05-3.05a.509.509 0 00-.72.72l1.823 1.823A28.321 28.321 0 004.784 21.4C1.7 22.742 0 24.578 0 26.568c0 4.014 6.94 7.156 15.8 7.156s15.8-3.146 15.8-7.158a.514.514 0 00-.516-.509z\"\r\n            data-name=\"Path 2878\"\r\n          ></path>\r\n        </g>\r\n      </g>\r\n      <g data-name=\"body-map\" transform=\"translate(70 30) scale(1.275)\">\r\n        <g data-name=\"Group 1678\" transform=\"translate(-18451.397 6146.608)\">\r\n          <path\r\n            fill={colorArray[bodyMap[47]]}\r\n            onClick={() => handleClickArea(47)}\r\n            d=\"M13561.381-2258.169s2.667 13.574 1.429 15.682c-.431.731-2.5 2.178-5.6 2.377-5.814.373-14.606-1.409-19.22-3.014s-6.785-3.027-5.321-5.268 10.292-2.034 12.464-3.9c3.087-1.009 3.577-6.513 3.577-6.513a21.726 21.726 0 006.47 1.587 17.885 17.885 0 006.201-.951z\"\r\n            data-name=\"Path 2868\"\r\n            transform=\"translate(4957.509 -3565.728)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[48]]}\r\n            onClick={() => handleClickArea(48)}\r\n            d=\"M14046.137-2251.2h13.082a5.821 5.821 0 00.535 3.405c.844 1.274 5.26 1.966 5.693 2.255 4.027 2.689 10.938 2.821 10.141 5.571s-7.451 4.464-13.322 5.431c-4.086.674-8.219 1.551-11.494 1.623a12.067 12.067 0 01-5.416-1.012c-1.631-.921.781-17.273.781-17.273z\"\r\n            data-name=\"Path 2867\"\r\n            transform=\"translate(4487.477 -3572.7)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[45]]}\r\n            onClick={() => handleClickArea(45)}\r\n            d=\"M13640.169-2989.8a72.152 72.152 0 0111.059-1.722 62.426 62.426 0 0110.619.348 31.217 31.217 0 012.125 5.428c1.379 4.195-.529 12.53-.529 12.53a165.146 165.146 0 00-2.172 18.365c-.713 10.784-.674 24.771-.674 24.771a10.58 10.58 0 01-5.613.976 35.066 35.066 0 01-7.363-1.858 132.578 132.578 0 00-2.916-24.4c-1-4.933-1.541-9.567-2.7-15.543l-1.334-9.235z\"\r\n            data-name=\"Path 2865\"\r\n            transform=\"translate(4858.516 -2893.73)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[46]]}\r\n            onClick={() => handleClickArea(46)}\r\n            d=\"M13670.25-2990.114a85.944 85.944 0 00-10.787-1.463 77.673 77.673 0 00-11.346.3s.506 1-.873 5.192.639 13.91.639 13.91l1.145 17.383c.711 10.783.783 24.654.783 24.654a12.157 12.157 0 005.895.976c3.256-.312 7.23-.976 7.23-.976a108.8 108.8 0 012.346-25.281c1-4.934 1.615-9.834 2.773-15.81l1.553-9.074z\"\r\n            data-name=\"Path 2866\"\r\n            transform=\"translate(4883.841 -2893.676)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[43]]}\r\n            onClick={() => handleClickArea(43)}\r\n            d=\"M13642.276-3254.41a14.579 14.579 0 009.219 3.076c5.789 0 13.941-3.076 13.941-3.076l-1.674 21.882a126.122 126.122 0 00-13.367 0 25.6 25.6 0 00-8.119 1.721z\"\r\n            data-name=\"Path 2863\"\r\n            transform=\"translate(4856.583 -2652.605)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[44]]}\r\n            onClick={() => handleClickArea(44)}\r\n            d=\"M13642.276-3254.41a14.579 14.579 0 009.219 3.076 64.047 64.047 0 0013.141-1.889l-1.09 13.92.848 8.822s-6.77-2.018-12.141-1.588-9.686.368-9.686.368l.775-7.6z\"\r\n            data-name=\"Path 2864\"\r\n            transform=\"translate(4889.615 -2653.268)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[31]]}\r\n            onClick={() => handleClickArea(31)}\r\n            d=\"M13584.384-3975.873s-3.832 54.086-4.1 54.153c-.132.034-7.81 3.172-13.565 3.07a16.08 16.08 0 01-9.56-3.443s-3.315-13.632-5.289-28.636-2.3-31.346-2.3-31.346 9.284 8.8 18.063 10.361 16.751-4.159 16.751-4.159z\"\r\n            data-name=\"Path 2861\"\r\n            transform=\"translate(4941.597 -1985.268)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[32]]}\r\n            onClick={() => handleClickArea(32)}\r\n            d=\"M13548.963-3975.539s4.955 53.252 5.22 53.319c.133.034 6.832 3.509 12.587 3.407a22.83 22.83 0 009.9-2.451s2.877-14.461 4.852-29.464 2.3-31.346 2.3-31.346-9.284 8.8-18.063 10.361-16.796-3.826-16.796-3.826z\"\r\n            data-name=\"Path 2862\"\r\n            transform=\"translate(4977.425 -1985.268)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[29]]}\r\n            onClick={() => handleClickArea(29)}\r\n            d=\"M13842.288-4347.538a16.452 16.452 0 005.246-.878 24.731 24.731 0 005.3-2.879 20.788 20.788 0 005.342 2.879 41.328 41.328 0 007.283 1.678v-44.629a44.093 44.093 0 01-11.523 1.8 45.593 45.593 0 01-11.645-1.8z\"\r\n            data-name=\"Path 2860\"\r\n            transform=\"translate(4673.171 -1609.853)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[28]]}\r\n            onClick={() => handleClickArea(28)}\r\n            d=\"M13553.967-4316.747a30.771 30.771 0 0110.2-2.257 29.389 29.389 0 0110.092 1.9l.316 36.406a26.082 26.082 0 01-6.029 0 29 29 0 01-7.779-2.1c-6.15-2.613-10.789-8.351-10.789-8.351a102.353 102.353 0 011.152-11.159c.999-6.401 2.837-14.439 2.837-14.439z\"\r\n            data-name=\"Path 2857\"\r\n            transform=\"translate(4941.223 -1676.214)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[30]]}\r\n            onClick={() => handleClickArea(30)}\r\n            d=\"M13586.678-4310.941a27.728 27.728 0 00-10.268-2.606 33.951 33.951 0 00-8.922.978v37.341s1.15-.088 4.576-.469c2.4-.268 5.953-1.693 8.5-2.775a24.655 24.655 0 009.729-7.884 91.432 91.432 0 00-1.107-10.535c-1-6.4-2.508-14.05-2.508-14.05z\"\r\n            data-name=\"Path 2858\"\r\n            transform=\"translate(4971.226 -1681.299)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[23]]}\r\n            onClick={() => handleClickArea(23)}\r\n            d=\"M13867.783-5004.026a52.393 52.393 0 01-11.234 1.371 62.582 62.582 0 01-11.865-1.371v-45.8a24.288 24.288 0 006.723-4.048 19.993 19.993 0 004.16-5.952 29.273 29.273 0 005.471 6.681 22.589 22.589 0 006.746 3.77z\"\r\n            data-name=\"Path 2856\"\r\n            transform=\"translate(4670.975 -996.769)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[26]]}\r\n            onClick={() => handleClickArea(26)}\r\n            d=\"M13601.787-4643a53.745 53.745 0 009.461-2.133 59.471 59.471 0 009.117-4.111v29.321a28.116 28.116 0 00-10.189-1.908 27.219 27.219 0 00-9.895 2.726z\"\r\n            data-name=\"Path 2854\"\r\n            transform=\"translate(4895.093 -1373.327)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[27]]}\r\n            onClick={() => handleClickArea(27)}\r\n            d=\"M13621.9-4640.663s-3.68-1.125-8.325-2.686a40.072 40.072 0 01-8.649-4.3v29.048a54.283 54.283 0 019.8-.594 20.85 20.85 0 019.373 3.066l-1.937-8.042z\"\r\n            data-name=\"Path 2855\"\r\n            transform=\"translate(4933.912 -1375.288)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[22]]}\r\n            onClick={() => handleClickArea(22)}\r\n            d=\"M13621.78-4925.128v22.529a52.862 52.862 0 01-9 4.6 49.477 49.477 0 01-9.614 2.4s.693-1.449.439-7-2.023-15.328-2.023-15.328a72.749 72.749 0 0011.2-2.765 45.979 45.979 0 008.998-4.436z\"\r\n            data-name=\"Path 2852\"\r\n            transform=\"translate(4893.904 -1120.295)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[24]]}\r\n            onClick={() => handleClickArea(24)}\r\n            d=\"M13610.513-4912.015v21.441a34.524 34.524 0 008.263 4.6 39.1 39.1 0 008.508 2.176s.413-1.225.667-6.777a143.437 143.437 0 011.814-14.342s-5.939-1.95-10.989-3.751-8.263-3.347-8.263-3.347z\"\r\n            data-name=\"Path 2853\"\r\n            transform=\"translate(4928.369 -1132.487)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[18]]}\r\n            onClick={() => handleClickArea(18)}\r\n            d=\"M13410.581-5412.238h18.824l.026 40.444a69.072 69.072 0 01-9.567 4.618 79.077 79.077 0 01-10.633 3.061l-3.729-14.468a12.1 12.1 0 00-4.31-.711 65.2 65.2 0 00-7.215.446 22.512 22.512 0 01-2.142-9.914c.229-5.227.482-6.165 3.061-11s3.358-5.286 7.258-8.327a25.176 25.176 0 018.427-4.149z\"\r\n            data-name=\"Path 2850\"\r\n            transform=\"translate(5086.254 -673.544)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[20]]}\r\n            onClick={() => handleClickArea(20)}\r\n            d=\"M13421.965-5412.238h-15.128l-.182 40.842a41.841 41.841 0 008.337 4.22 79.034 79.034 0 0010.633 3.061l3.259-14.732a30.472 30.472 0 014.78-.446 65.17 65.17 0 017.214.446 44.958 44.958 0 00.522-9.238c-.23-5.227.693-6.791-1.887-11.622s-2.642-4.753-6.541-7.794-11.007-4.737-11.007-4.737z\"\r\n            data-name=\"Path 2851\"\r\n            transform=\"translate(5132.155 -673.461)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[19]]}\r\n            onClick={() => handleClickArea(19)}\r\n            d=\"M13845.085-5412.238h23.18v41.182a38.429 38.429 0 01-7.926-5.466 19.2 19.2 0 01-4.312-6.475 20.615 20.615 0 01-4.863 7.021 43.674 43.674 0 01-6.078 4.454z\"\r\n            data-name=\"Path 2849\"\r\n            transform=\"translate(4670.606 -673.541)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[17]]}\r\n            onClick={() => handleClickArea(17)}\r\n            d=\"M13646.685-5593.067a38.286 38.286 0 0011.559 2.234 41.267 41.267 0 0011.879-1.984s-.74 5.716 2.318 7.944 13.66 6.728 13.66 6.728l-56.2-.117 6.714-2.446s5.468-.516 7.985-3.605 2.085-8.754 2.085-8.754z\"\r\n            data-name=\"Path 2848\"\r\n            transform=\"translate(4867.931 -507.602)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[16]]}\r\n            onClick={() => handleClickArea(16)}\r\n            d=\"M13757.3-6100.62a34.1 34.1 0 0010.945 2.181 44.032 44.032 0 0012-1.81v-2.788s1.8-4.062 3.785-8.382c1.186-2.577 2.721-5.053 3.2-7.353 1.279-6.134-1.676-6.473-1.676-6.473s4.637-20.046-16.121-21.315-18.277 22.938-18.277 22.938-2.09-.1-.678 4.851 6.326 14.952 6.326 14.952z\"\r\n            data-name=\"Path 2847\"\r\n            transform=\"translate(4757.81)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[41]]}\r\n            onClick={() => handleClickArea(41)}\r\n            d=\"M15324.844-5600.292a37.582 37.582 0 00-9.125-2.446 31.513 31.513 0 00-8.564.271s-2.469 1.005-4.129 11.836c-.379 2.47-.48 5.976-1.049 9.85-1.916 13.066-5.02 29.752-5.02 29.752a24.681 24.681 0 005.375 2.636c2.865.939 6.65 1.732 6.65 1.732a259.644 259.644 0 0010.238-27.244c1.764-2.269 5.624-26.387 5.624-26.387z\"\r\n            data-name=\"Path 2870\"\r\n            transform=\"translate(3170.729 -423.957)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[51]]}\r\n            onClick={() => handleClickArea(51)}\r\n            d=\"M.113 33.069c-.952-5.054 4.38-27.925 6.151-30.141.929-1.163.695 2.179.438 5.52-.232 3.026-.482 6.052.1 5.733C8.023 13.51 9.875-.9 11.69.044s-1.4 13.157.115 13.157S15.56.018 17.735.044s-2.651 14.1-1.148 15.154c.717.5 1.873-2.83 3.11-6.162 1.356-3.651 2.809-7.3 3.892-5.91 2.071 2.662-8.2 22.171-4.166 21.632s10.456-2.186 8.661.593c-1.561 2.416-13.04 9.29-16.008 11.042l.047.05-.08-.031-.665.391z\"\r\n            data-name=\"Union 47\"\r\n            transform=\"rotate(180 9239.896 -2968.69)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[21]]}\r\n            onClick={() => handleClickArea(21)}\r\n            d=\"M15303.732-5915.786s-8.748-1.289-12.648-.263c-.658.174-.439 2.843-.439 2.843l-.588 10.273-1.5 13.831a23.6 23.6 0 019.457-1.234 29.463 29.463 0 018.906 2.966s-.338-7.063-1.2-14.059-1.988-14.357-1.988-14.357z\"\r\n            data-name=\"Path 2869\"\r\n            transform=\"translate(3188.443 -136.376)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[25]]}\r\n            onClick={() => handleClickArea(25)}\r\n            d=\"M15300.193-5915.786s8.746-1.289 12.646-.263c.658.174.441 2.843.441 2.843v10.2l1.412 12.925a31.631 31.631 0 00-8.779-.253 41.23 41.23 0 00-9.182 2.531 101.071 101.071 0 01.664-13.64 126.47 126.47 0 012.798-14.343z\"\r\n            data-name=\"Path 2873\"\r\n            transform=\"translate(3260.528 -136.375)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[52]]}\r\n            onClick={() => handleClickArea(52)}\r\n            d=\"M6.812 22.622c-.566-.311.006 2.814.5 5.938.572 3.624 1.039 7.247-.5 5.513C3.947 30.842-.829 8.788.124 3.734L11.388 0s.241.14.665.391l.08-.031-.047.05c2.968 1.752 14.447 8.626 16.008 11.042 1.8 2.779-5.663 1.593-9.214 0s5.11 18.25 4.543 21.312c-.3 1.616-1.852-2.077-3.474-5.77-1.451-3.3-2.956-6.608-3.665-6.11-1.5 1.054 3.635 15.85 1.46 15.876S13.212 22.622 11.7 22.622s1.815 13.195 0 14.137a.371.371 0 01-.172.044C9.769 36.8 8 23.272 6.812 22.622z\"\r\n            data-name=\"Union 48\"\r\n            transform=\"translate(18573.1 -5973.935)\"\r\n          ></path>\r\n          <path\r\n            fill={colorArray[bodyMap[42]]}\r\n            onClick={() => handleClickArea(42)}\r\n            d=\"M15296.713-5600.292a37.584 37.584 0 019.123-2.446 31.531 31.531 0 018.566.271s2.467 1.005 4.129 11.836c.379 2.47.48 5.976 1.047 9.85 1.918 13.066 5.041 30.881 5.041 30.881a15 15 0 01-5.1 3.121 15.291 15.291 0 01-6.178.427 208.031 208.031 0 01-11.006-27.553c-1.763-2.269-5.622-26.387-5.622-26.387z\"\r\n            data-name=\"Path 2874\"\r\n            transform=\"translate(3260.527 -423.792)\"\r\n          ></path>\r\n          <path\r\n            fill=\"none\"\r\n            d=\"M13844.684-4389.549a41.788 41.788 0 0011.086 1.663 55.3 55.3 0 0012.1-1.663\"\r\n            data-name=\"Path 2859\"\r\n            transform=\"translate(4670.975 -1611.485)\"\r\n          ></path>\r\n        </g>\r\n        <g data-name=\"Group 1643\" transform=\"translate(-112.397 -255.392)\">\r\n          <g\r\n            fill=\"none\"\r\n            stroke=\"#000\"\r\n            strokeWidth=\"1\"\r\n            data-name=\"Group 1627\"\r\n            transform=\"translate(113 256)\"\r\n          >\r\n            <path\r\n              d=\"M87.461 52.948c5.573 5.4 22.572 10.353 27.183 13.49a15.656 15.656 0 015.252 6.8 28.81 28.81 0 011.777 7.231s-.3 33.915 1.523 38.952a51.575 51.575 0 013.657 10.9c1.556 15.865 6.029 42.047 6.029 42.047s14.46 8.257 16.238 11.01-5.609 1.578-9.125 0 5.39 17.858 4.829 20.89-5.912-12.593-7.4-11.549 3.6 15.7 1.446 15.724-4.49-14-5.988-14 1.8 13.068 0 14-3.631-13.337-4.842-14 1.265 11.3 0 11.342-7.332-24.106-6.389-29.112c.469-2.488-6.38-15.089-10.523-27.848a150.718 150.718 0 01-5.673-25.928s-.127-16.887 3.81-28.68\"\r\n              data-name=\"Path 2639\"\r\n            ></path>\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              d=\"M106.069 110.134c-1.618 1.524-3.265 36.8-.372 43.183s4.181 26.565 4.181 26.565a200.648 200.648 0 01-1.475 21.3c-1.4 11.647-4.384 25.929-5.773 37.8-1.37 11.712-1.166 21.089-.4 22.9 1.443 3.388-3.3 25.116-5.868 41.665A114.027 114.027 0 0095 322.626a5.939 5.939 0 000 3.23c.468 2.023 13.426 4.224 15.942 7.217s-5.875 4.755-5.875 4.755-17.819 3.6-20.881 3.132-3.127-1.056-3.547-2.64c-.158-.138-.491-10.559 1.087-15.694 1.493-5.29-3.083-47.662-2.386-54.088s1.855-14.838 1.855-14.838l-6.573-67.938s-6.161 75.979-6.05 76.119-.073-.427 0 0c.432 2.553 2.775 3.239 2.491 11.964-3.7 18.359-3.728 48.78-3.728 48.78s.146 2.175.7 5.977a77.947 77.947 0 01.539 9.225c-.11 1.608-3.144 3.132-6.718 3.132-6.272 0-18.369-3.132-18.369-3.132s-4.619-2.235-5.388-3.752 2.31-2.315 2.31-2.315l6.363-1.8s7.563-.649 7.333-8.226c.933-11.094-3.862-28.9-5.836-42.3a133.311 133.311 0 01-1.42-16.416 147.949 147.949 0 000-23.8 293.22 293.22 0 01-5.932-35.685c-.975-10.394-1.336-20-1.573-22.848-.564-6.774 3.561-25.567 4.236-28.353s1.51-23.281 1.907-28.5-5.019-29.286-5.5-29.6 5.112 25.039 3.589 28.328c-.28.6.076 5.489-.834 10.368a95.172 95.172 0 01-3.7 13.247s-10.107 27.957-11.141 30.318a1.208 1.208 0 01-.153.28c.174 2.294-4.285 30.122-6.29 29.4s1.3-11.769 0-11.111-2.793 14.232-5.185 13.743 1.412-12.965 0-12.965-3.418 11.7-5.646 12.965 2.376-14.49.8-15.148-4.561 13.3-7.1 12.517 6.578-17.1 5.268-20.791-9.391 2.089-9.6-.843 15.78-11.325 15.78-11.325l3.8-18.742 1.942-20.46 3.433-13.676s2.622-22.447 3.052-26.146-5.889-12.643 3.935-24.814c7.541-9.342 16-8.4 20.664-11.222.02-.011 8.219-1.443 9.048-4.941 2.909-12.261.863-8.554.509-11.642a19.831 19.831 0 00-1.245-3.419 54.585 54.585 0 01-4.632-11.122c-.978-3.76.639-3.419.722-3.917.825-4.927-2.034-22.784 16.78-23.1 8.407-.143 13.754 3.645 16.109 8.369 2.716 5.449 1.737 12 1.713 12.807v.062s2.231 1.442 1.729 5.12-3.736 9.591-3.736 9.591l-3.209 7.571s-.2 7.38 1.042 9.383\"\r\n              data-name=\"Path 2640\"\r\n            ></path>\r\n            <path\r\n              d=\"M24.654 121.201s2.151-1.643 6.749-1.748a17.248 17.248 0 0111.994 3.495\"\r\n              data-name=\"Path 2742\"\r\n            ></path>\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              d=\"M28.058 94.058s9.85-.969 11.8.323\"\r\n              data-name=\"Path 2743\"\r\n            ></path>\r\n            <path\r\n              d=\"M62.737 45.364h0a34.315 34.315 0 0012.951 2c3.022-.115 8.025-.6 10.4-2\"\r\n              data-name=\"Path 2746\"\r\n            ></path>\r\n            <path d=\"M45.115 60.228h57.283\" data-name=\"Path 2747\"></path>\r\n            <path d=\"M63.713 61.049v127.323\" data-name=\"Path 2748\"></path>\r\n            <path d=\"M86.841 61.049v127.323\" data-name=\"Path 2749\"></path>\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              d=\"M43.533 108.7s25.99-5.562 30.965-18.611\"\r\n              data-name=\"Path 2751\"\r\n            ></path>\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              d=\"M105.679 108.747s-25.843-5.5-30.889-18.5c0-.013-.015-.039-.025-.065\"\r\n              data-name=\"Path 2752\"\r\n            ></path>\r\n            <path\r\n              d=\"M43.193 153.739s10.655-4.9 20.566-.363\"\r\n              data-name=\"Path 2753\"\r\n            ></path>\r\n            <path\r\n              d=\"M105.811 154.744s-5.543-4.535-19.314-1.521\"\r\n              data-name=\"Path 2754\"\r\n            ></path>\r\n            <path\r\n              d=\"M45.177 130.562s13.366-2.518 18.459-7.036\"\r\n              data-name=\"Path 2755\"\r\n            ></path>\r\n            <path\r\n              d=\"M103.9 130.394s-11.955-2.678-17.053-7.2\"\r\n              data-name=\"Path 2756\"\r\n            ></path>\r\n            <path\r\n              d=\"M74.282 185.478s-17.488 13.242-35.154-6.476\"\r\n              data-name=\"Path 2757\"\r\n            ></path>\r\n            <path\r\n              d=\"M74.183 185.486s17.393 13.233 35.061-6.484\"\r\n              data-name=\"Path 2758\"\r\n            ></path>\r\n            <path\r\n              d=\"M46.729 239.258s6.009 6.988 23.322.166\"\r\n              data-name=\"Path 2759\"\r\n            ></path>\r\n            <path\r\n              d=\"M102.258 239.653s-4.929 6.593-22.242-.229\"\r\n              data-name=\"Path 2760\"\r\n            ></path>\r\n            <path\r\n              d=\"M46.722 263.164s6.293-2.634 21.456-1.522\"\r\n              data-name=\"Path 2761\"\r\n            ></path>\r\n            <path\r\n              d=\"M102.142 263.089s-6.882-2.559-22.044-1.448\"\r\n              data-name=\"Path 2762\"\r\n            ></path>\r\n            <path\r\n              d=\"M53.954 322.048s6.884 3.132 12.884 1.065\"\r\n              data-name=\"Path 2763\"\r\n            ></path>\r\n            <path\r\n              d=\"M81.36 322.931s6.743 2.417 13.339 0\"\r\n              data-name=\"Path 2764\"\r\n            ></path>\r\n            <path\r\n              d=\"M121.705 176.249s6.786 1.437 11.186-3.332\"\r\n              data-name=\"Path 2765\"\r\n            ></path>\r\n            <path\r\n              d=\"M105.469 122.373s10.481-4.137 17.655-2.02\"\r\n              data-name=\"Path 2766\"\r\n            ></path>\r\n            <path\r\n              d=\"M121.232 94.205s-9.338-1.24-12.457.247\"\r\n              data-name=\"Path 2767\"\r\n            ></path>\r\n            <path\r\n              d=\"M15.369 171.701a20.68 20.68 0 013.478 1.471 29.278 29.278 0 008.513 2.723\"\r\n              data-name=\"Path 2877\"\r\n            ></path>\r\n          </g>\r\n          <text\r\n            data-name=\"17\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(188 287)\"\r\n            onClick={() => handleClickArea(16)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              17\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"18\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(188 313)\"\r\n            onClick={() => handleClickArea(17)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              18\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"19\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(161 339)\"\r\n            onClick={() => handleClickArea(18)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              19\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"22\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(147 367)\"\r\n            onClick={() => handleClickArea(21)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              22\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"42\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(142 402)\"\r\n            onClick={() => handleClickArea(41)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              42\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"27\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(167 398)\"\r\n            onClick={() => handleClickArea(26)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              27\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"29\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(165 428)\"\r\n            onClick={() => handleClickArea(28)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              29\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"32\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(169 473)\"\r\n            onClick={() => handleClickArea(31)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              32\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"44\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(172 511)\"\r\n            onClick={() => handleClickArea(43)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              44\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"46\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(172 543)\"\r\n            onClick={() => handleClickArea(45)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              46\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"48\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(170 592)\"\r\n            onClick={() => handleClickArea(47)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              48\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"49\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(203 592)\"\r\n            onClick={() => handleClickArea(48)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              49\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"47\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(203 543)\"\r\n            onClick={() => handleClickArea(46)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              47\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"33\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(206 473)\"\r\n            onClick={() => handleClickArea(32)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              33\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"45\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(204 511)\"\r\n            onClick={() => handleClickArea(44)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              45\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"31\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(211 428)\"\r\n            onClick={() => handleClickArea(30)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              31\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"53\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(245 443)\"\r\n            onClick={() => handleClickArea(52)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              53\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"52\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(131 443)\"\r\n            onClick={() => handleClickArea(51)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              52\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"30\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(188 422)\"\r\n            onClick={() => handleClickArea(29)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              30\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"28\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(209 401)\"\r\n            onClick={() => handleClickArea(27)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              28\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"43\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(232 398)\"\r\n            onClick={() => handleClickArea(42)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              43\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"23\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(167 376)\"\r\n            onClick={() => handleClickArea(22)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              23\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"24\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(188 374)\"\r\n            onClick={() => handleClickArea(23)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              24\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"25\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(209 376)\"\r\n            onClick={() => handleClickArea(24)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              25\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"26\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(227 368)\"\r\n            onClick={() => handleClickArea(25)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              26\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"20\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(188 335)\"\r\n            onClick={() => handleClickArea(19)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              20\r\n            </tspan>\r\n          </text>\r\n          <text\r\n            data-name=\"21\"\r\n            fontFamily=\"Helvetica\"\r\n            fontSize=\"9\"\r\n            transform=\"translate(215 339)\"\r\n            onClick={() => handleClickArea(20)}\r\n          >\r\n            <tspan x=\"-5.005\" y=\"0\">\r\n              21\r\n            </tspan>\r\n          </text>\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"#000\"\r\n            strokeWidth=\"1\"\r\n            d=\"M176.658 401.78a46.509 46.509 0 0011.921 2.009A44.154 44.154 0 00199.921 402\"\r\n            data-name=\"Path 2879\"\r\n          ></path>\r\n        </g>\r\n      </g>\r\n      <g data-name=\"Group 1006\" transform=\"translate(0 141.816)\">\r\n        <rect\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"#44afab\"\r\n          data-name=\"Rectangle 1922\"\r\n          rx=\"4\"\r\n          transform=\"translate(0 .184)\"\r\n        ></rect>\r\n      </g>\r\n      <g data-name=\"Group 1629\" transform=\"translate(0 90)\">\r\n        <rect\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"#f66569\"\r\n          data-name=\"Rectangle 1922\"\r\n          rx=\"4\"\r\n        ></rect>\r\n      </g>\r\n      <g data-name=\"Group 1630\" transform=\"translate(0 115.908)\">\r\n        <rect\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"#f6f665\"\r\n          data-name=\"Rectangle 1922\"\r\n          rx=\"4\"\r\n          transform=\"translate(0 .092)\"\r\n        ></rect>\r\n      </g>\r\n      <text\r\n        data-name=\"Dor forte\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(24 102)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Dor forte\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"Dor moderada\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(24 128)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Dor moderada\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"Dor leve\"\r\n        fontFamily=\"Montserrat-Medium, Montserrat\"\r\n        fontSize=\"10\"\r\n        fontWeight=\"500\"\r\n        transform=\"translate(24 154)\"\r\n      >\r\n        <tspan x=\"0\" y=\"0\">\r\n          Dor leve\r\n        </tspan>\r\n      </text>\r\n    </svg>\r\n  );\r\n  return isFrontSide ? frontSide : backSide;\r\n}\r\n\r\nexport default BodyMapBPI;\r\n","import { useEffect, useMemo } from 'react';\r\nimport { AxisOptions, Chart } from 'react-charts';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Link from '@material-ui/core/Link';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport {\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  PatientBasicResult,\r\n  PatientBPIResult,\r\n  PatientFibromialgiaResult,\r\n  PatientForm,\r\n  PatientHADResult,\r\n  PatientSBSTResult,\r\n  PatientSF36Result,\r\n  PatientWOMACResult,\r\n  PatientSPADIResult,\r\n} from '../../models/PatientForm';\r\nimport BodyMapBPI from '../patient/BodyMapBPI';\r\nimport { PatientReportPanelType } from '../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n    circularProgress: {\r\n      margin: theme.spacing(4),\r\n      color: deepOrange[500],\r\n      position: 'absolute',\r\n      left: 0,\r\n    },\r\n    circle: {\r\n      strokeLinecap: 'round',\r\n    },\r\n    bottom: {\r\n      margin: theme.spacing(4),\r\n      color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    dn4Slider: {\r\n      width: '80%',\r\n    },\r\n    oswLinearProgress: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    oswPercentage: {\r\n      color: deepOrange[500],\r\n    },\r\n    hadTextResult: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    slider: {\r\n      margin: '30px 0',\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    fibromialgiaDiagnosis: {\r\n      color: deepOrange[500],\r\n      margin: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst BorderLinearProgress = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: 10,\r\n      borderRadius: 5,\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor:\r\n        theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    bar: {\r\n      borderRadius: 5,\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n  })\r\n)(LinearProgress);\r\n\r\ninterface PatientSummaryProps {\r\n  questionaires: PatientForm[];\r\n  setReportPanel: (panel: PatientReportPanelType) => void;\r\n}\r\n\r\nfunction PatientSummary(props: PatientSummaryProps) {\r\n  const classes = useStyles();\r\n\r\n  const { questionaires, setReportPanel } = props;\r\n\r\n  const epcForms = questionaires?.filter(\r\n    (q) => q.type === 'EPC' && q.status === 'DONE'\r\n  );\r\n  const epcLatestForm = epcForms && epcForms[epcForms.length - 1];\r\n  const epcResult = epcLatestForm?.results as PatientBasicResult;\r\n  const scoreEPC = epcResult?.score || 0;\r\n  const epcCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Escala de pensamento catastrófico</Typography>\r\n      <Typography variant=\"caption\" display=\"block\">\r\n        {`Preenchido em: ${\r\n          epcLatestForm &&\r\n          new Date(epcLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Box position=\"relative\" display=\"inline-flex\">\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          className={classes.bottom}\r\n          size={100}\r\n          thickness={5}\r\n          value={100}\r\n        />\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={scoreEPC * 10}\r\n          size={100}\r\n          thickness={5}\r\n          className={classes.circularProgress}\r\n          classes={{ circle: classes.circle }}\r\n        />\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography variant=\"subtitle1\" component=\"div\" color=\"textSecondary\">\r\n            {scoreEPC}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Typography variant=\"subtitle1\">{epcResult?.text}</Typography>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.EPC)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const dn4Forms = questionaires?.filter(\r\n    (q) => q.type === 'DN4' && q.status === 'DONE'\r\n  );\r\n  const dn4LatestForm = dn4Forms && dn4Forms[dn4Forms.length - 1];\r\n  const dn4Result = dn4LatestForm?.results as PatientBasicResult;\r\n  const scoreDN4 = dn4Result?.score || 0;\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: '0',\r\n    },\r\n    {\r\n      value: scoreDN4,\r\n      label: scoreDN4.toString(),\r\n    },\r\n    {\r\n      value: 10,\r\n      label: '10',\r\n    },\r\n  ];\r\n  const dn4Card = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Dor neuropática (DN4)</Typography>\r\n      <Typography variant=\"caption\">\r\n        {`Preenchido em: ${\r\n          dn4LatestForm &&\r\n          new Date(dn4LatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Slider\r\n        defaultValue={scoreDN4}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={1}\r\n        valueLabelDisplay=\"off\"\r\n        marks={marks}\r\n        disabled\r\n        max={10}\r\n        className={classes.dn4Slider}\r\n      />\r\n      <Typography variant=\"subtitle1\">{dn4Result?.text}</Typography>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.DN4)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const oswForms = questionaires?.filter(\r\n    (q) => q.type === 'OSWESTRY' && q.status === 'DONE'\r\n  );\r\n  const oswLatestForm = oswForms && oswForms[oswForms.length - 1];\r\n  const oswResult = oswLatestForm?.results as PatientBasicResult;\r\n  const scorOSW = oswResult?.score || 0;\r\n  const oswCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Oswestry De Lombalgia</Typography>\r\n      <Typography variant=\"caption\">\r\n        {`Preenchido em: ${\r\n          oswLatestForm &&\r\n          new Date(oswLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <BorderLinearProgress\r\n        variant=\"determinate\"\r\n        value={scorOSW}\r\n        className={classes.oswLinearProgress}\r\n      />\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        className={classes.oswPercentage}\r\n      >{`${scorOSW}%`}</Typography>\r\n      <Typography variant=\"subtitle1\">{oswResult?.text}</Typography>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.OSWESTRY)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const hadForms = questionaires?.filter(\r\n    (q) => q.type === 'HAD' && q.status === 'DONE'\r\n  );\r\n  const hadLatestForm = hadForms && hadForms[hadForms.length - 1];\r\n  const hadResult = hadLatestForm?.results as PatientHADResult;\r\n  const hadAnxiety = hadResult?.ansiedade;\r\n  const hadDepression = hadResult?.depressao;\r\n  const hadCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">HAD</Typography>\r\n      <Typography variant=\"caption\">\r\n        {`Preenchido em: ${\r\n          hadLatestForm &&\r\n          new Date(hadLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle1\">Ansiedade</Typography>\r\n          <Typography variant=\"caption\">{`Resultado: ${hadAnxiety?.score}`}</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle1\" className={classes.hadTextResult}>\r\n            {hadAnxiety?.text}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle1\">Depressão</Typography>\r\n          <Typography variant=\"caption\">{`Resultado: ${hadDepression?.score}`}</Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle1\" className={classes.hadTextResult}>\r\n            {hadDepression?.text}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.HAD)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const bpiForms = questionaires?.filter(\r\n    (q) => q.type === 'BPI' && q.status === 'DONE'\r\n  );\r\n  const bpiLatestForm = bpiForms && bpiForms[bpiForms.length - 1];\r\n  const bpiResult = bpiLatestForm?.results as PatientBPIResult;\r\n  const gradesLabels = [\r\n    'Pior dor que sentiu nas últimas 24 horas:',\r\n    'Dor mais fraca das últimas 24 horas:',\r\n    'Média de dor do paciente:',\r\n    'Dor do momento:',\r\n  ];\r\n  const percentagesLabels = [\r\n    'Atividades em geral',\r\n    'Humor',\r\n    'Habilidade de caminhar',\r\n    'Trabalho',\r\n    'Relacionamento com outras pessoas',\r\n    'Habilidade para apreciar a vida',\r\n  ];\r\n  const bpiCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Breve Inventário de Dor (BPI)</Typography>\r\n      <Typography variant=\"caption\">\r\n        {`Preenchido em: ${\r\n          bpiLatestForm &&\r\n          new Date(bpiLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n          <BodyMapBPI\r\n            disabledBodyMapClick={true}\r\n            preSelectedValues={bpiResult?.body_pain?.reduce((acc, body) => {\r\n              acc[body.area - 1] = body.pain_level;\r\n              return acc;\r\n            }, new Array(53).fill(0))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          {bpiResult?.grades?.map((grade, gradeIndex) => (\r\n            <div key={`grade-${gradeIndex}`}>\r\n              <Typography variant=\"subtitle1\">\r\n                {gradesLabels[gradeIndex]}\r\n              </Typography>\r\n              <Slider\r\n                defaultValue={0}\r\n                classes={{\r\n                  root: classes.slider,\r\n                  // markLabel: classes.sliderMakrLabel,\r\n                }}\r\n                step={1}\r\n                valueLabelDisplay=\"on\"\r\n                marks={[\r\n                  { label: 'Sem dor', value: 0 },\r\n                  { label: 'Pior dor', value: 10 },\r\n                ]}\r\n                min={0}\r\n                max={10}\r\n                disabled={true}\r\n                value={grade}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n          {bpiResult?.treatments?.map((treatment, treatmentIndex) => (\r\n            <div key={`treatment=${treatmentIndex}`}>\r\n              <Typography variant=\"subtitle1\">{`Tratamento ${\r\n                treatmentIndex + 1\r\n              }`}</Typography>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Nome do tratamento\"\r\n                    secondary={treatment?.name}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Quando iniciou?\"\r\n                    secondary={treatment?.started_at}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Qual a dose/frequência do tratamento?\"\r\n                    secondary={treatment?.frequency}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n              <Divider className={classes.divider} variant=\"middle\" />\r\n            </div>\r\n          ))}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle1\">\r\n            Como a dor interferiu nas últimas 24 horas em:\r\n          </Typography>\r\n          <List>\r\n            {bpiResult?.percentages?.map((percentage, percentageIndex) => (\r\n              <ListItem key={`percentage-${percentageIndex}`}>\r\n                <ListItemText\r\n                  primary={percentagesLabels[percentageIndex]}\r\n                  secondary={percentage}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\" paragraph>\r\n            {`Intensidade da melhora proporcionada pelos tratamentos ou medicações nas últimas 24 horas: ${bpiResult?.slider}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  type Series = {\r\n    label: string;\r\n    data: PatientBasicResult[];\r\n  };\r\n  const sf36Forms = questionaires?.filter(\r\n    (q) => q.type === 'SF36' && q.status === 'DONE'\r\n  );\r\n  const chartData: Series[] = useMemo(\r\n    () =>\r\n      sf36Forms?.reduce((acc: Series[], sf36) => {\r\n        if (sf36.status === 'PENDING') {\r\n          return acc;\r\n        }\r\n        return [\r\n          ...acc,\r\n          {\r\n            label: `Resultado do paciente em ${new Date(\r\n              sf36?.updated_at\r\n            ).toLocaleDateString('pt-BR')}`,\r\n            data: (sf36?.results as PatientSF36Result)?.raw_scale?.filter(\r\n              (result) => result.text !== 'Total'\r\n            ),\r\n          },\r\n        ];\r\n      }, []),\r\n    [sf36Forms]\r\n  );\r\n  const primaryAxis = useMemo(\r\n    (): AxisOptions<PatientBasicResult> => ({\r\n      getValue: (datum) => datum.text,\r\n    }),\r\n    []\r\n  );\r\n  const secondaryAxes = useMemo(\r\n    (): AxisOptions<PatientBasicResult>[] => [\r\n      {\r\n        getValue: (datum) => datum.score,\r\n        elementType: 'line',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const sf36Card = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Qualidade de vida (SF-36)</Typography>\r\n      <div style={{ height: '500px', paddingBottom: '10px' }}>\r\n        <Chart\r\n          options={{\r\n            data: chartData,\r\n            primaryAxis,\r\n            secondaryAxes,\r\n          }}\r\n        />\r\n      </div>\r\n    </Paper>\r\n  );\r\n\r\n  const fibromialgiaForms = questionaires?.filter(\r\n    (q) => q.type === 'FIBROMIALGIA' && q.status === 'DONE'\r\n  );\r\n  const fibromialgiaLatestForm =\r\n    fibromialgiaForms && fibromialgiaForms[fibromialgiaForms.length - 1];\r\n  const fibromialgiaResult =\r\n    fibromialgiaLatestForm?.results as PatientFibromialgiaResult;\r\n  const fibromialgiaCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Fibromialgia</Typography>\r\n      <Typography variant=\"caption\">\r\n        {`Preenchido em: ${\r\n          fibromialgiaLatestForm &&\r\n          new Date(fibromialgiaLatestForm.updated_at).toLocaleDateString(\r\n            'pt-BR'\r\n          )\r\n        }`}\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.fibromialgiaDiagnosis}\r\n          >\r\n            {fibromialgiaResult?.diagnosis?.criteria}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            Índice de Dor Generalizada\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography\r\n            variant=\"caption\"\r\n            align=\"left\"\r\n            paragraph\r\n          >{`Resultado: ${fibromialgiaResult?.diagnosis?.idg_score}`}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            Escala de Severidade dos Sintomas\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography\r\n            variant=\"caption\"\r\n            align=\"left\"\r\n            paragraph\r\n          >{`Resultado: ${fibromialgiaResult?.diagnosis?.ess_score}`}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            Tem sintomas há mais de 3 meses?\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"caption\" align=\"left\" paragraph>{`Resultado: ${\r\n            fibromialgiaResult?.booleans?.length > 3 &&\r\n            fibromialgiaResult?.booleans[3]\r\n          }`}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.FIBROMIALGIA)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const iadForms = questionaires?.filter(\r\n    (q) => q.type === 'IAD' && q.status === 'DONE'\r\n  );\r\n  const iadLatestForm = iadForms && iadForms[iadForms.length - 1];\r\n  const iadCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Inventário de atitude frente à dor</Typography>\r\n      <Typography variant=\"caption\" display=\"block\">\r\n        {`Preenchido em: ${\r\n          iadLatestForm &&\r\n          new Date(iadLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.IAD)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const sbstForms = questionaires?.filter(\r\n    (q) => q.type === 'SBST' && q.status === 'DONE'\r\n  );\r\n  const sbstLatestForm = sbstForms && sbstForms[sbstForms.length - 1];\r\n  const sbstResult = sbstLatestForm?.results as PatientSBSTResult;\r\n  const sbstCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Start Back Screening Tool (SBST)</Typography>\r\n      <Typography variant=\"caption\">\r\n        {`Preenchido em: ${\r\n          sbstLatestForm &&\r\n          new Date(sbstLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Total de pontos: ${sbstResult?.total_points}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Subescala psicossocial: ${sbstResult?.psychosocial_points}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Resultado: ${sbstResult?.result}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.SBST)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const pseqForms = questionaires?.filter(\r\n    (q) => q.type === 'PSEQ' && q.status === 'DONE'\r\n  );\r\n  const pseqLatestForm = pseqForms && pseqForms[pseqForms.length - 1];\r\n  const pseqResult = pseqLatestForm?.results as PatientBasicResult;\r\n  const pseqCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">Autoeficácia da dor (PSEQ)</Typography>\r\n      <Typography variant=\"caption\" display=\"block\">\r\n        {`Preenchido em: ${\r\n          pseqLatestForm &&\r\n          new Date(pseqLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Total de pontos: ${pseqResult?.score}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Resultado: ${pseqResult?.text}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.PSEQ)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const womacForms = questionaires?.filter(\r\n    (q) => q.type === 'WOMAC' && q.status === 'DONE'\r\n  );\r\n  const womacLatestForm = womacForms && womacForms[womacForms.length - 1];\r\n  const womacResult = womacLatestForm?.results as PatientWOMACResult;\r\n  const womacCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">\r\n        Qualidade de vida específico para osteoartrose WOMAC\r\n      </Typography>\r\n      <Typography variant=\"caption\" display=\"block\">\r\n        {`Preenchido em: ${\r\n          womacLatestForm &&\r\n          new Date(womacLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Índice funcional: ${womacResult?.function_index}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Índice de dor: ${womacResult?.pain_index}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Índice de rigidez: ${womacResult?.stiffness_index}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Índice total: ${womacResult?.total_index}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Porcentagem total: ${womacResult?.total_percentage}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Coeficiente total: ${womacResult?.total_ratio}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.WOMAC)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  const spadiForms = questionaires?.filter(\r\n    (q) => q.type === 'SPADI' && q.status === 'DONE'\r\n  );\r\n  const spadiLatestForm = spadiForms && spadiForms[spadiForms.length - 1];\r\n  const spadiResult = spadiLatestForm?.results as PatientSPADIResult;\r\n  const spadiCard = (\r\n    <Paper classes={{ root: classes.paper }}>\r\n      <Typography variant=\"h6\">\r\n        Índice de dor e incapacidade no ombro (SPADI)\r\n      </Typography>\r\n      <Typography variant=\"caption\" display=\"block\">\r\n        {`Preenchido em: ${\r\n          spadiLatestForm &&\r\n          new Date(spadiLatestForm.updated_at).toLocaleDateString('pt-BR')\r\n        }`}\r\n      </Typography>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Escala de Incapacidade: ${spadiResult?.disability.percentage}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Escala de Dor: ${spadiResult?.pain.percentage}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {`Escala total: ${spadiResult?.total.percentage}`}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justifyContent=\"flex-end\">\r\n        <Grid item>\r\n          <Link\r\n            component=\"button\"\r\n            variant=\"body2\"\r\n            onClick={() => setReportPanel(PatientReportPanelType.SPADI)}\r\n          >\r\n            Ver respostas\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const tickLabelsY = document.querySelectorAll(\r\n        'svg > .axes:first-child > g:nth-child(2) > .Axis-Group.inner:first-child .tickLabel'\r\n      );\r\n      const indexOfLabel50 = Array.from(tickLabelsY).reduce(\r\n        (acc, el, index) => (el.textContent === '50' ? index : acc),\r\n        0\r\n      );\r\n      if (indexOfLabel50) {\r\n        const lineOfLabel50 = document.querySelectorAll(\r\n          'svg > .axes:first-child > g:nth-child(2) > .Axis-Group.inner:first-child .Axis:first-child > .grid .tick line'\r\n        )[indexOfLabel50];\r\n        lineOfLabel50.setAttribute('stroke', 'yellow');\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1} className={classes.root}>\r\n      <Grid item xs={9}>\r\n        {bpiForms?.length ? bpiCard : null}\r\n        {chartData?.length ? sf36Card : null}\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        {epcForms?.length ? epcCard : null}\r\n        {dn4Forms?.length ? dn4Card : null}\r\n        {oswForms?.length ? oswCard : null}\r\n        {hadForms?.length ? hadCard : null}\r\n        {fibromialgiaForms?.length ? fibromialgiaCard : null}\r\n        {iadForms?.length ? iadCard : null}\r\n        {sbstForms?.length ? sbstCard : null}\r\n        {pseqForms?.length ? pseqCard : null}\r\n        {womacForms?.length ? womacCard : null}\r\n        {spadiForms?.length ? spadiCard : null}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PatientSummary;\r\n","import IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  HADReportTableColumn,\r\n  SimpleReportTableColumn,\r\n  SPADIReportTableColumn,\r\n} from '../interfaces';\r\nimport {\r\n  PatientBasicResult,\r\n  PatientFibromialgiaResult,\r\n  PatientForm,\r\n  PatientHADResult,\r\n  PatientSPADIResult,\r\n  PatientWOMACResult,\r\n} from '../models/PatientForm';\r\n\r\nexport const simpleColumns: SimpleReportTableColumn[] = [\r\n  { id: 'date', label: 'Data', minWidth: 100 },\r\n  { id: 'result', label: 'Resultado', minWidth: 100 },\r\n  { id: 'patient', label: 'Paciente', minWidth: 100 },\r\n  { id: 'details', label: 'Ver resultados', minWidth: 100 },\r\n];\r\n\r\nexport const noResultColumns: SimpleReportTableColumn[] = [\r\n  { id: 'date', label: 'Data', minWidth: 100 },\r\n  { id: 'patient', label: 'Paciente', minWidth: 100 },\r\n  { id: 'details', label: 'Ver resultados', minWidth: 100 },\r\n];\r\n\r\nexport const allResultsColumns: SimpleReportTableColumn[] = [\r\n  { id: 'date', label: 'Data', minWidth: 100 },\r\n  { id: 'patient', label: 'Paciente', minWidth: 100 },\r\n  { id: 'type', label: 'Formulário', minWidth: 100 },\r\n  { id: 'details', label: 'Ver resultados', minWidth: 100 },\r\n];\r\n\r\nexport const hadColumns: HADReportTableColumn[] = [\r\n  { id: 'date', label: 'Data', minWidth: 100 },\r\n  { id: 'result_anxiety', label: 'Resultado para ansiedade', minWidth: 100 },\r\n  { id: 'result_depression', label: 'Resultado para depressão', minWidth: 100 },\r\n  { id: 'patient', label: 'Paciente', minWidth: 100 },\r\n  { id: 'details', label: 'Ver resultados', minWidth: 100 },\r\n];\r\n\r\nexport const spadiColumns: SPADIReportTableColumn[] = [\r\n  { id: 'date', label: 'Data', minWidth: 100 },\r\n  {\r\n    id: 'result_disability',\r\n    label: 'Resultado de incapacidade',\r\n    minWidth: 100,\r\n  },\r\n  { id: 'result_pain', label: 'Resultado de dor', minWidth: 100 },\r\n  { id: 'result_total', label: 'Resultado total', minWidth: 100 },\r\n  { id: 'patient', label: 'Paciente', minWidth: 100 },\r\n  { id: 'details', label: 'Ver resultados', minWidth: 100 },\r\n];\r\n\r\nexport function setDataIntoSimpleTable(\r\n  data: PatientForm[],\r\n  selectForm: (chosen: PatientForm) => void\r\n) {\r\n  return data.map((form) => {\r\n    return {\r\n      id: form.id,\r\n      date: new Date(form.updated_at).toLocaleDateString(),\r\n      result: (form.results as PatientBasicResult)?.text,\r\n      patient: form.patient?.name,\r\n      details: (\r\n        <IconButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            selectForm(form);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function setDataIntoNoResultTable(\r\n  data: PatientForm[],\r\n  selectForm: (chosen: PatientForm) => void\r\n) {\r\n  return data.map((form) => {\r\n    return {\r\n      id: form.id,\r\n      date: new Date(form.updated_at).toLocaleDateString(),\r\n      patient: form.patient?.name,\r\n      details: (\r\n        <IconButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            selectForm(form);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function setDataIntoAllResultTable(\r\n  data: PatientForm[],\r\n  selectForm: (chosen: PatientForm) => void\r\n) {\r\n  return data.map((form) => {\r\n    return {\r\n      id: form.id,\r\n      date: new Date(form.updated_at).toLocaleDateString(),\r\n      patient: form.patient?.name,\r\n      type: form.type,\r\n      details: (\r\n        <IconButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            selectForm(form);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function setDataIntoFibromialgiaTable(\r\n  data: PatientForm[],\r\n  selectForm: (chosen: PatientForm) => void\r\n) {\r\n  return data.map((form) => {\r\n    return {\r\n      id: form.id,\r\n      date: new Date(form.updated_at).toLocaleDateString(),\r\n      result: (form.results as PatientFibromialgiaResult)?.diagnosis?.criteria,\r\n      patient: form.patient?.name,\r\n      details: (\r\n        <IconButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            selectForm(form);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function setDataIntoHADTable(\r\n  data: PatientForm[],\r\n  selectForm: (chosen: PatientForm) => void\r\n) {\r\n  return data.map((form) => {\r\n    return {\r\n      id: form.id,\r\n      date: new Date(form.updated_at).toLocaleDateString(),\r\n      result_anxiety: (form.results as PatientHADResult)?.ansiedade.text,\r\n      result_depression: (form.results as PatientHADResult)?.depressao.text,\r\n      patient: form.patient?.name,\r\n      details: (\r\n        <IconButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            selectForm(form);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function setDateIntoWOMACTable(\r\n  data: PatientForm[],\r\n  selectForm: (chosen: PatientForm) => void\r\n) {\r\n  return data.map((form) => {\r\n    return {\r\n      id: form.id,\r\n      date: new Date(form.updated_at).toLocaleDateString(),\r\n      result: (form.results as PatientWOMACResult)?.total_percentage,\r\n      patient: form.patient?.name,\r\n      details: (\r\n        <IconButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            selectForm(form);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      ),\r\n    };\r\n  });\r\n}\r\n\r\nexport function setDateIntoSPADITable(\r\n  data: PatientForm[],\r\n  selectForm: (chosen: PatientForm) => void\r\n) {\r\n  return data.map((form) => {\r\n    const results = form.results as PatientSPADIResult;\r\n    return {\r\n      id: form.id,\r\n      date: new Date(form.updated_at).toLocaleDateString(),\r\n      result_disability: results.disability.percentage,\r\n      result_pain: results.pain.percentage,\r\n      result_total: results.total.percentage,\r\n      patient: form.patient?.name,\r\n      details: (\r\n        <IconButton\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            selectForm(form);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      ),\r\n    };\r\n  });\r\n}\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nimport { PatientBasicResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    EPCFormItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    EPCSlider: {\r\n      textAlign: 'center',\r\n      color: '#329D63',\r\n      width: '80%',\r\n      marginLeft: '1rem',\r\n    },\r\n    ECPSliderLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.75rem',\r\n      lineHeight: 1,\r\n    },\r\n    circularProgress: {\r\n      margin: theme.spacing(4),\r\n      color: deepOrange[500],\r\n      position: 'absolute',\r\n      left: 0,\r\n    },\r\n    circle: {\r\n      strokeLinecap: 'round',\r\n    },\r\n    bottom: {\r\n      margin: theme.spacing(4),\r\n      color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n  })\r\n);\r\n\r\nfunction EPCInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at, scoreEPC, textEPC } = useMemo(() => {\r\n    const { answers, results, updated_at } = selectedForm;\r\n    const { score, text } = results as PatientBasicResult;\r\n    return { answers, updated_at, scoreEPC: score || 0, textEPC: text };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    'Não posso mais suportar esta dor.',\r\n    'Não importa o que fizer minhas dores não mudarão.',\r\n    'Preciso tomar remédios para dor.',\r\n    'Isso nunca vai acabar.',\r\n    'Sou um caso sem esperança.',\r\n    'Quando ficarei pior novamente?',\r\n    'Essa dor esta me matando.',\r\n    'Eu não consigo mais continuar.',\r\n    'Essa dor esta me deixando maluco.',\r\n  ];\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: (\r\n        <>\r\n          <Typography>0</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Quase nunca\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    { value: 1, label: 1 },\r\n    { value: 2, label: 2 },\r\n    { value: 3, label: 3 },\r\n    { value: 4, label: 4 },\r\n    {\r\n      value: 5,\r\n      label: (\r\n        <>\r\n          <Typography>5</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Quase sempre\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">\r\n            Escala de pensamento catastrófico\r\n          </Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            {questions.map((question, index) => (\r\n              <Grid item xs={6} key={`question-${index}`}>\r\n                <div className={classes.EPCFormItem} key={`question_${index}`}>\r\n                  <Typography\r\n                    id={`question_${index}`}\r\n                    className={classes.ECPSliderLabel}\r\n                    gutterBottom\r\n                  >\r\n                    {`${index + 1}. ${question}`}\r\n                  </Typography>\r\n                  <Slider\r\n                    aria-labelledby={`question_${index}`}\r\n                    value={answers[index]}\r\n                    className={classes.EPCSlider}\r\n                    step={1}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={5}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Box position=\"relative\" display=\"inline-flex\">\r\n            <CircularProgress\r\n              variant=\"determinate\"\r\n              className={classes.bottom}\r\n              size={100}\r\n              thickness={5}\r\n              value={100}\r\n            />\r\n            <CircularProgress\r\n              variant=\"determinate\"\r\n              value={scoreEPC * 10}\r\n              size={100}\r\n              thickness={5}\r\n              className={classes.circularProgress}\r\n              classes={{ circle: classes.circle }}\r\n            />\r\n            <Box\r\n              top={0}\r\n              left={0}\r\n              bottom={0}\r\n              right={0}\r\n              position=\"absolute\"\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                component=\"div\"\r\n                color=\"textSecondary\"\r\n              >\r\n                {scoreEPC}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Typography variant=\"subtitle1\">{textEPC}</Typography>\r\n        </Paper>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Referência</Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'0 < 3.8 - Negativo'}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'≥ 3.8 - Positivo'}\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default EPCInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport { ReportPageProps, SimpleReportTableData } from '../../../interfaces';\r\nimport {\r\n  setDataIntoSimpleTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport EPCInnerReport from '../inner-report/EPCInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction EPCReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SimpleReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoSimpleTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">\r\n                Escala de pensamento catastrófico\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <EPCInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EPCReport;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport { PatientBasicResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    formItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    dn4Slider: {\r\n      width: '80%',\r\n    },\r\n    formLabel: {\r\n      width: '100%',\r\n      textAlign: 'left',\r\n    },\r\n  })\r\n);\r\n\r\nfunction DN4InnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at, scoreDN4, textDN4 } = useMemo(() => {\r\n    const { answers, results, updated_at } = selectedForm;\r\n    const { score, text } = results as PatientBasicResult;\r\n    return { answers, updated_at, scoreDN4: score || 0, textDN4: text };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    {\r\n      title: 'A sua dor tem uma ou mais das seguintes características:',\r\n      sections: ['Queimação', 'Sensação de frio dolorosa', 'Choque elétrico'],\r\n    },\r\n    {\r\n      title:\r\n        'Há presença de um ou mais dos seguintes sintomas na mesma área da sua dor:',\r\n      sections: [\r\n        'Formigamento',\r\n        'Alfinetada e agulhada',\r\n        'Adormecimento',\r\n        'Coceira',\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'A dor está localizada em uma área onde o exame físico pode revelar uma ou mais das seguintes características:',\r\n      sections: [\r\n        'Hipoestesia (diminuição da sensibilidade) ao toque',\r\n        'Hipoestesia (diminuição da sensibilidade) à picada de agulha',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Na área dolorosa, a dor pode ser causada ou aumentada por:',\r\n      sections: ['Escovação'],\r\n    },\r\n  ];\r\n\r\n  const getRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n    return questions.reduce((acc, q, i) => {\r\n      if (i < questionIndex) {\r\n        return acc + q.sections.length;\r\n      } else if (i === questionIndex) {\r\n        return acc + sectionIndex;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n  };\r\n\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: '0',\r\n    },\r\n    {\r\n      value: scoreDN4,\r\n      label: scoreDN4.toString(),\r\n    },\r\n    {\r\n      value: 10,\r\n      label: '10',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Dor Neuropática (DN4)</Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            {questions.map((question, qIndex) => (\r\n              <Grid item xs={6} key={`question${qIndex}`}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">\r\n                      {`${qIndex + 1}. ${question.title}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                  {question.sections.map((section, sIndex) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      key={`question${qIndex}-section${sIndex}`}\r\n                    >\r\n                      <FormControl component=\"fieldset\" fullWidth>\r\n                        <FormLabel\r\n                          component=\"legend\"\r\n                          className={classes.formLabel}\r\n                        >\r\n                          {section}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                          row\r\n                          aria-label={section}\r\n                          name={`question${qIndex}-section${sIndex}`}\r\n                        >\r\n                          <FormControlLabel\r\n                            value=\"1\"\r\n                            control={<Radio />}\r\n                            label=\"Sim\"\r\n                            checked={\r\n                              answers[getRealIndex(qIndex, sIndex)] === 1\r\n                            }\r\n                          />\r\n                          <FormControlLabel\r\n                            value=\"0\"\r\n                            control={<Radio />}\r\n                            label=\"Não\"\r\n                            checked={\r\n                              answers[getRealIndex(qIndex, sIndex)] === 0\r\n                            }\r\n                          />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Slider\r\n            defaultValue={scoreDN4}\r\n            aria-labelledby=\"discrete-slider-custom\"\r\n            step={1}\r\n            valueLabelDisplay=\"off\"\r\n            marks={marks}\r\n            disabled\r\n            max={10}\r\n            className={classes.dn4Slider}\r\n          />\r\n          <Typography variant=\"subtitle1\">{textDN4}</Typography>\r\n        </Paper>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Referência</Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'0 < 4 - Dor nociceptiva'}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'≥ 4 - Dor Neuropática'}\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default DN4InnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport {\r\n  setDataIntoSimpleTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport { ReportPageProps, SimpleReportTableData } from '../../../interfaces';\r\nimport DN4InnerReport from '../inner-report/DN4InnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction DN4Report(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SimpleReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoSimpleTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">Dor Neuropática (DN4)</Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <DN4InnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DN4Report;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { PatientHADResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    hadTextResult: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nfunction HADInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at, ansiedade, depressao } = useMemo(() => {\r\n    const { answers, results, updated_at } = selectedForm;\r\n    const { ansiedade, depressao } = results as PatientHADResult;\r\n    return {\r\n      answers,\r\n      updated_at,\r\n      ansiedade,\r\n      depressao,\r\n    };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    {\r\n      title: 'A- Eu me sinto tenso ou contraído',\r\n      alternatives: [\r\n        { label: 'A maior parte do tempo', value: 3 },\r\n        { label: 'Boa parte do tempo', value: 2 },\r\n        { label: 'De vez em quando', value: 1 },\r\n        { label: 'Nunca', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'D- Eu ainda sinto gosto (satisfação) pelas mesmas coisas de que costumava gostar',\r\n      alternatives: [\r\n        { label: 'Sim, do mesmo jeito que antes', value: 0 },\r\n        { label: 'Não tanto quanto antes', value: 1 },\r\n        { label: 'Só um pouco', value: 2 },\r\n        { label: 'Já não sinto mais prazer em nada', value: 3 },\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'A- Eu sinto um espécie de medo, como se alguma coisa ruim fosse acontecer',\r\n      alternatives: [\r\n        { label: 'Sim, de um jeito muito forte', value: 3 },\r\n        { label: 'Sim, mas não tão forte', value: 2 },\r\n        { label: 'Um pouco, mas isso não me preocupa', value: 1 },\r\n        { label: 'Não sinto nada disso', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'D- Dou risada e me divirto quando vejo coisas engraçadas',\r\n      alternatives: [\r\n        { label: 'Sim, do mesmo jeito que antes', value: 0 },\r\n        { label: 'Atualmente u pouco menos', value: 1 },\r\n        { label: 'Atualmente bem menos', value: 2 },\r\n        { label: 'Não consigo mais', value: 3 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'A- Estou com a cabeça cheia de preocupações',\r\n      alternatives: [\r\n        { label: 'A maior parte do tempo', value: 3 },\r\n        { label: 'Boa parte do tempo', value: 2 },\r\n        { label: 'De vez em quando', value: 1 },\r\n        { label: 'Raramente', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'D- Eu me sinto alegre',\r\n      alternatives: [\r\n        { label: 'A maior parte do tempo', value: 0 },\r\n        { label: 'Muitas vezes', value: 1 },\r\n        { label: 'Poucas vezes', value: 2 },\r\n        { label: 'Nunca', value: 3 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'A- Consigo ficar sentado á vontade e me sentir relaxado',\r\n      alternatives: [\r\n        { label: 'Nunca', value: 3 },\r\n        { label: 'Poucas vezes', value: 2 },\r\n        { label: 'Muitas vezes', value: 1 },\r\n        { label: 'Sim, quase sempre', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'D- Estou lento (lerdo) para pensar e fazer as coisas',\r\n      alternatives: [\r\n        { label: 'Nunca', value: 0 },\r\n        { label: 'De vez em quando', value: 1 },\r\n        { label: 'Muitas vezes', value: 2 },\r\n        { label: 'Quase sempre', value: 3 },\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'A- Tenho uma sensação ruim de medo (como um frio na espinha ou um aperto no estômago)',\r\n      alternatives: [\r\n        { label: 'Quase sempre', value: 3 },\r\n        { label: 'Muitas vezes', value: 2 },\r\n        { label: 'De vez em quando', value: 1 },\r\n        { label: 'Nunca', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'D- Eu perdi o interesse em cuidar da minha aparência',\r\n      alternatives: [\r\n        { label: 'Cuido-me do mesmo jeito que antes', value: 0 },\r\n        { label: 'Talvez não tanto quanto antes', value: 1 },\r\n        { label: 'Não estou mais me cuidando como eu deveria', value: 2 },\r\n        { label: 'Completamente', value: 3 },\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'A- Eu me sinto inquieto, como se eu não pudesse ficar parado em nenhum lugar',\r\n      alternatives: [\r\n        { label: 'Sim, demais', value: 3 },\r\n        { label: 'Bastante', value: 2 },\r\n        { label: 'Muitas vezes', value: 1 },\r\n        { label: 'Quase sempre', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'D- Fico esperando animado as coisas boas que estão por vir',\r\n      alternatives: [\r\n        { label: 'Do mesmo jeito que antes', value: 0 },\r\n        { label: 'Um pouco menos que antes', value: 1 },\r\n        { label: 'Bem menos do que antes', value: 2 },\r\n        { label: 'Quase nunca', value: 3 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'A- De repente, tenho a sensação de entrar em pânico',\r\n      alternatives: [\r\n        { label: 'A quase todo tempo', value: 3 },\r\n        { label: 'Várias vezes', value: 2 },\r\n        { label: 'De vez em quando', value: 1 },\r\n        { label: 'Não sinto isso', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'D- Consigo sentir prazer ao assistir a um bom programa de TV, de rádio ou quando leio alguma coisa',\r\n      alternatives: [\r\n        { label: 'Quase sempre', value: 0 },\r\n        { label: 'Várias vezes', value: 1 },\r\n        { label: 'Poucas vezes', value: 2 },\r\n        { label: 'Quase nunca', value: 3 },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">HAD</Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {questions.map((question, qIndex) => (\r\n              <Grid item xs={6} key={`question${qIndex}`}>\r\n                <Typography variant=\"body1\" align=\"left\">\r\n                  {`${qIndex + 1}. ${question.title}`}\r\n                </Typography>\r\n                <Typography variant=\"body1\" align=\"left\">\r\n                  {\r\n                    question.alternatives.find(\r\n                      (alt) => answers[qIndex] === alt.value\r\n                    )?.label\r\n                  }\r\n                </Typography>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"subtitle1\">Ansiedade</Typography>\r\n              <Typography variant=\"caption\">{`Resultado: ${ansiedade?.score}`}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"subtitle1\" className={classes.hadTextResult}>\r\n                {ansiedade?.text}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"subtitle1\">Depressão</Typography>\r\n              <Typography variant=\"caption\">{`Resultado: ${depressao?.score}`}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"subtitle1\" className={classes.hadTextResult}>\r\n                {depressao?.text}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Referência Ansiedade</Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'≥ 8 - POSITIVO'}\r\n          </Typography>\r\n        </Paper>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Referência Depressão</Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'≥ 9 - POSITIVO'}\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default HADInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport { HADReportTableData, ReportPageProps } from '../../../interfaces';\r\nimport { setDataIntoHADTable, simpleColumns } from '../../../utils/reportTable';\r\nimport HADInnerReport from '../inner-report/HADInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction HADReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<HADReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoHADTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">HAD</Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <HADInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HADReport;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nimport { PatientBasicResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst BorderLinearProgress = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      height: 10,\r\n      borderRadius: 5,\r\n    },\r\n    colorPrimary: {\r\n      backgroundColor:\r\n        theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n    bar: {\r\n      borderRadius: 5,\r\n      backgroundColor: deepOrange[500],\r\n    },\r\n  })\r\n)(LinearProgress);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    oswLinearProgress: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    oswPercentage: {\r\n      color: deepOrange[500],\r\n    },\r\n  })\r\n);\r\n\r\nfunction OswestryInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at, scoreOswestry, textOswestry } = useMemo(() => {\r\n    const { answers, results, updated_at } = selectedForm;\r\n    const { score, text } = results as PatientBasicResult;\r\n    return {\r\n      answers,\r\n      updated_at,\r\n      scoreOswestry: score || 0,\r\n      textOswestry: text,\r\n    };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    {\r\n      title: 'Seção 1 - Intensidade da dor',\r\n      alternatives: [\r\n        'Posso tolerar a dor que estou sentindo sem ter que  tomar analgésicos',\r\n        'A dor é forte, mas suporto-a sem tomar analgésicos',\r\n        'Os analgésicos aliviam completamente a dor',\r\n        'Os analgésicos aliviam moderadamente a dor',\r\n        'Os analgésicos aliviam muito pouco a dor',\r\n        'Os analgésicos não afetam de forma alguma a dor e não os estou tomando',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 2 - Cuidados pessoais (lavar-se, vestir-se, etc)',\r\n      alternatives: [\r\n        'Posso me cuidar normalmente sem que isso cause mais dor',\r\n        'Posso me cuidar normalmente, mas isso causa mais dor',\r\n        'Dói para eu me cuidar e eu sou lento e cuidadoso',\r\n        'Preciso de alguma ajuda, mas consigo realizar a maioria dos meus cuidados pessoais',\r\n        'Preciso de ajuda todos os dias para a maioria dos meus cuidados pessoais',\r\n        'Não consigo me vestir, me lavo com dificuldades e fico na cama',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 3 - Levantar pesos',\r\n      alternatives: [\r\n        'Posso levantar pesos consideráveis sem sentir mais dor',\r\n        'Posso levantar pesos consideráveis, mas isso causa mais dor',\r\n        'A dor me impede de levantar coisas pesadas, mas posso levantá-las se bem posicionadas. Ex: Em cima de uma mesa',\r\n        'A dor me impede de levantar pesos consideráveis, mas posso levantar pesos leves a médios, se estiverem posicionados convenientemente',\r\n        'Posso levantar somente pesos bem leves',\r\n        'Não posso levantar ou carregar nada',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 4 - Caminhar',\r\n      alternatives: [\r\n        'A dor não me impede de andar qualquer distância',\r\n        'A dor me impede de andar mais de 1,6 quilômetros',\r\n        'A dor me impede de andar mais de 800 metros',\r\n        'A dor me impede de andar mais de 400 metros',\r\n        'Posso andar somente com uma bengala ou muletas',\r\n        'Fico na cama a maior parte do tempo e tenho que me arrastar para ir ao banheiro',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 5 - Sentar',\r\n      alternatives: [\r\n        'Posso me sentar em qualquer cadeira, por quanto tempo quiser',\r\n        'Só posso me sentar na minha cadeira favorita, por quanto tempo quiser',\r\n        'A dor me impede de sentar por mais de 1 hora',\r\n        'A dor me impede de sentar por mais de meia hora',\r\n        'A dor me impede de sentar por mais de 10 minutos',\r\n        'A dor me impede completamente de sentar',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 6 - Ficar em pé',\r\n      alternatives: [\r\n        'Posso ficar em pé o quanto tempo quiser, sem sentir mais dor',\r\n        'Posso ficar em pé o quanto tempo quiser, mas isso me causa mais dor',\r\n        'A dor me impede de ficar em pé por mais de 1 hora',\r\n        'A dor me impede de ficar em pé por mais de 30 minutos',\r\n        'A dor me impede de ficar em pé por mais de 10 minutos',\r\n        'A dor me impede completamente de ficar em pé',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 7 - Dormir',\r\n      alternatives: [\r\n        'A dor não me impede de dormir bem',\r\n        'Só posso dormir bem tomando comprimidos',\r\n        'Mesmo quando tomo os comprimidos, só consigo dormir menos de seis horas',\r\n        'Mesmo quando tomo os comprimidos, só consigo dormir menos de quatro horas',\r\n        'Mesmo quando tomo os comprimidos, só consigo dormir menos de duas horas',\r\n        'A dor me impede completamente de dormir',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 8 - Vida sexual',\r\n      alternatives: [\r\n        'Minha vida sexual é normal e não causa mais dor',\r\n        'Minha vida sexual é normal, mas causa alguma dor adicional',\r\n        'Minha vida sexual é quase normal, mas com muita dor',\r\n        'Minha vida sexual é severamente restrita pela dor',\r\n        'Minha vida sexual é quase inexistente devido à dor',\r\n        'A dor me impede completamente de ter vida sexual',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 9 - Vida social',\r\n      alternatives: [\r\n        'Minha vida social é normal e não me causa mais dor',\r\n        'Minha vida social é normal, mas aumenta o grau de dor',\r\n        'A dor não tem efeito significativo na minha vida social, com exceção de limitar meus interesses energéticos, como por exemplo, dançar, etc.',\r\n        'A dor restringiu minha vida social e não saio tanto como antes',\r\n        'A dor restringiu minha vida social à minha casa',\r\n        'Não tenho vida social por causa da dor',\r\n      ],\r\n    },\r\n    {\r\n      title: 'Seção 10 - Viajar',\r\n      alternatives: [\r\n        'Posso viajar para qualquer lugar sem me causar mais dor',\r\n        'Posso viajar para qualquer lugar, mas isso causa mais dor',\r\n        'A dor é forte, mas consigo fazer jornadas de mais de duas horas',\r\n        'A dor me restringe a jornadas de menos de 1 hora',\r\n        'A dor me restringe a jornadas curtas necessárias, de menos de 30 minutos',\r\n        'A dor me impede de viajar, exceto ir ao médico ou ao hospital',\r\n      ],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Questionário de Oswestry</Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {questions.map((question, qIndex) => (\r\n              <Grid item xs={6} key={`question${qIndex}`}>\r\n                <Typography variant=\"body1\" align=\"left\">\r\n                  {question.title}\r\n                </Typography>\r\n                <Typography variant=\"body1\" align=\"left\">\r\n                  {question.alternatives.find(\r\n                    (alt, altIndex) => answers[qIndex] === altIndex\r\n                  )}\r\n                </Typography>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={scoreOswestry}\r\n            className={classes.oswLinearProgress}\r\n          />\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            className={classes.oswPercentage}\r\n          >{`${scoreOswestry}%`}</Typography>\r\n          <Typography variant=\"subtitle1\">{textOswestry}</Typography>\r\n        </Paper>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Referência</Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'0% a 20% - Incapacidade mínima'}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'21% a 40% - Incapacidade moderada'}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'41% a 60% - Incapacidade intensa'}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'61% a 80% - Aleijado'}\r\n          </Typography>\r\n          <Typography variant=\"body1\" align=\"left\">\r\n            {'81% a 100% - Inválido'}\r\n          </Typography>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default OswestryInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport {\r\n  setDataIntoSimpleTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport { ReportPageProps, SimpleReportTableData } from '../../../interfaces';\r\nimport OswestryInnerReport from '../inner-report/OswestryInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction OswestryReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SimpleReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoSimpleTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">\r\n                Questionário de Oswestry\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <OswestryInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OswestryReport;\r\n","import React from 'react';\r\nimport { BodyMapFibromialgiaProps } from '../../interfaces';\r\n\r\nfunction BodyMapFibromialgia(props: BodyMapFibromialgiaProps) {\r\n  const { preSelectedValues, markBodyParts, disabledBodyMapClick } = props;\r\n  const [bodyMap, setBodyMap] = React.useState(\r\n    preSelectedValues ?? new Array(19).fill(false)\r\n  );\r\n  const getAreaColor = (areaNumber: number) =>\r\n    !!bodyMap[areaNumber - 1] ? '#329D63' : '#acacac';\r\n  const handleClickArea = (bodyPartNumber: number) =>\r\n    !disabledBodyMapClick &&\r\n    setBodyMap((s) => {\r\n      const newValues = [...s];\r\n      newValues[bodyPartNumber - 1] = 1 - s[bodyPartNumber - 1];\r\n      return newValues;\r\n    });\r\n\r\n  React.useEffect(\r\n    () => markBodyParts && markBodyParts(bodyMap),\r\n    [bodyMap, markBodyParts]\r\n  );\r\n\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"313.902\"\r\n      height=\"380.851\"\r\n      viewBox=\"0 0 313.902 380.851\"\r\n    >\r\n      <g data-name=\"Grupo 1652\" transform=\"translate(-31.089 -194)\">\r\n        <g data-name=\"Grupo 1651\" transform=\"translate(6)\">\r\n          <ellipse\r\n            cx=\"4.892\"\r\n            cy=\"26.148\"\r\n            fill={getAreaColor(5)}\r\n            onClick={() => handleClickArea(5)}\r\n            data-name=\"Elipse 344\"\r\n            opacity=\"0.35\"\r\n            rx=\"4.892\"\r\n            ry=\"26.148\"\r\n            transform=\"translate(55.218 310.499)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"4.892\"\r\n            cy=\"26.148\"\r\n            fill={getAreaColor(5)}\r\n            onClick={() => handleClickArea(5)}\r\n            data-name=\"Elipse 349\"\r\n            opacity=\"0.35\"\r\n            rx=\"4.892\"\r\n            ry=\"26.148\"\r\n            transform=\"translate(135.47 310.499)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"29.5\"\r\n            cy=\"23.5\"\r\n            fill={getAreaColor(4)}\r\n            onClick={() => handleClickArea(4)}\r\n            data-name=\"Elipse 350\"\r\n            opacity=\"0.35\"\r\n            rx=\"29.5\"\r\n            ry=\"23.5\"\r\n            transform=\"translate(70 295.948)\"\r\n          ></ellipse>\r\n          <circle\r\n            cx=\"6\"\r\n            cy=\"6\"\r\n            r=\"6\"\r\n            fill={getAreaColor(2)}\r\n            onClick={() => handleClickArea(2)}\r\n            data-name=\"Elipse 330\"\r\n            opacity=\"0.35\"\r\n            transform=\"translate(80 262.948)\"\r\n          ></circle>\r\n          <path\r\n            fill={getAreaColor(3)}\r\n            onClick={() => handleClickArea(3)}\r\n            d=\"M18.731 23.557c-3.793 3.987-15.143 6.133-19.819 8.427C-10.7 36.7-15.5 43.73-15.5 47.732c0 5.946 4.669-4.981 16.481-4.981s21.387-4.821 21.387-10.767v-4.318s1.301-4.109-3.637-4.109z\"\r\n            data-name=\"Caminho 2901\"\r\n            opacity=\"0.35\"\r\n            transform=\"translate(68.219 261.027)\"\r\n          ></path>\r\n          <ellipse\r\n            cx=\"7.071\"\r\n            cy=\"24.051\"\r\n            fill={getAreaColor(9)}\r\n            onClick={() => handleClickArea(9)}\r\n            data-name=\"Elipse 339\"\r\n            opacity=\"0.35\"\r\n            rx=\"7.071\"\r\n            ry=\"24.051\"\r\n            transform=\"rotate(-7 4090.145 -364.28)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"7.071\"\r\n            cy=\"24.051\"\r\n            fill={getAreaColor(9)}\r\n            onClick={() => handleClickArea(9)}\r\n            data-name=\"Elipse 337\"\r\n            opacity=\"0.35\"\r\n            rx=\"7.071\"\r\n            ry=\"24.051\"\r\n            transform=\"rotate(5.13 -5474.072 1473.66)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"9.5\"\r\n            cy=\"32\"\r\n            fill={getAreaColor(8)}\r\n            onClick={() => handleClickArea(8)}\r\n            data-name=\"Elipse 341\"\r\n            opacity=\"0.35\"\r\n            rx=\"9.5\"\r\n            ry=\"32\"\r\n            transform=\"translate(71 412.948)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"4.194\"\r\n            cy=\"19.076\"\r\n            fill={getAreaColor(7)}\r\n            onClick={() => handleClickArea(7)}\r\n            data-name=\"Elipse 346\"\r\n            opacity=\"0.35\"\r\n            rx=\"4.194\"\r\n            ry=\"19.076\"\r\n            transform=\"rotate(19 -1065.257 347.057)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"9.5\"\r\n            cy=\"32\"\r\n            fill={getAreaColor(8)}\r\n            onClick={() => handleClickArea(8)}\r\n            data-name=\"Elipse 335\"\r\n            opacity=\"0.35\"\r\n            rx=\"9.5\"\r\n            ry=\"32\"\r\n            transform=\"translate(109 412.948)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"29.5\"\r\n            cy=\"23\"\r\n            fill={getAreaColor(6)}\r\n            onClick={() => handleClickArea(6)}\r\n            data-name=\"Elipse 343\"\r\n            opacity=\"0.35\"\r\n            rx=\"29.5\"\r\n            ry=\"23\"\r\n            transform=\"translate(70 348.948)\"\r\n          ></ellipse>\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"#000\"\r\n            strokeWidth=\"1\"\r\n            d=\"M67.988 387.905s16.746 9.168 19.867 15.285 7.77 13.383 11.964 13.418 14.1-13.418 14.1-13.418l17.054-16.529\"\r\n            data-name=\"Caminho 2912\"\r\n          ></path>\r\n          <ellipse\r\n            cx=\"4.193\"\r\n            cy=\"19.076\"\r\n            fill={getAreaColor(7)}\r\n            onClick={() => handleClickArea(7)}\r\n            data-name=\"Elipse 348\"\r\n            opacity=\"0.35\"\r\n            rx=\"4.193\"\r\n            ry=\"19.076\"\r\n            transform=\"rotate(161 44.281 213.173)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"13.5\"\r\n            cy=\"11\"\r\n            fill={getAreaColor(1)}\r\n            onClick={() => handleClickArea(1)}\r\n            data-name=\"Elipse 328\"\r\n            opacity=\"0.35\"\r\n            rx=\"13.5\"\r\n            ry=\"11\"\r\n            transform=\"translate(86 268.948)\"\r\n          ></ellipse>\r\n          <circle\r\n            cx=\"6\"\r\n            cy=\"6\"\r\n            r=\"6\"\r\n            fill={getAreaColor(2)}\r\n            onClick={() => handleClickArea(2)}\r\n            data-name=\"Elipse 329\"\r\n            opacity=\"0.35\"\r\n            transform=\"translate(107 262.948)\"\r\n          ></circle>\r\n          <path\r\n            fill={getAreaColor(3)}\r\n            onClick={() => handleClickArea(3)}\r\n            d=\"M.692 24.731c4.477 2.63 11.857 5.025 16.533 7.32C26.834 36.767 32.8 41.158 32.8 45.16c0 5.946-4.8-1.33-16.611-1.33S-5.193 39.009-5.193 33.062c0-3.068-.642-2.14-.545-3.493.088-1.231.713-4.838 6.43-4.838z\"\r\n            data-name=\"Caminho 2899\"\r\n            opacity=\"0.35\"\r\n            transform=\"translate(112.39 259.949)\"\r\n          ></path>\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"#000\"\r\n            strokeLinecap=\"round\"\r\n            strokeWidth=\"1\"\r\n            d=\"M130.495 341.242c-1.6 1.512-3.229 36.505-.368 42.833s4.135 26.349 4.135 26.349a199.8 199.8 0 01-1.459 21.132c-1.389 11.553-4.336 25.719-5.709 37.491-1.355 11.617-1.154 20.918-.392 22.711 1.428 3.361-3.264 24.913-5.8 41.328a113.388 113.388 0 00-1.347 18.924 5.9 5.9 0 000 3.2c.462 2.007 5.532 4.745 8.021 7.714 1.048 1.25 3.972 3.933 2.068 6.149-2.605 3.032-3.546 4.7-8.743 4.976-2.506.135-8.942-1.987-9.771-6.606s-4.528-5.237-4.7-5.9a15.4 15.4 0 010-9.537c1.477-5.247-3.05-47.276-2.36-53.65s1.835-14.717 1.835-14.717l-6.5-67.388s-6.094 75.364-5.984 75.5-.071-.423 0 0c.428 2.532 2.745 3.213 2.464 11.867-3.661 18.211-1.4 47.5-1.4 47.5a45.3 45.3 0 00.55 5.694c.381 2.629.893 3.631.784 3.824-.109 1.595-1.6 1.2-4.529 4.46s-2.887 7.592-7.183 8.59-15.381-1.411-13.167-6.423 11.533-7.745 11.305-15.26c.923-11-6.958-29.556-8.91-42.838a132.689 132.689 0 01-1.4-16.283 147.161 147.161 0 000-23.611 291.646 291.646 0 01-5.867-35.4c-.965-10.31-1.322-19.834-1.557-22.663-.558-6.719 3.522-25.36 4.19-28.123s1.494-23.092 1.887-28.269-4.965-29.049-5.437-29.365 5.056 24.836 3.549 28.1c-.277.6.075 5.445-.825 10.284a94.651 94.651 0 01-3.661 13.139s-10 27.731-11.019 30.073a1.182 1.182 0 01-.151.278c.172 2.275-4.238 29.878-6.22 29.161s1.282-11.674 0-11.021-2.763 14.117-5.128 13.631 1.4-12.86 0-12.86-3.381 11.6-5.584 12.86 2.349-14.373.792-15.025-4.511 13.188-7.021 12.415 6.506-16.965 5.21-20.622-9.288 2.072-9.494-.837 15.607-11.233 15.607-11.233l3.753-18.59 1.921-20.295 3.4-13.565s2.593-22.266 3.019-25.935-5.824-12.541 3.892-24.613c7.458-9.266 15.829-8.333 20.438-11.131.019-.011 8.128-1.432 8.949-4.9 2.877-12.161.854-8.485.5-11.548a19.694 19.694 0 00-1.231-3.391 54.223 54.223 0 01-4.581-11.032c-.967-3.729.632-3.391.714-3.885.816-4.887-2.012-22.6 16.6-22.916 8.314-.141 13.6 3.615 15.932 8.3 2.686 5.4 1.718 11.9 1.694 12.7v.061s2.206 1.431 1.71 5.079-3.695 9.514-3.695 9.514l-3.174 7.51s-.2 7.32 1.031 9.307\"\r\n            data-name=\"Caminho 2911\"\r\n          ></path>\r\n          <path\r\n            fill=\"none\"\r\n            stroke=\"#000\"\r\n            strokeWidth=\"1\"\r\n            d=\"M111.821 284.145c5.574 5.4 22.579 10.357 27.192 13.495a15.653 15.653 0 015.253 6.8 28.811 28.811 0 011.778 7.233s-.3 33.927 1.524 38.965a51.6 51.6 0 013.659 10.9c1.557 15.871 6.031 42.061 6.031 42.061s14.464 8.26 16.243 11.013-5.611 1.578-9.128 0 5.978 17.184 4.831 20.9-5.914-12.6-7.4-11.553 3.6 15.7 1.447 15.729-4.492-14.006-5.989-14.006 1.8 13.073 0 14.006-3.633-13.341-4.844-14.006 3.364 15.422 0 11.345-7.334-24.114-6.391-29.121c.469-2.489-6.381-15.094-10.526-27.857a150.786 150.786 0 01-5.675-25.937s-.127-16.893 3.812-28.689\"\r\n            data-name=\"Caminho 2910\"\r\n          ></path>\r\n        </g>\r\n        <text\r\n          fontFamily=\"Montserrat-SemiBold, Montserrat\"\r\n          fontSize=\"14\"\r\n          fontWeight=\"600\"\r\n          transform=\"translate(76 208)\"\r\n        >\r\n          <tspan x=\"0\" y=\"0\">\r\n            Frente\r\n          </tspan>\r\n        </text>\r\n        <text\r\n          fontFamily=\"Montserrat-SemiBold, Montserrat\"\r\n          fontSize=\"14\"\r\n          fontWeight=\"600\"\r\n          transform=\"translate(251 208)\"\r\n        >\r\n          <tspan x=\"0\" y=\"0\">\r\n            Costas\r\n          </tspan>\r\n        </text>\r\n        <g data-name=\"Grupo 1650\" transform=\"translate(-4)\">\r\n          <ellipse\r\n            cx=\"4.892\"\r\n            cy=\"26.148\"\r\n            fill={getAreaColor(13)}\r\n            onClick={() => handleClickArea(13)}\r\n            data-name=\"Elipse 352\"\r\n            opacity=\"0.35\"\r\n            rx=\"4.892\"\r\n            ry=\"26.148\"\r\n            transform=\"translate(228.218 310.499)\"\r\n          ></ellipse>\r\n          <ellipse\r\n            cx=\"4.892\"\r\n            cy=\"26.148\"\r\n            fill={getAreaColor(13)}\r\n            onClick={() => handleClickArea(13)}\r\n            data-name=\"Elipse 351\"\r\n            opacity=\"0.35\"\r\n            rx=\"4.892\"\r\n            ry=\"26.148\"\r\n            transform=\"translate(308.47 310.499)\"\r\n          ></ellipse>\r\n          <g data-name=\"Grupo 1648\" transform=\"translate(-3466 -6288.763)\">\r\n            <ellipse\r\n              cx=\"13.5\"\r\n              cy=\"11\"\r\n              fill={getAreaColor(10)}\r\n              onClick={() => handleClickArea(10)}\r\n              data-name=\"Elipse 327\"\r\n              opacity=\"0.35\"\r\n              rx=\"13.5\"\r\n              ry=\"11\"\r\n              transform=\"translate(3726 6561)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"29\"\r\n              cy=\"23.5\"\r\n              fill={getAreaColor(14)}\r\n              onClick={() => handleClickArea(14)}\r\n              data-name=\"Elipse 331\"\r\n              opacity=\"0.351\"\r\n              rx=\"29\"\r\n              ry=\"23.5\"\r\n              transform=\"translate(3710 6626)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"18\"\r\n              cy=\"19.5\"\r\n              fill={getAreaColor(15)}\r\n              onClick={() => handleClickArea(15)}\r\n              data-name=\"Elipse 332\"\r\n              opacity=\"0.351\"\r\n              rx=\"18\"\r\n              ry=\"19.5\"\r\n              transform=\"translate(3704 6676)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"17.5\"\r\n              cy=\"19.5\"\r\n              fill={getAreaColor(15)}\r\n              onClick={() => handleClickArea(15)}\r\n              data-name=\"Elipse 333\"\r\n              opacity=\"0.351\"\r\n              rx=\"17.5\"\r\n              ry=\"19.5\"\r\n              transform=\"translate(3739 6676)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"8.5\"\r\n              cy=\"29\"\r\n              fill={getAreaColor(17)}\r\n              onClick={() => handleClickArea(17)}\r\n              data-name=\"Elipse 334\"\r\n              opacity=\"0.35\"\r\n              rx=\"8.5\"\r\n              ry=\"29\"\r\n              transform=\"translate(3748 6719)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"7.157\"\r\n              cy=\"24.343\"\r\n              fill={getAreaColor(18)}\r\n              onClick={() => handleClickArea(18)}\r\n              data-name=\"Elipse 336\"\r\n              opacity=\"0.35\"\r\n              rx=\"7.157\"\r\n              ry=\"24.343\"\r\n              transform=\"rotate(5.13 -73829.978 45234.229)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"7.157\"\r\n              cy=\"24.343\"\r\n              fill={getAreaColor(18)}\r\n              onClick={() => handleClickArea(18)}\r\n              data-name=\"Elipse 338\"\r\n              opacity=\"0.35\"\r\n              rx=\"7.157\"\r\n              ry=\"24.343\"\r\n              transform=\"rotate(-7 57314.696 -26968.94)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"8.5\"\r\n              cy=\"29\"\r\n              fill={getAreaColor(17)}\r\n              onClick={() => handleClickArea(17)}\r\n              data-name=\"Elipse 340\"\r\n              opacity=\"0.35\"\r\n              rx=\"8.5\"\r\n              ry=\"29\"\r\n              transform=\"translate(3713 6719)\"\r\n            ></ellipse>\r\n            <path\r\n              fill={getAreaColor(11)}\r\n              onClick={() => handleClickArea(11)}\r\n              d=\"M-9.619 24.731c4.531 2.662 12 5.086 16.733 7.409 9.726 4.773 15.769 9.217 15.769 13.268 0 6.019-4.858-1.347-16.813-1.347s-21.646-4.879-21.646-10.9-5.998-8.43 5.957-8.43z\"\r\n              data-name=\"Caminho 2898\"\r\n              opacity=\"0.351\"\r\n              transform=\"translate(3762.768 6549.684)\"\r\n            ></path>\r\n            <path\r\n              fill={getAreaColor(11)}\r\n              onClick={() => handleClickArea(11)}\r\n              d=\"M18.631 36.138C14.1 38.8 3.82 41.3-.913 43.62-10.639 48.393-15.5 55.509-15.5 59.56c0 6.019 4.726-5.041 16.681-5.041s21.646-4.879 21.646-10.9 7.759-7.481-4.196-7.481z\"\r\n              data-name=\"Caminho 2900\"\r\n              opacity=\"0.351\"\r\n              transform=\"translate(3707.553 6539.227)\"\r\n            ></path>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3708.065 6675.783s10.788-4.958 20.823-.367\"\r\n              data-name=\"Caminho 2902\"\r\n            ></path>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3771.042 6676.791s-5.611-4.592-19.554-1.54\"\r\n              data-name=\"Caminho 2903\"\r\n            ></path>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3739.533 6707.642s-17.706 13.407-35.593-6.557\"\r\n              data-name=\"Caminho 2904\"\r\n            ></path>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3739.042 6707.651s17.611 13.4 35.5-6.565\"\r\n              data-name=\"Caminho 2905\"\r\n            ></path>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeLinecap=\"round\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3771.066 6626.622s-13.916-.319-22.049-8.465\"\r\n              data-name=\"Caminho 2906\"\r\n            ></path>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeLinecap=\"round\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3706.906 6626.622s13.916-.319 22.049-8.465\"\r\n              data-name=\"Caminho 2907\"\r\n            ></path>\r\n            <path\r\n              fill={getAreaColor(12)}\r\n              onClick={() => handleClickArea(12)}\r\n              d=\"M27 0a26.754 26.754 0 0127 26.5A26.754 26.754 0 0127 53 26.754 26.754 0 010 26.5 26.754 26.754 0 0127 0z\"\r\n              data-name=\"Caminho 2913\"\r\n              opacity=\"0.384\"\r\n              transform=\"translate(3712 6573)\"\r\n            ></path>\r\n            <ellipse\r\n              cx=\"4.244\"\r\n              cy=\"19.308\"\r\n              fill={getAreaColor(16)}\r\n              onClick={() => handleClickArea(16)}\r\n              data-name=\"Elipse 345\"\r\n              opacity=\"0.35\"\r\n              rx=\"4.244\"\r\n              ry=\"19.308\"\r\n              transform=\"rotate(19 -18056.84 14364.877)\"\r\n            ></ellipse>\r\n            <ellipse\r\n              cx=\"4.244\"\r\n              cy=\"19.308\"\r\n              fill={getAreaColor(16)}\r\n              onClick={() => handleClickArea(16)}\r\n              data-name=\"Elipse 347\"\r\n              opacity=\"0.35\"\r\n              rx=\"4.244\"\r\n              ry=\"19.308\"\r\n              transform=\"rotate(161 1338.813 3666.754)\"\r\n            ></ellipse>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3751.789 6573.541c5.642 5.463 22.853 10.482 27.522 13.658a15.842 15.842 0 015.317 6.881 29.151 29.151 0 011.8 7.321s-.3 34.338 1.542 39.438a52.211 52.211 0 013.7 11.034c1.576 16.063 6.1 42.571 6.1 42.571s14.64 8.36 16.44 11.147-5.679 1.6-9.239 0 5.457 18.08 4.889 21.15-5.985-12.75-7.492-11.693 3.646 15.894 1.464 15.92-4.547-14.176-6.062-14.176 1.82 13.231 0 14.176-3.677-13.5-4.9-14.176 1.281 11.442 0 11.483-7.423-24.407-6.469-29.475c.475-2.519-6.459-15.277-10.654-28.2a152.619 152.619 0 01-5.743-26.251s-.129-17.1 3.858-29.038\"\r\n              data-name=\"Caminho 2908\"\r\n            ></path>\r\n            <path\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeLinecap=\"round\"\r\n              strokeWidth=\"1\"\r\n              d=\"M3770.689 6631.33c-1.62 1.53-3.269 36.948-.373 43.353s4.185 26.669 4.185 26.669a202.222 202.222 0 01-1.477 21.388c-1.406 11.693-4.389 26.031-5.779 37.946-1.372 11.758-1.168 21.172-.4 22.986 1.445 3.4-3.3 25.215-5.874 41.829a114.773 114.773 0 00-1.363 19.154 5.973 5.973 0 000 3.243c.468 2.031 13.439 4.241 15.958 7.246s-5.881 4.774-5.881 4.774-17.837 3.613-20.9 3.144-3.131-1.06-3.551-2.651c-.159-.138-.492-10.6 1.089-15.755 1.494-5.311-3.087-47.85-2.389-54.3s1.857-14.9 1.857-14.9l-6.579-68.205s-6.167 76.278-6.057 76.419-.072-.428 0 0c.433 2.563 2.779 3.252 2.493 12.011-3.706 18.432-3.732 48.972-3.732 48.972s.146 2.183.7 6a78.355 78.355 0 01.54 9.262c-.11 1.614-3.146 3.144-6.725 3.144-6.278 0-18.388-3.144-18.388-3.144s-4.623-2.244-5.394-3.767 2.313-2.324 2.313-2.324l6.369-1.809s7.57-.652 7.34-8.258c.934-11.138-3.866-29.019-5.842-42.462a134.282 134.282 0 01-1.421-16.48 148.935 148.935 0 000-23.9 295.244 295.244 0 01-5.938-35.825c-.976-10.435-1.337-20.075-1.575-22.938-.564-6.8 3.564-25.668 4.241-28.464s1.511-23.372 1.91-28.612-5.025-29.4-5.5-29.721 5.117 25.137 3.592 28.44c-.281.607.076 5.511-.835 10.409a95.807 95.807 0 01-3.706 13.3s-10.117 28.067-11.153 30.438a1.2 1.2 0 01-.153.281c.174 2.3-4.29 30.24-6.3 29.514s1.3-11.815 0-11.155-2.8 14.288-5.19 13.8 1.413-13.016 0-13.016-3.422 11.744-5.651 13.016 2.377-14.547.8-15.208-4.565 13.348-7.106 12.566 6.585-17.171 5.273-20.873-9.4 2.1-9.609-.847 15.8-11.37 15.8-11.37l3.8-18.816 1.945-20.541 3.437-13.73s2.624-22.536 3.055-26.249-5.9-12.693 3.939-24.911c7.549-9.379 16.021-8.434 20.686-11.267.02-.011 8.227-1.449 9.057-4.96 2.912-12.309.864-8.588.509-11.688a19.922 19.922 0 00-1.246-3.432 54.894 54.894 0 01-4.637-11.166c-.979-3.775.64-3.432.723-3.932.826-4.947-2.036-22.873 16.8-23.194 8.415-.143 13.768 3.659 16.125 8.4 2.718 5.47 1.739 12.048 1.715 12.857v.062s2.233 1.448 1.73 5.141-3.74 9.629-3.74 9.629l-3.212 7.6s-.2 7.409 1.043 9.42\"\r\n              data-name=\"Caminho 2909\"\r\n            ></path>\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <text\r\n        data-name=\"1\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(75.735 89.841)\"\r\n        onClick={() => handleClickArea(1)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          1\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"10\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(244.735 92.841)\"\r\n        onClick={() => handleClickArea(10)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          10\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"12\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(244.735 123.841)\"\r\n        onClick={() => handleClickArea(12)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          12\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"13\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(203.735 145.841)\"\r\n        onClick={() => handleClickArea(13)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          13\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"16\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(194.735 201.841)\"\r\n        onClick={() => handleClickArea(16)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          16\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"13\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(284.735 145.841)\"\r\n        onClick={() => handleClickArea(13)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          13\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"16\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(292.735 201.841)\"\r\n        onClick={() => handleClickArea(16)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          16\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"14\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(244.735 169.841)\"\r\n        onClick={() => handleClickArea(14)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          14\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"15\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(226.735 217.841)\"\r\n        onClick={() => handleClickArea(15)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          15\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"15\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(261.735 217.841)\"\r\n        onClick={() => handleClickArea(15)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          15\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"17\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(261.735 268.841)\"\r\n        onClick={() => handleClickArea(17)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          17\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"17\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(226.735 270.841)\"\r\n        onClick={() => handleClickArea(17)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          17\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"18\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(227.735 327.841)\"\r\n        onClick={() => handleClickArea(18)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          18\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"18\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(258.735 327.841)\"\r\n        onClick={() => handleClickArea(18)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          18\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"11\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(215.735 108.841)\"\r\n        onClick={() => handleClickArea(11)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          11\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"11\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(269.735 108.841)\"\r\n        onClick={() => handleClickArea(11)}\r\n      >\r\n        <tspan x=\"-12.938\" y=\"0\">\r\n          11\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"2\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(67.735 72.841)\"\r\n        onClick={() => handleClickArea(2)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          2\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"3\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(53.735 106.841)\"\r\n        onClick={() => handleClickArea(3)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          3\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"4\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(77.735 129.841)\"\r\n        onClick={() => handleClickArea(4)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          4\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"5\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(38.735 145.841)\"\r\n        onClick={() => handleClickArea(5)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          5\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"7\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(31.735 195.841)\"\r\n        onClick={() => handleClickArea(7)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          7\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"5\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(118.735 145.841)\"\r\n        onClick={() => handleClickArea(5)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          5\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"7\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(122.735 193.841)\"\r\n        onClick={() => handleClickArea(7)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          7\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"6\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(77.735 181.841)\"\r\n        onClick={() => handleClickArea(6)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          6\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"8\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(58.735 253.841)\"\r\n        onClick={() => handleClickArea(8)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          8\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"9\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(63.735 330.841)\"\r\n        onClick={() => handleClickArea(9)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          9\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"8\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(96.735 253.841)\"\r\n        onClick={() => handleClickArea(8)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          8\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"9\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(93.735 330.841)\"\r\n        onClick={() => handleClickArea(9)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          9\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"3\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(103.735 106.841)\"\r\n        onClick={() => handleClickArea(3)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          3\r\n        </tspan>\r\n      </text>\r\n      <text\r\n        data-name=\"2\"\r\n        fontFamily=\"SegoeUI, Segoe UI\"\r\n        fontSize=\"12\"\r\n        transform=\"translate(88.735 72.841)\"\r\n        onClick={() => handleClickArea(2)}\r\n      >\r\n        <tspan x=\"-6.469\" y=\"0\">\r\n          2\r\n        </tspan>\r\n      </text>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default BodyMapFibromialgia;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nimport { PatientFibromialgiaResult } from '../../../models/PatientForm';\r\nimport BodyMapFibromialgia from '../../patient/BodyMapFibromialgia';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    fibromialgiaDiagnosis: {\r\n      color: deepOrange[500],\r\n      margin: theme.spacing(2),\r\n    },\r\n    radioSpanLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n    radioLabel: {\r\n      width: '50px',\r\n      textAlign: 'center',\r\n    },\r\n    radioGroup: {\r\n      justifyContent: 'center',\r\n    },\r\n  })\r\n);\r\n\r\nfunction FibromialgiaInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n  const { updated_at, body_pain, booleans, diagnosis, ess, idg } =\r\n    useMemo(() => {\r\n      const { results, updated_at } = selectedForm;\r\n      const { body_pain, booleans, diagnosis, ess, idg } =\r\n        results as PatientFibromialgiaResult;\r\n      return { updated_at, body_pain, booleans, diagnosis, ess, idg };\r\n    }, [selectedForm]);\r\n\r\n  const questions = [\r\n    {\r\n      title: '',\r\n      type: 'body_pain',\r\n      sections: [\r\n        'Regiões onde o paciente teve dor ou sensibilidade nos últimos 7 dias:',\r\n      ],\r\n      alternatives: [],\r\n    },\r\n    {\r\n      title: '',\r\n      type: 'idg',\r\n      sections: ['Áreas onde o paciente teve dor ou sensibilidade:'],\r\n      alternatives: [\r\n        { label: 'Cinta de ombro esquerda', value: 0 },\r\n        { label: 'Cinta de ombro direita', value: 1 },\r\n        { label: 'Braço superior esquerdo', value: 2 },\r\n        { label: 'Braço direito', value: 3 },\r\n        { label: 'Braço inferior esquerdo', value: 4 },\r\n        { label: 'Braço inferior direito', value: 5 },\r\n        { label: 'Quadril (nádega), esquerda', value: 6 },\r\n        { label: 'Quadril (nádega), direita', value: 7 },\r\n        { label: 'Perna superior esquerda', value: 8 },\r\n        { label: 'Perna superior, direita', value: 9 },\r\n        { label: 'Perna inferior, esquerda', value: 10 },\r\n        { label: 'Perna inferior, direita', value: 11 },\r\n        { label: 'Mandíbula, esquerda', value: 12 },\r\n        { label: 'Mandíbula, direita', value: 13 },\r\n        { label: 'Peito', value: 14 },\r\n        { label: 'Abdômen', value: 15 },\r\n        { label: 'Pescoço', value: 16 },\r\n        { label: 'Parte superior das costas', value: 17 },\r\n        { label: 'Parte inferior das costas', value: 18 },\r\n        { label: 'Nenhuma dessas áreas', value: 19 },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Escala da gravidade dos sintomas por 7 dias',\r\n      type: 'ess',\r\n      sections: [\r\n        'Fadiga',\r\n        'Pensando ou lembrando do problema',\r\n        'Levantar-se cansado (não satisfeito)',\r\n      ],\r\n      alternatives: [\r\n        { label: 'Sem problemas', value: 1 },\r\n        { label: 'Problema leve', value: 2 },\r\n        { label: 'Problema moderado', value: 3 },\r\n        { label: 'Problema sério', value: 4 },\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'Durante os últimos 6 meses, você teve algum dos seguintes sintomas?',\r\n      type: 'booleans',\r\n      sections: ['Fadiga', 'Depressão', 'Dor de cabeça'],\r\n      alternatives: [\r\n        { label: 'Sim', value: 1 },\r\n        { label: 'Não', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: '',\r\n      type: 'booleans',\r\n      sections: [\r\n        'Os sintomas são as questões 2 e 3 e a dor generalizada está presente em um nível semelhante por pelo menos 3 meses?',\r\n      ],\r\n      alternatives: [\r\n        { label: 'Sim', value: 1 },\r\n        { label: 'Não', value: 0 },\r\n      ],\r\n    },\r\n    {\r\n      title: '',\r\n      type: 'booleans',\r\n      sections: [\r\n        'Você tem um distúrbio que, de outra forma, explicaria a dor?',\r\n      ],\r\n      alternatives: [\r\n        { label: 'Sim', value: 1 },\r\n        { label: 'Não', value: 0 },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const getBooleansRealIndex = (\r\n    questionIndex: number,\r\n    sectionIndex: number\r\n  ) => {\r\n    const booleansQuestions = questions.filter((q) => q.type === 'booleans');\r\n    return booleansQuestions.reduce((acc, q, i) => {\r\n      if (i < questionIndex - 3) {\r\n        return acc + q.sections.length;\r\n      } else if (i === questionIndex - 3) {\r\n        return acc + sectionIndex;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">FIBROMIALGIA</Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {questions.map((question, qIndex) => (\r\n              <Grid item xs={6} key={`question${qIndex}`}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      {question.title}\r\n                    </Typography>\r\n                  </Grid>\r\n                  {question.sections.map((section, sIndex) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      key={`question${qIndex}-section${sIndex}`}\r\n                    >\r\n                      <FormControl component=\"fieldset\" fullWidth>\r\n                        <FormLabel component=\"legend\">{section}</FormLabel>\r\n\r\n                        {question.type === 'body_pain' && (\r\n                          <Box position=\"relative\">\r\n                            <BodyMapFibromialgia\r\n                              disabledBodyMapClick\r\n                              preSelectedValues={body_pain\r\n                                .map((bodyPain) => bodyPain.area)\r\n                                .reduce((acc, area) => {\r\n                                  acc[area - 1] = 1;\r\n                                  return acc;\r\n                                }, new Array(19).fill(0))}\r\n                            />\r\n                          </Box>\r\n                        )}\r\n                        {question.type === 'idg' && (\r\n                          <List>\r\n                            {question.alternatives.map((alternative, aIndex) =>\r\n                              idg[aIndex] === 'SIM' ? (\r\n                                <ListItem key={`idg-alternative-${aIndex}`}>\r\n                                  <Typography variant=\"body1\" paragraph>\r\n                                    {alternative.label}\r\n                                  </Typography>\r\n                                </ListItem>\r\n                              ) : null\r\n                            )}\r\n                          </List>\r\n                        )}\r\n                        {question.type === 'ess' && (\r\n                          <RadioGroup\r\n                            row\r\n                            aria-label={section}\r\n                            name={`question${qIndex}-section${sIndex}`}\r\n                            classes={{ row: classes.radioGroup }}\r\n                          >\r\n                            {question.alternatives.map(\r\n                              (alternative, aIndex) => (\r\n                                <FormControlLabel\r\n                                  value={alternative.value}\r\n                                  key={alternative.value}\r\n                                  control={<Radio />}\r\n                                  classes={{\r\n                                    labelPlacementBottom: classes.radioLabel,\r\n                                  }}\r\n                                  label={\r\n                                    <>\r\n                                      <Typography\r\n                                        paragraph\r\n                                        className={classes.radioSpanLabel}\r\n                                      >\r\n                                        {alternative.value}\r\n                                      </Typography>\r\n                                      <Typography\r\n                                        paragraph\r\n                                        className={classes.radioSpanLabel}\r\n                                      >\r\n                                        {alternative.label}\r\n                                      </Typography>\r\n                                    </>\r\n                                  }\r\n                                  labelPlacement=\"bottom\"\r\n                                  checked={ess[aIndex] === alternative.value}\r\n                                />\r\n                              )\r\n                            )}\r\n                          </RadioGroup>\r\n                        )}\r\n                        {question.type === 'booleans' && (\r\n                          <RadioGroup\r\n                            row\r\n                            aria-label={section}\r\n                            name={`question${qIndex}-section${sIndex}`}\r\n                            classes={{ row: classes.radioGroup }}\r\n                          >\r\n                            {question.alternatives.map((alternative) => (\r\n                              <FormControlLabel\r\n                                value={alternative.value}\r\n                                key={alternative.value}\r\n                                control={<Radio />}\r\n                                classes={{\r\n                                  labelPlacementBottom: classes.radioLabel,\r\n                                }}\r\n                                label={alternative.label}\r\n                                labelPlacement=\"bottom\"\r\n                                checked={\r\n                                  booleans[\r\n                                    getBooleansRealIndex(qIndex, sIndex)\r\n                                  ] === alternative.label.toUpperCase()\r\n                                }\r\n                              />\r\n                            ))}\r\n                          </RadioGroup>\r\n                        )}\r\n                      </FormControl>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"subtitle1\"\r\n                className={classes.fibromialgiaDiagnosis}\r\n              >\r\n                {diagnosis?.criteria}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                Índice de Dor Generalizada\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"caption\"\r\n                align=\"left\"\r\n                paragraph\r\n              >{`Resultado: ${diagnosis?.idg_score}`}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                Escala de Severidade dos Sintomas\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"caption\"\r\n                align=\"left\"\r\n                paragraph\r\n              >{`Resultado: ${diagnosis?.ess_score}`}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                Tem sintomas há mais de 3 meses?\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"caption\"\r\n                align=\"left\"\r\n                paragraph\r\n              >{`Resultado: ${\r\n                booleans?.length > 3 && booleans[3]\r\n              }`}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default FibromialgiaInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport {\r\n  setDataIntoFibromialgiaTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport { ReportPageProps, SimpleReportTableData } from '../../../interfaces';\r\nimport FibromialgiaInnerReport from '../inner-report/FibromialgiaInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction FibromialgiaReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SimpleReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoFibromialgiaTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm, setRows]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">FIBROMIALGIA</Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <FibromialgiaInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FibromialgiaReport;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { PatientIADResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    IADFormItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    IADSlider: {\r\n      textAlign: 'center',\r\n      color: '#329D63',\r\n      width: '80%',\r\n      marginLeft: '1rem',\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.75rem',\r\n      lineHeight: 1,\r\n    },\r\n  })\r\n);\r\n\r\nfunction IADInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at } = useMemo(() => {\r\n    const { updated_at, results } = selectedForm;\r\n    const { text } = results as PatientIADResult;\r\n\r\n    return { answers: text, updated_at };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    'Muitas vezes eu consigo influenciar a intensidade da dor que sinto.', //1\r\n    'Provavelmente eu sempre terei que tomar medicamento para dor.', //2\r\n    'Sempre que eu sinto dor eu quero que a minha família me trate melhor.', //3\r\n    'Eu não espero cura médica para a minha dor.', //4\r\n    'O maior alívio da dor que eu tive foi com o uso de medicamentos', //5\r\n    'A ansiedade aumenta a minha dor.', //6\r\n    'Sempre que eu sinto dor as pessoas devem me tratar com cuidado e preocupação', //7\r\n    'Eu desisti de buscar a completa eliminação da minha dor através do trabalho da medicina.', //8\r\n    'É resposabilidade daqueles que me amam ajudarem-me quando eu sentir dor.', //9\r\n    'O estresse da minha vida aumenta a minha dor.', //10\r\n    'Ecercício e movimento são bons para o meu problema da dor.', //11\r\n    'Concentrando-me ou relanxando-me consigo diminuir a minha dor.', //12\r\n    'Remédio é um dos melhores tratamentos para dor crônica.', //13\r\n    'A minha família precisa aprender a cuidar melhor de mim quando eu estiver com dor.', //14\r\n    'A drepressão aumenta a dor que sinto.', //15\r\n    'Se eu me exercitasse poderia piorar ainda mais o meu problema de dor.', //16\r\n    'Eu acredito poder controlar a dor que sinto mudando meus pensamentos.', //17\r\n    'Muitas vezes quando eu estou com dor eu preciso de mais carinho do que estou recebendo agora.', //18\r\n    'Alguma coisa está errada com o meu corpo que impede muito movimento ou exercício.', //19\r\n    'Eu aprendi a controlar a minha dor.', //20\r\n    'Eu confio que a medicina poder curar a minha dor.', //21\r\n    'Eu sei com certeza que posso aprender a lidar com a dor.', //22\r\n    'A minha dor não me impede de levar uma vida fisicamente ativa.', //23\r\n    'A minha dor física não será curada.', //24\r\n    'Há uma forte ligação entre as minhas emoções e a intensidade da minha dor.', //25\r\n    'Eu posso fazer quase tudo tão bem quanto eu podia antes de ter o problema da dor.', //26\r\n    'Se eu não fizer exercícios regularmente o problema da minha dor continuará a piorar.', //27\r\n    'O exercício pode diminuir a intensidade da dor que eu sinto.', //28\r\n    'Estou convencido de que não há procedimento médico que ajude a minha dor.', //29\r\n    'A dor que sinto impediria qualquer pessoa de levar uma vida ativa.', //30\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">\r\n            Inventário de atitude frente à dor\r\n          </Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            {questions.map((question, index) => (\r\n              <Grid item xs={6} key={`question-${index}`}>\r\n                <div className={classes.IADFormItem} key={`question_${index}`}>\r\n                  <Typography\r\n                    id={`question_${index}`}\r\n                    gutterBottom\r\n                    variant=\"subtitle1\"\r\n                    align=\"left\"\r\n                  >\r\n                    {`${index + 1}. ${question}`}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" align=\"left\">\r\n                    {answers[index]}\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default IADInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport { NoResultReportTableData, ReportPageProps } from '../../../interfaces';\r\nimport {\r\n  setDataIntoNoResultTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport IADInnerReport from '../inner-report/IADInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction IADReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<NoResultReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoNoResultTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">\r\n                Inventário de atitude frente à dor\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <IADInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IADReport;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { PatientSBSTResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    radioGroup: {\r\n      justifyContent: 'center',\r\n    },\r\n  })\r\n);\r\n\r\nfunction SBSTInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at, result, total_points, psychosocial_points } =\r\n    useMemo(() => {\r\n      const { answers, results, updated_at } = selectedForm;\r\n      const { result, total_points, psychosocial_points } =\r\n        results as PatientSBSTResult;\r\n      return { answers, updated_at, result, total_points, psychosocial_points };\r\n    }, [selectedForm]);\r\n\r\n  const questions = [\r\n    'A minha dor nas costas se espalhou pelas pernas nas duas últimas semanas.', //1\r\n    'Eu tive dor no ombro e/ou na nuca pelo menos uma vez nas últimas duas semanas.', //2\r\n    'Eu evito andar longas distâncias por causa da minha dor nas costas.', //3\r\n    'Nas duas últimas semanas, tenho me vestido mais devagar por causa da minha dor nas costas.', //4\r\n    'A atividade física não é realmente segura para uma pessoa com um problema como o meu.', //5\r\n    'Tenho ficado preocupado por muito tempo por causa da minha dor nas costas.', //6\r\n    'Eu sinto que minha dor nas costas é terrível e que nunca vai melhorar.', //7\r\n    'Em geral, eu não tenho gostado de todas as coisas como eu costumava gostar.', //8\r\n    'Em geral, quanto a sua dor nas costas o incomodou nas duas últimas semanas. Nada ( 0 ) Pouco ( 0 ) Moderado ( 0 ) Muito ( 1 ) Extremamente ( 1 )', //9\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Start Back Screening Tool (SBST)</Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            {questions.map((question, index) => (\r\n              <Grid item xs={6} key={`question-${index}`}>\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">\r\n                    {`${index + 1}. ${question}`}\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    aria-label={question}\r\n                    name={`question_${index}`}\r\n                    classes={{ row: classes.radioGroup }}\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"0\"\r\n                      control={<Radio />}\r\n                      label=\"Discordo\"\r\n                      checked={answers[index] === 0}\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"1\"\r\n                      control={<Radio />}\r\n                      label=\"Concordo\"\r\n                      checked={answers[index] === 1}\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Total de pontos: ${total_points}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Subescala psicossocial: ${psychosocial_points}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Resultado: ${result}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SBSTInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm, PatientSBSTResult } from '../../../models/PatientForm';\r\nimport { ReportPageProps, SimpleReportTableData } from '../../../interfaces';\r\nimport {\r\n  setDataIntoSimpleTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport SBSTInnerReport from '../inner-report/SBSTInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction SBSTReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SimpleReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(\r\n      setDataIntoSimpleTable(\r\n        props.data.map((form: PatientForm) => ({\r\n          ...form,\r\n          text: (form.results as PatientSBSTResult).result,\r\n        })),\r\n        setSelectedForm\r\n      )\r\n    );\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">\r\n                Start Back Screening Tool (SBST)\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <SBSTInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SBSTReport;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nimport { PatientBasicResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    PSEQFormItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    PSEQSlider: {\r\n      textAlign: 'center',\r\n      color: '#329D63',\r\n      width: '65%',\r\n      marginLeft: '1rem',\r\n    },\r\n    ECPSliderLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.625rem',\r\n      lineHeight: 1,\r\n    },\r\n    circularProgress: {\r\n      margin: theme.spacing(4),\r\n      color: deepOrange[500],\r\n      position: 'absolute',\r\n      left: 0,\r\n    },\r\n    circle: {\r\n      strokeLinecap: 'round',\r\n    },\r\n    bottom: {\r\n      margin: theme.spacing(4),\r\n      color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n    },\r\n  })\r\n);\r\n\r\nfunction PSEQInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at, scorePSEQ, textPSEQ } = useMemo(() => {\r\n    const { answers, results, updated_at } = selectedForm;\r\n    const { score, text } = results as PatientBasicResult;\r\n    return { answers, updated_at, scorePSEQ: score || 0, textPSEQ: text };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    'Eu posso aproveitar as coisas, apesar da dor.', //1\r\n    'Eu posso fazer a maioria das tarefas domésticas (por exemplo, arrumar, lavar louça, etc), apesar da dor.', //2\r\n    'Eu posso socializar com meus amigos ou familiares como eu costumava fazer, apesar da dor.', //3\r\n    'Eu posso lidar com a minha dor na maioria das situações.', //4\r\n    'Eu posso fazer alguma forma de trabalho, apesar da dor. (“Trabalho” inclui tarefas domésticas, trabalho remunerado e não remunerado).', //5\r\n    'Eu ainda posso fazer muitas das coisas que eu gosto de fazer, como hobbies ou atividades de lazer, apesar da dor.', //6\r\n    'Eu posso lidar com a dor sem medicação', //7\r\n    'Eu ainda posso realizar a maioria dos meus objetivos na vida, apesar da dor.', //8\r\n    'Eu posso viver um estilo de vida normal, apesar da dor.', //9\r\n    'Eu posso gradualmente me tornar mais ativo, apesar da dor.', //10\r\n  ];\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: (\r\n        <>\r\n          <Typography>0</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Completamente confiante\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    { value: 1, label: 1 },\r\n    { value: 2, label: 2 },\r\n    { value: 3, label: 3 },\r\n    { value: 4, label: 4 },\r\n    { value: 5, label: 5 },\r\n    {\r\n      value: 6,\r\n      label: (\r\n        <>\r\n          <Typography>6</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Não completamente confiante\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Autoeficácia da dor (PSEQ)</Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            {questions.map((question, index) => (\r\n              <Grid item xs={6} key={`question-${index}`}>\r\n                <div className={classes.PSEQFormItem} key={`question_${index}`}>\r\n                  <Typography\r\n                    id={`question_${index}`}\r\n                    className={classes.ECPSliderLabel}\r\n                    gutterBottom\r\n                  >\r\n                    {`${index + 1}. ${question}`}\r\n                  </Typography>\r\n                  <Slider\r\n                    aria-labelledby={`question_${index}`}\r\n                    value={answers[index]}\r\n                    className={classes.PSEQSlider}\r\n                    step={1}\r\n                    valueLabelDisplay=\"auto\"\r\n                    marks={marks}\r\n                    min={0}\r\n                    max={6}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Total de pontos: ${scorePSEQ}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Resultado: ${textPSEQ}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PSEQInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport { ReportPageProps, SimpleReportTableData } from '../../../interfaces';\r\nimport {\r\n  setDataIntoSimpleTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport PSEQInnerReport from '../inner-report/PSEQInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction PSEQReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SimpleReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoSimpleTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">\r\n                Escala de pensamento catastrófico\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <PSEQInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PSEQReport;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport { PatientWOMACResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    formLabel: {\r\n      width: '100%',\r\n      textAlign: 'left',\r\n    },\r\n    radioSpanLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n  })\r\n);\r\n\r\nfunction WOMACInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    answers,\r\n    updated_at,\r\n    function_index,\r\n    pain_index,\r\n    stiffness_index,\r\n    total_index,\r\n    total_percentage,\r\n    total_ratio,\r\n  } = useMemo(() => {\r\n    const { answers, results, updated_at } = selectedForm;\r\n    const {\r\n      function_index,\r\n      pain_index,\r\n      stiffness_index,\r\n      total_index,\r\n      total_percentage,\r\n      total_ratio,\r\n    } = results as PatientWOMACResult;\r\n    return {\r\n      answers,\r\n      updated_at,\r\n      function_index,\r\n      pain_index,\r\n      stiffness_index,\r\n      total_index,\r\n      total_percentage,\r\n      total_ratio,\r\n    };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    {\r\n      title: 'Qual a intensidade da sua dor para as seguintes atividades?',\r\n      sections: [\r\n        'Caminhando em lugar plano.',\r\n        'Subindo ou descendo escadas.',\r\n        'A noite deitado na cama.',\r\n        'Sentando-se ou deitando-se.',\r\n        'Ficando em pé.',\r\n      ],\r\n    },\r\n    {\r\n      title: '',\r\n      sections: [\r\n        'Qual a intensidade de sua rigidez logo após acordar de manhã?',\r\n        'Qual a intensidade de sua rigidez após de sentar, se deitar ou repousar no decorrer do dia?',\r\n      ],\r\n    },\r\n    {\r\n      title:\r\n        'Qual o grau de dificuldade que você tem ao realizar as seguintes atividades?',\r\n      sections: [\r\n        'Descer escadas.', //1\r\n        'Subir escadas.', //2\r\n        'Levantar-se estando sentada.', //3\r\n        'Ficar em pé.', //4\r\n        'Abaixar-se para pegar algo.', //5\r\n        'Andar no plano.', //6\r\n        'Entrar e sair do carro.', //7\r\n        'Ir fazer compras.', //8\r\n        'Colocar meias.', //9\r\n        'Levantar-se da cama.', //10\r\n        'Tirar as meias.', //11\r\n        'Ficar deitado na cama.', //12\r\n        'Entrar e sair do banho.', //13\r\n        'Se sentar.', //14\r\n        'Sentar e levantar do vaso sanitário.', //15\r\n        'Fazer tarefas domésticas pesadas.', //16\r\n        'Fazer tarefas domésticas leves.', //17\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const getRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n    return questions.reduce((acc, q, i) => {\r\n      if (i < questionIndex) {\r\n        return acc + q.sections.length;\r\n      } else if (i === questionIndex) {\r\n        return acc + sectionIndex;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">\r\n            Qualidade de vida específico para osteoartrose WOMAC (Western\r\n            Ontario McMaster Universities)\r\n          </Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            {questions.map((question, qIndex) => (\r\n              <Grid item xs={12} lg={6} key={`question${qIndex}`}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">\r\n                      {`${qIndex + 1}. ${question.title}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                  {question.sections.map((section, sIndex) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      key={`question${qIndex}-section${sIndex}`}\r\n                    >\r\n                      <FormControl component=\"fieldset\" fullWidth>\r\n                        <FormLabel\r\n                          component=\"legend\"\r\n                          className={classes.formLabel}\r\n                        >\r\n                          {section}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                          row\r\n                          aria-label={section}\r\n                          name={`question${qIndex}-section${sIndex}`}\r\n                        >\r\n                          <FormControlLabel\r\n                            value=\"0\"\r\n                            control={<Radio />}\r\n                            label=\"Nenhum\"\r\n                            checked={\r\n                              answers[getRealIndex(qIndex, sIndex)] === 0\r\n                            }\r\n                            classes={{\r\n                              label: classes.radioSpanLabel,\r\n                            }}\r\n                            labelPlacement=\"bottom\"\r\n                          />\r\n                          <FormControlLabel\r\n                            value=\"1\"\r\n                            control={<Radio />}\r\n                            label=\"Pouca\"\r\n                            checked={\r\n                              answers[getRealIndex(qIndex, sIndex)] === 1\r\n                            }\r\n                            classes={{\r\n                              label: classes.radioSpanLabel,\r\n                            }}\r\n                            labelPlacement=\"bottom\"\r\n                          />\r\n                          <FormControlLabel\r\n                            value=\"2\"\r\n                            control={<Radio />}\r\n                            label=\"Moderada\"\r\n                            checked={\r\n                              answers[getRealIndex(qIndex, sIndex)] === 2\r\n                            }\r\n                            classes={{\r\n                              label: classes.radioSpanLabel,\r\n                            }}\r\n                            labelPlacement=\"bottom\"\r\n                          />\r\n                          <FormControlLabel\r\n                            value=\"3\"\r\n                            control={<Radio />}\r\n                            label=\"Intensa\"\r\n                            checked={\r\n                              answers[getRealIndex(qIndex, sIndex)] === 3\r\n                            }\r\n                            classes={{\r\n                              label: classes.radioSpanLabel,\r\n                            }}\r\n                            labelPlacement=\"bottom\"\r\n                          />\r\n                          <FormControlLabel\r\n                            value=\"4\"\r\n                            control={<Radio />}\r\n                            label=\"Muito intensa\"\r\n                            checked={\r\n                              answers[getRealIndex(qIndex, sIndex)] === 4\r\n                            }\r\n                            classes={{\r\n                              label: classes.radioSpanLabel,\r\n                            }}\r\n                            labelPlacement=\"bottom\"\r\n                          />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Índice funcional: ${function_index}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Índice de dor: ${pain_index}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Índice de rigidez: ${stiffness_index}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Índice total: ${total_index}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Porcentagem total: ${total_percentage}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Coeficiente total: ${total_ratio}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default WOMACInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport {\r\n  setDateIntoWOMACTable,\r\n  simpleColumns,\r\n} from '../../../utils/reportTable';\r\nimport { ReportPageProps, SimpleReportTableData } from '../../../interfaces';\r\nimport WOMACInnerReport from '../inner-report/WOMACInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction WOMACReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SimpleReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDateIntoWOMACTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">\r\n                Qualidade de vida específico para osteoartrose WOMAC (Western\r\n                Ontario McMaster Universities)\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={simpleColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <WOMACInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default WOMACReport;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport { PatientSPADIResult } from '../../../models/PatientForm';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    formLabel: {\r\n      width: '100%',\r\n      textAlign: 'left',\r\n    },\r\n    slider: {\r\n      textAlign: 'center',\r\n      color: '#7A3FE1',\r\n      width: '90%',\r\n      marginLeft: '1rem',\r\n    },\r\n    sliderMakrLabel: {\r\n      fontSize: '1rem',\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.75rem',\r\n      lineHeight: 1,\r\n    },\r\n    sectionElement: {\r\n      height: '130px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction SPADIInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const { answers, updated_at, disability, pain, total } = useMemo(() => {\r\n    const { answers, results, updated_at } = selectedForm;\r\n    const { disability, pain, total } = results as PatientSPADIResult;\r\n    return {\r\n      answers,\r\n      updated_at,\r\n      disability: disability.percentage,\r\n      pain: pain.percentage,\r\n      total: total.percentage,\r\n    };\r\n  }, [selectedForm]);\r\n\r\n  const questions = [\r\n    {\r\n      title: 'Escala de incapacidade',\r\n      subtitle:\r\n        'Os números ao lado de cada item representam o grau de dificuldade que você teve ao fazer aquela atividade. O número zero representa \"Sem dificuldade\" e o número dez representa \"Não consegui fazer\". Por favor, indique o número que melhor descreve quanta dificuldade você teve para fazer cada uma das atividades na semana passada. Se você não teve a oportunidade de fazer uma das atividades na semana passada, por favor, tente estimar qual número você daria para sua dificuldade.',\r\n      sections: [\r\n        'Lavar seu cabelo com o braço afetado?',\r\n        'Lavar suas costas como braço afetado?',\r\n        'Vestir uma camiseta ou blusa pela cabeça',\r\n        'Vestir uma camisa que abotoa na frente?',\r\n        'Vestir suas calças?',\r\n        'Colocar algo em uma prateleira alta com o braço afetado?',\r\n        'Carregar um objeto pesado de 5kg (saco grande de arroz) com o braço afetado?',\r\n        'Retirar algo do bolso de trás com o braço afetado?',\r\n      ],\r\n      alternatives: [\r\n        { label: 'N/A', value: -1 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>0</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Sem dificuldade\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 0,\r\n        },\r\n        { label: '1', value: 1 },\r\n        { label: '2', value: 2 },\r\n        { label: '3', value: 3 },\r\n        { label: '4', value: 4 },\r\n        { label: '5', value: 5 },\r\n        { label: '6', value: 6 },\r\n        { label: '7', value: 7 },\r\n        { label: '8', value: 8 },\r\n        { label: '9', value: 9 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>10</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Não consegui fazer\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 10,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Escala de dor',\r\n      subtitle:\r\n        'Os números ao lado de cada item representam quanta dor você sente em cada situação. O número zero representa \"Sem dor\" e o número dez representa \"A pior dor\". Por favor, indique o número que melhor descreve quanta dor você sentiu durante a semana passada em cada uma das seguintes situações. Se você não teve a oportunidade de fazer uma das atividades na semana passada, por favor, tente estimar qual número você daria para sua dor.',\r\n      sections: [\r\n        'Qual foi a intensidade da sua dor quando foi a pior na semana passada?', //1\r\n        'Quando se deitou em cima do braço afetado?', //2\r\n        'Quando tentou pegfar algo em uma prateleira alta com o braço afetado?', //3\r\n        'Quando tentou tocar a parte de trás do pescoço com o braço afetado?', //4\r\n        'Quando tentou empurrar algo com o braço afetado?', //5\r\n      ],\r\n      alternatives: [\r\n        { label: 'N/A', value: -1 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>0</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Sem dor\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 0,\r\n        },\r\n        { label: '1', value: 1 },\r\n        { label: '2', value: 2 },\r\n        { label: '3', value: 3 },\r\n        { label: '4', value: 4 },\r\n        { label: '5', value: 5 },\r\n        { label: '6', value: 6 },\r\n        { label: '7', value: 7 },\r\n        { label: '8', value: 8 },\r\n        { label: '9', value: 9 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>10</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Pior dor\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 10,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const getRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n    return questions.reduce((acc, q, i) => {\r\n      if (i < questionIndex) {\r\n        return acc + q.sections.length;\r\n      } else if (i === questionIndex) {\r\n        return acc + sectionIndex;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">\r\n            Índice de dor e incapacidade no ombro (SPADI)\r\n          </Typography>\r\n          <Typography variant=\"caption\" display=\"block\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            {questions.map((question, qIndex) => (\r\n              <Grid item xs={12} lg={6} key={`question${qIndex}`}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"subtitle1\" align=\"left\">\r\n                      {`${qIndex + 1}. ${question.title}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                  {question.sections.map((section, sIndex) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      key={`question${qIndex}-section${sIndex}`}\r\n                      className={classes.sectionElement}\r\n                    >\r\n                      <FormControl component=\"fieldset\" fullWidth>\r\n                        <FormLabel\r\n                          component=\"legend\"\r\n                          className={classes.formLabel}\r\n                        >\r\n                          {section}\r\n                        </FormLabel>\r\n                        <Slider\r\n                          defaultValue={answers[getRealIndex(qIndex, sIndex)]}\r\n                          classes={{\r\n                            root: classes.slider,\r\n                            markLabel: classes.sliderMakrLabel,\r\n                          }}\r\n                          step={1}\r\n                          valueLabelDisplay=\"auto\"\r\n                          marks={question.alternatives}\r\n                          min={-1}\r\n                          max={10}\r\n                          disabled\r\n                        />\r\n                      </FormControl>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} lg={3}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Resultado</Typography>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Escala de Incapacidade: ${disability}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Escala de Dor: ${pain}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\">\r\n                {`Escala total: ${total}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SPADIInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport {\r\n  setDateIntoSPADITable,\r\n  spadiColumns,\r\n} from '../../../utils/reportTable';\r\nimport { ReportPageProps, SPADIReportTableData } from '../../../interfaces';\r\nimport SPADIInnerReport from '../inner-report/SPADIInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction SPADIReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<SPADIReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDateIntoSPADITable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        {props.hideBreadcrumb ? (\r\n          <Grid item xs={12}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n                Resultados\r\n              </Link>\r\n              <Typography color=\"textPrimary\">\r\n                Índice de dor e incapacidade no ombro (SPADI)\r\n              </Typography>\r\n            </Breadcrumbs>\r\n          </Grid>\r\n        ) : null}\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={spadiColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <SPADIInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SPADIReport;\r\n","import { useEffect, useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { AxisOptions, Chart } from 'react-charts';\r\n\r\nimport {\r\n  PatientSF36Result,\r\n  PatientBasicResult,\r\n  PatientForm,\r\n} from '../../../models/PatientForm';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ntype Series = {\r\n  label: string;\r\n  data: PatientBasicResult[];\r\n};\r\n\r\nfunction SF36InnerReport({ data }: { data: PatientForm[] }) {\r\n  const classes = useStyles();\r\n\r\n  const chartData: Series[] = useMemo(\r\n    () =>\r\n      data?.reduce((acc: Series[], sf36) => {\r\n        if (sf36.status === 'PENDING') {\r\n          return acc;\r\n        }\r\n        return [\r\n          ...acc,\r\n          {\r\n            label: `Resultado do paciente em ${new Date(\r\n              sf36?.updated_at\r\n            ).toLocaleDateString('pt-BR')}`,\r\n            data: (sf36?.results as PatientSF36Result)?.raw_scale?.filter(\r\n              (result) => result.text !== 'Total'\r\n            ),\r\n          },\r\n        ];\r\n      }, []),\r\n    [data]\r\n  );\r\n  const primaryAxis = useMemo(\r\n    (): AxisOptions<PatientBasicResult> => ({\r\n      getValue: (datum) => datum.text,\r\n    }),\r\n    []\r\n  );\r\n  const secondaryAxes = useMemo(\r\n    (): AxisOptions<PatientBasicResult>[] => [\r\n      {\r\n        getValue: (datum) => datum.score,\r\n        elementType: 'line',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      const tickLabelsY = document.querySelectorAll(\r\n        'svg > .axes:first-child > g:nth-child(2) > .Axis-Group.inner:first-child .tickLabel'\r\n      );\r\n      const indexOfLabel50 = Array.from(tickLabelsY).reduce(\r\n        (acc, el, index) => (el.textContent === '50' ? index : acc),\r\n        0\r\n      );\r\n      if (indexOfLabel50) {\r\n        const lineOfLabel50 = document.querySelectorAll(\r\n          'svg > .axes:first-child > g:nth-child(2) > .Axis-Group.inner:first-child .Axis:first-child > .grid .tick line'\r\n        )[indexOfLabel50];\r\n        lineOfLabel50.setAttribute('stroke', 'yellow');\r\n      }\r\n    }, 1000);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Qualidade de vida (SF-36)</Typography>\r\n          <div style={{ height: '500px', paddingBottom: '10px' }}>\r\n            <Chart\r\n              options={{\r\n                data: chartData,\r\n                primaryAxis,\r\n                secondaryAxes,\r\n              }}\r\n            />\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SF36InnerReport;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { ReportPageProps } from '../../../interfaces';\r\nimport SF36InnerReport from '../inner-report/SF36InnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction SF36Report(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Breadcrumbs aria-label=\"breadcrumb\">\r\n            <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n              Resultados\r\n            </Link>\r\n            <Typography color=\"textPrimary\">\r\n              Qualidade de vida (SF-36)\r\n            </Typography>\r\n          </Breadcrumbs>\r\n        </Grid>\r\n      </Grid>\r\n      <SF36InnerReport data={props.data} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SF36Report;\r\n","import { useMemo } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { PatientBPIResult } from '../../../models/PatientForm';\r\nimport BodyMapBPI from '../../patient/BodyMapBPI';\r\nimport { InnerReportProps } from '../../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    slider: {\r\n      margin: '30px 0 30px 20px',\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nfunction BPIInnerReport({ selectedForm }: InnerReportProps) {\r\n  const classes = useStyles();\r\n\r\n  const gradesLabels = [\r\n    'Pior dor que sentiu nas últimas 24 horas:',\r\n    'Dor mais fraca das últimas 24 horas:',\r\n    'Média de dor do paciente:',\r\n    'Dor do momento:',\r\n  ];\r\n  const percentagesLabels = [\r\n    'Atividades em geral',\r\n    'Humor',\r\n    'Habilidade de caminhar',\r\n    'Trabalho',\r\n    'Relacionamento com outras pessoas',\r\n    'Habilidade para apreciar a vida',\r\n  ];\r\n\r\n  const { updated_at, body_pain, grades, treatments, slider, percentages } =\r\n    useMemo(() => {\r\n      const { answers, results, updated_at } = selectedForm;\r\n      const { booleans, body_pain, grades, treatments, slider, percentages } =\r\n        results as PatientBPIResult;\r\n      return {\r\n        answers,\r\n        updated_at,\r\n        booleans,\r\n        body_pain,\r\n        grades,\r\n        treatments,\r\n        slider,\r\n        percentages,\r\n      };\r\n    }, [selectedForm]);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} lg={9}>\r\n        <Paper classes={{ root: classes.paper }}>\r\n          <Typography variant=\"h6\">Breve Inventário de Dor (BPI)</Typography>\r\n          <Typography variant=\"caption\">\r\n            {`Preenchido em: ${new Date(updated_at).toLocaleDateString(\r\n              'pt-BR'\r\n            )}`}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} lg={6}>\r\n              <BodyMapBPI\r\n                disabledBodyMapClick={true}\r\n                preSelectedValues={body_pain?.reduce((acc, body) => {\r\n                  acc[body.area - 1] = body.pain_level;\r\n                  return acc;\r\n                }, new Array(53).fill(0))}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={11} lg={5}>\r\n              {grades?.map((grade, gradeIndex) => (\r\n                <div key={`grade-${gradeIndex}`}>\r\n                  <Typography variant=\"subtitle1\">\r\n                    {gradesLabels[gradeIndex]}\r\n                  </Typography>\r\n                  <Slider\r\n                    defaultValue={0}\r\n                    classes={{\r\n                      root: classes.slider,\r\n                    }}\r\n                    step={1}\r\n                    valueLabelDisplay=\"on\"\r\n                    marks={[\r\n                      { label: 'Sem dor', value: 0 },\r\n                      { label: 'Pior dor', value: 10 },\r\n                    ]}\r\n                    min={0}\r\n                    max={10}\r\n                    disabled={true}\r\n                    value={grade}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} lg={6}>\r\n              {treatments?.map((treatment, treatmentIndex) => (\r\n                <div key={`treatment=${treatmentIndex}`}>\r\n                  <Typography variant=\"subtitle1\">{`Tratamento ${\r\n                    treatmentIndex + 1\r\n                  }`}</Typography>\r\n                  <List>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary=\"Nome do tratamento\"\r\n                        secondary={treatment?.name}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary=\"Quando iniciou?\"\r\n                        secondary={treatment?.started_at}\r\n                      />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary=\"Qual a dose/frequência do tratamento?\"\r\n                        secondary={treatment?.frequency}\r\n                      />\r\n                    </ListItem>\r\n                  </List>\r\n                  <Divider className={classes.divider} variant=\"middle\" />\r\n                </div>\r\n              ))}\r\n            </Grid>\r\n            <Grid item xs={12} lg={6}>\r\n              <Typography variant=\"subtitle1\">\r\n                Como a dor interferiu nas últimas 24 horas em:\r\n              </Typography>\r\n              <List>\r\n                {percentages?.map((percentage, percentageIndex) => (\r\n                  <ListItem key={`percentage-${percentageIndex}`}>\r\n                    <ListItemText\r\n                      primary={percentagesLabels[percentageIndex]}\r\n                      secondary={percentage}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle1\" align=\"left\" paragraph>\r\n                {`Intensidade da melhora proporcionada pelos tratamentos ou medicações nas últimas 24 horas: ${slider}`}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default BPIInnerReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../../GenericTable';\r\nimport { PatientForm } from '../../../models/PatientForm';\r\nimport {\r\n  noResultColumns,\r\n  setDataIntoNoResultTable,\r\n} from '../../../utils/reportTable';\r\nimport { NoResultReportTableData, ReportPageProps } from '../../../interfaces';\r\nimport BPIInnerReport from '../inner-report/BPIInnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction BPIReport(props: ReportPageProps) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    props.data[props.data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<NoResultReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoNoResultTable(props.data, setSelectedForm));\r\n  }, [props.data, setSelectedForm]);\r\n\r\n  function handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    props.goToSummary();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Breadcrumbs aria-label=\"breadcrumb\">\r\n            <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\r\n              Resultados\r\n            </Link>\r\n            <Typography color=\"textPrimary\">\r\n              Breve Inventário de Dor (BPI)\r\n            </Typography>\r\n          </Breadcrumbs>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={noResultColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <BPIInnerReport selectedForm={selectedForm} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BPIReport;\r\n","import { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport GenericTable from '../GenericTable';\r\nimport { PatientForm } from '../../models/PatientForm';\r\nimport { NoResultReportTableData } from '../../interfaces';\r\nimport {\r\n  allResultsColumns,\r\n  setDataIntoAllResultTable,\r\n} from '../../utils/reportTable';\r\nimport EPCInnerReport from './inner-report/EPCInnerReport';\r\nimport DN4InnerReport from './inner-report/DN4InnerReport';\r\nimport HADInnerReport from './inner-report/HADInnerReport';\r\nimport OswestryInnerReport from './inner-report/OswestryInnerReport';\r\nimport FibromialgiaInnerReport from './inner-report/FibromialgiaInnerReport';\r\nimport IADInnerReport from './inner-report/IADInnerReport';\r\nimport SBSTInnerReport from './inner-report/SBSTInnerReport';\r\nimport PSEQInnerReport from './inner-report/PSEQInnerReport';\r\nimport WOMACInnerReport from './inner-report/WOMACInnerReport';\r\nimport SPADIInnerReport from './inner-report/SPADIInnerReport';\r\nimport BPIInnerReport from './inner-report/BPIInnerReport';\r\nimport SF36InnerReport from './inner-report/SF36InnerReport';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '32px',\r\n    },\r\n  })\r\n);\r\n\r\nfunction selectRenderByType(form: PatientForm) {\r\n  switch (form.type) {\r\n    case 'EPC':\r\n      return <EPCInnerReport selectedForm={form} />;\r\n    case 'DN4':\r\n      return <DN4InnerReport selectedForm={form} />;\r\n    case 'HAD':\r\n      return <HADInnerReport selectedForm={form} />;\r\n    case 'OSWESTRY':\r\n      return <OswestryInnerReport selectedForm={form} />;\r\n    case 'FIBROMIALGIA':\r\n      return <FibromialgiaInnerReport selectedForm={form} />;\r\n    case 'IAD':\r\n      return <IADInnerReport selectedForm={form} />;\r\n    case 'SBST':\r\n      return <SBSTInnerReport selectedForm={form} />;\r\n    case 'PSEQ':\r\n      return <PSEQInnerReport selectedForm={form} />;\r\n    case 'WOMAC':\r\n      return <WOMACInnerReport selectedForm={form} />;\r\n    case 'SPADI':\r\n      return <SPADIInnerReport selectedForm={form} />;\r\n    case 'BPI':\r\n      return <BPIInnerReport selectedForm={form} />;\r\n    case 'SF36':\r\n      return <SF36InnerReport data={[form]} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction AllReports({ data }: { data: PatientForm[] }) {\r\n  const classes = useStyles();\r\n  const [selectedForm, setSelectedForm] = useState<PatientForm>(\r\n    data[data.length - 1]\r\n  );\r\n  const [rows, setRows] = useState<NoResultReportTableData[]>([]);\r\n\r\n  useEffect(() => {\r\n    setRows(setDataIntoAllResultTable(data, setSelectedForm));\r\n  }, [data, setSelectedForm]);\r\n  return (\r\n    <>\r\n      <Grid container spacing={1} className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <GenericTable\r\n            columns={allResultsColumns}\r\n            rows={rows}\r\n            shouldHideCheckboxes\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {selectRenderByType(selectedForm)}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllReports;\r\n","import { useCallback, useRef, useState } from 'react';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { PatientForm } from '../../models/PatientForm';\r\nimport PatientSummary from './PatientSummary';\r\nimport { PatientReportPanelType } from '../../interfaces';\r\nimport EPCReport from './form-reports/EPCReport';\r\nimport DN4Report from './form-reports/DN4Report';\r\nimport HADReport from './form-reports/HADReport';\r\nimport OswestryReport from './form-reports/OswestryReport';\r\nimport FibromialgiaReport from './form-reports/FibromialgiaReport';\r\nimport IADReport from './form-reports/IADReport';\r\nimport SBSTReport from './form-reports/SBSTReport';\r\nimport PSEQReport from './form-reports/PSEQReport';\r\nimport WOMACReport from './form-reports/WOMACReport';\r\nimport SPADIReport from './form-reports/SPADIReport';\r\nimport SF36Report from './form-reports/SF36Report';\r\nimport BPIReport from './form-reports/BPIReport';\r\nimport AllReports from './AllReports';\r\nimport { OrangeButton } from '../Buttons';\r\n\r\ninterface PatientReportsProps {\r\n  questionaires: PatientForm[];\r\n  initialReportPanel?: PatientReportPanelType;\r\n}\r\n\r\nfunction PatientReports(props: PatientReportsProps) {\r\n  const componentRef = useRef(null);\r\n  const { initialReportPanel, questionaires } = props;\r\n  const [panel, setPanel] = useState<PatientReportPanelType>(\r\n    initialReportPanel ?? PatientReportPanelType.Summary\r\n  );\r\n\r\n  const reactToPrintContent = useCallback(() => {\r\n    return componentRef.current;\r\n  }, [componentRef]);\r\n\r\n  const handlePrint = useReactToPrint({\r\n    content: reactToPrintContent,\r\n    documentTitle: `impressao-busca-de-relatorio-${new Date().toLocaleString()}`,\r\n    removeAfterPrint: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <OrangeButton type=\"button\" onClick={handlePrint}>\r\n            Imprimir\r\n          </OrangeButton>\r\n        </Grid>\r\n      </Grid>\r\n      <div ref={componentRef}>\r\n        {panel === PatientReportPanelType.Summary && (\r\n          <PatientSummary {...props} setReportPanel={setPanel} />\r\n        )}\r\n        {panel === PatientReportPanelType.EPC && (\r\n          <EPCReport\r\n            data={questionaires?.filter((q) => q.type === 'EPC')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.DN4 && (\r\n          <DN4Report\r\n            data={questionaires?.filter((q) => q.type === 'DN4')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.HAD && (\r\n          <HADReport\r\n            data={questionaires?.filter((q) => q.type === 'HAD')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.OSWESTRY && (\r\n          <OswestryReport\r\n            data={questionaires?.filter((q) => q.type === 'OSWESTRY')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.FIBROMIALGIA && (\r\n          <FibromialgiaReport\r\n            data={questionaires?.filter((q) => q.type === 'FIBROMIALGIA')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.IAD && (\r\n          <IADReport\r\n            data={questionaires?.filter((q) => q.type === 'IAD')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.SBST && (\r\n          <SBSTReport\r\n            data={questionaires?.filter((q) => q.type === 'SBST')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.PSEQ && (\r\n          <PSEQReport\r\n            data={questionaires?.filter((q) => q.type === 'PSEQ')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.WOMAC && (\r\n          <WOMACReport\r\n            data={questionaires?.filter((q) => q.type === 'WOMAC')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.SPADI && (\r\n          <SPADIReport\r\n            data={questionaires?.filter((q) => q.type === 'SPADI')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.SF36 && (\r\n          <SF36Report\r\n            data={questionaires?.filter((q) => q.type === 'SF36')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.BPI && (\r\n          <BPIReport\r\n            data={questionaires?.filter((q) => q.type === 'BPI')}\r\n            goToSummary={() => setPanel(PatientReportPanelType.Summary)}\r\n            hideBreadcrumb={!initialReportPanel}\r\n          />\r\n        )}\r\n        {panel === PatientReportPanelType.All && (\r\n          <AllReports data={questionaires} />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PatientReports;\r\n","import { Dispatch } from 'react';\r\nimport { ReportsSearchPayload } from '../interfaces';\r\nimport { PatientForm } from '../models/PatientForm';\r\nimport { baseUrl, getAuth } from '../utils/loggedUser';\r\n\r\nexport enum IActions {\r\n  REPORTS_FETCHED,\r\n}\r\n\r\nexport interface IReportsDispatchProps {\r\n  type: IActions;\r\n  reports: PatientForm[];\r\n}\r\n\r\nexport function getReports(\r\n  patient_id: number,\r\n  start_date: string,\r\n  end_date: string,\r\n  type: string,\r\n  result: string,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IReportsDispatchProps>) => {\r\n    const url = new URL(`${baseUrl}/api/v1/reports`);\r\n    let urlParamObject: ReportsSearchPayload = {\r\n      patient_id: patient_id.toString(),\r\n      start_date,\r\n      end_date,\r\n      type,\r\n    };\r\n    if (type === 'HAD_DEPRESSION') {\r\n      urlParamObject = {\r\n        ...urlParamObject,\r\n        type: 'HAD',\r\n        had_depression: result,\r\n      };\r\n    } else if (type === 'HAD_ANXIETY') {\r\n      urlParamObject = { ...urlParamObject, type: 'HAD', had_anxiety: result };\r\n    } else {\r\n      urlParamObject = { ...urlParamObject, result };\r\n    }\r\n    url.search = new URLSearchParams({ ...urlParamObject }).toString();\r\n    const response = await fetch(url.toString(), {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setAlertMessage!(data.message);\r\n    } else {\r\n      dispatch({\r\n        type: IActions.REPORTS_FETCHED,\r\n        reports: data.forms,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function clearReports() {\r\n  return async (dispatch: Dispatch<IReportsDispatchProps>) => {\r\n    dispatch({ type: IActions.REPORTS_FETCHED, reports: [] });\r\n  };\r\n}\r\n","import { IActions, IReportsDispatchProps } from '../actions/report';\r\nimport { PatientForm } from '../models/PatientForm';\r\n\r\nexport default function questionaireReducer(\r\n  state: PatientForm[],\r\n  action: IReportsDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.REPORTS_FETCHED:\r\n      return action.reports;\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { PatientReportPanelType, QUESTIONAIRE_LIST } from '../../interfaces';\r\nimport { AlertContext } from '../../utils/alert';\r\nimport { OrangeButton, OutlinedButton } from '../Buttons';\r\nimport { Patient } from '../../models/Patient';\r\nimport PatientReports from './PatientReports';\r\nimport reportReducer from '../../reducers/report';\r\nimport { clearReports, getReports } from '../../actions/report';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    ownerHeaderSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    footerSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\nconst reportResultOptions = {\r\n  HAD_DEPRESSION: ['POSITIVO', 'NEGATIVO'],\r\n  HAD_ANXIETY: ['POSITIVO', 'NEGATIVO'],\r\n  DN4: ['DOR NOCICEPTIVA', 'DOR NEUROPATICA'],\r\n  EPC: ['POSITIVO', 'NEGATIVO'],\r\n  FIBROMIALGIA: ['POSITIVO', 'NEGATIVO'],\r\n  OSWESTRY: [\r\n    'INCAPACIDADE MINIMA',\r\n    'INCAPACIDADE MODERADA',\r\n    'INCAPACIDADE INTENSA',\r\n    'ALEIJADO',\r\n    'INVALIDO',\r\n  ],\r\n};\r\n\r\ninterface ReportsTableProps {\r\n  patients: Patient[];\r\n}\r\n\r\nexport default function ReportsTable(props: ReportsTableProps) {\r\n  const classes = useStyles();\r\n\r\n  const today = new Date();\r\n  const lastMonth = new Date();\r\n  lastMonth.setMonth(today.getMonth() - 1);\r\n\r\n  const [reports, reportsDispatch] = useReducer(reportReducer, []);\r\n  const [patientId, setPatientId] = useState<number>(0);\r\n  const [startDate, setStartDate] = useState<string>(\r\n    lastMonth.getFullYear() +\r\n      '-' +\r\n      (lastMonth.getMonth() + 1) +\r\n      '-' +\r\n      ('0' + lastMonth.getDate()).slice(-2)\r\n  );\r\n  const [endDate, setEndDate] = useState<string>(\r\n    today.getFullYear() +\r\n      '-' +\r\n      (today.getMonth() + 1) +\r\n      '-' +\r\n      ('0' + today.getDate()).slice(-2)\r\n  );\r\n  const [reportType, setReportType] = useState<string>('');\r\n  const [result, setResult] = useState<string>('');\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n\r\n  const { patients } = props;\r\n\r\n  const searchReports = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    clearReports()(reportsDispatch);\r\n    getReports(\r\n      patientId,\r\n      startDate,\r\n      endDate,\r\n      reportType,\r\n      result,\r\n      setAlertMessage\r\n    )(reportsDispatch);\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setPatientId(0);\r\n    setStartDate('');\r\n    setEndDate('');\r\n    setReportType('');\r\n    clearReports()(reportsDispatch);\r\n  };\r\n\r\n  const getRealReportType = (reporttype: string) => {\r\n    if (['HAD_DEPRESSION', 'HAD_ANXIETY'].includes(reporttype)) {\r\n      return 'HAD';\r\n    }\r\n    if (!reporttype) {\r\n      return 'All';\r\n    }\r\n    return reporttype;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setResult('');\r\n  }, [reportType]);\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <form onSubmit={searchReports}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            alignContent=\"flex-start\"\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              gutterBottom\r\n              className={classes.headerSection}\r\n            >\r\n              Relatórios\r\n            </Typography>\r\n          </Grid>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={3}>\r\n              <InputLabel htmlFor=\"birthdate-input\">Período</InputLabel>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"date\"\r\n                    id=\"start-date-input\"\r\n                    value={startDate}\r\n                    onChange={(e) => setStartDate(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"date\"\r\n                    id=\"end-date-input\"\r\n                    value={endDate}\r\n                    onChange={(e) => setEndDate(e.target.value)}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <InputLabel htmlFor=\"form-select\">Questionário</InputLabel>\r\n              <Select\r\n                native\r\n                id=\"form-select\"\r\n                value={reportType}\r\n                onChange={(e) => setReportType(e.target.value as string)}\r\n              >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                <option value=\"HAD_DEPRESSION\">Depressão(HAD)</option>\r\n                <option value=\"HAD_ANXIETY\">Ansiedade(HAD)</option>\r\n                {QUESTIONAIRE_LIST.map((form) => (\r\n                  <option key={form.value} value={form.value}>\r\n                    {form.label}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <InputLabel htmlFor=\"patient-id-input\">Paciente</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                native\r\n                id=\"physician-id-input\"\r\n                value={patientId}\r\n                onChange={(e) => setPatientId(Number(e.target.value))}\r\n              >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                {patients?.length &&\r\n                  patients.map((patient) => (\r\n                    <option key={patient.id} value={patient.id}>\r\n                      {patient.name}\r\n                    </option>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <InputLabel htmlFor=\"result-input\">Resultado</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                native\r\n                id=\"result-input\"\r\n                value={result}\r\n                disabled={!reportResultOptions.hasOwnProperty(reportType)}\r\n                onChange={(e) => setResult(String(e?.target?.value))}\r\n              >\r\n                <option aria-label=\"Todos\" value=\"\" />\r\n                {reportType in reportResultOptions &&\r\n                  reportResultOptions[\r\n                    reportType as keyof typeof reportResultOptions\r\n                  ].map((resultOption) => (\r\n                    <option key={resultOption} value={resultOption}>\r\n                      {resultOption}\r\n                    </option>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n            className={classes.footerSection}\r\n          >\r\n            <OutlinedButton variant=\"outlined\" onClick={() => clearSearch()}>\r\n              Limpar\r\n            </OutlinedButton>\r\n            <OrangeButton type=\"submit\">Filtrar</OrangeButton>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n      {reports?.length ? (\r\n        <PatientReports\r\n          questionaires={reports}\r\n          initialReportPanel={\r\n            PatientReportPanelType[\r\n              getRealReportType(\r\n                reportType\r\n              ) as keyof typeof PatientReportPanelType\r\n            ]\r\n          }\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import { useContext, useEffect, useReducer, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LeftNav from '../LeftNav';\r\nimport PatientsTable from '../common/PatientsTable';\r\nimport {\r\n  AllPanelTypes,\r\n  PatientPayload,\r\n  PhysicianPanelType,\r\n} from '../../interfaces';\r\nimport { Patient } from '../../models/Patient';\r\nimport patientReducer from '../../reducers/patient';\r\nimport questionaireReducer from '../../reducers/questionaire';\r\nimport {\r\n  createPatient,\r\n  deletePatient,\r\n  getPatients,\r\n  updatePatient,\r\n} from '../../actions/patient';\r\nimport PatientForm from '../common/PatientForm';\r\nimport {\r\n  clearQuestionaires,\r\n  getQuestionaires,\r\n  sendQuestionaires,\r\n} from '../../actions/questionaire';\r\nimport { AlertContext } from '../../utils/alert';\r\nimport PatientReports from '../common/PatientReports';\r\nimport ReportsTable from '../common/ReportsTable';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appRoot: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nfunction PhysicianPage() {\r\n  const classes = useStyles();\r\n  const [panel, setPanel] = useState<PhysicianPanelType>(\r\n    PhysicianPanelType.PatientsTable\r\n  );\r\n  const [currentPatient, setCurrentPatient] = useState<Patient>();\r\n\r\n  const [patients, dispatch] = useReducer(patientReducer, []);\r\n  const [questionaires, questionairesDispatch] = useReducer(\r\n    questionaireReducer,\r\n    []\r\n  );\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    getPatients(setAlertMessage)(dispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  const setPatient = async (\r\n    id: number | undefined,\r\n    patientPayload: PatientPayload,\r\n    questionairePayload: string[]\r\n  ) => {\r\n    let newPatient;\r\n    if (id) {\r\n      delete patientPayload.email;\r\n      await updatePatient(id, patientPayload, setAlertMessage)(dispatch);\r\n    } else {\r\n      newPatient = await createPatient(\r\n        patientPayload,\r\n        setAlertMessage\r\n      )(dispatch);\r\n    }\r\n    if (newPatient) {\r\n      await sendQuestionaires(\r\n        id ?? newPatient.id,\r\n        questionairePayload,\r\n        setAlertMessage\r\n      )(questionairesDispatch);\r\n      setPanel(PhysicianPanelType.PatientsTable);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.appRoot]: true,\r\n      })}\r\n    >\r\n      <CssBaseline />\r\n      <LeftNav\r\n        role=\"physician\"\r\n        currentPanel={panel}\r\n        setPanel={(panel: AllPanelTypes) =>\r\n          setPanel(panel as PhysicianPanelType)\r\n        }\r\n      />\r\n      <main className={classes.content}>\r\n        {panel === PhysicianPanelType.PatientsTable && (\r\n          <PatientsTable\r\n            patients={patients}\r\n            deletePatient={(patient: Patient) =>\r\n              deletePatient(patient, setAlertMessage)(dispatch)\r\n            }\r\n            openPatientForm={async (patient?: Patient) => {\r\n              setCurrentPatient(patient);\r\n              patient\r\n                ? await getQuestionaires(\r\n                    patient.id,\r\n                    setAlertMessage\r\n                  )(questionairesDispatch)\r\n                : clearQuestionaires()(questionairesDispatch);\r\n              setPanel(PhysicianPanelType.PatientForm);\r\n            }}\r\n          />\r\n        )}\r\n        {panel === PhysicianPanelType.PatientForm && (\r\n          <>\r\n            <PatientForm\r\n              currentPatient={currentPatient}\r\n              setPatient={setPatient}\r\n              questionaires={questionaires}\r\n              openPatientsTablePage={() =>\r\n                setPanel(PhysicianPanelType.PatientsTable)\r\n              }\r\n            />\r\n            <PatientReports\r\n              questionaires={questionaires?.filter((q) => q.status === 'DONE')}\r\n            />\r\n          </>\r\n        )}\r\n        {panel === PhysicianPanelType.ReportsTable && (\r\n          <>\r\n            <ReportsTable patients={patients} />\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhysicianPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ClinicTableColumn, ClinicTableData } from '../../interfaces';\r\nimport { Clinic } from '../../models/Clinic';\r\nimport GenericTable from '../GenericTable';\r\nimport { OrangeButton } from '../Buttons';\r\n\r\n// TODO: Need to double check if these values below are valid in the back-end\r\nenum ClinicStatus {\r\n  ACTIVE = 'Ativo',\r\n  INACTIVE = 'Inativo',\r\n}\r\n\r\nconst columns: ClinicTableColumn[] = [\r\n  // { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'Nome', minWidth: 100 },\r\n  { id: 'address_zipcode', label: 'CEP', minWidth: 100 },\r\n  { id: 'address_street', label: 'Endereço', minWidth: 100 },\r\n  { id: 'address_city', label: 'Cidade', minWidth: 100 },\r\n  { id: 'address_state', label: 'Estado', minWidth: 100 },\r\n  { id: 'phone', label: 'Telefone', minWidth: 100 },\r\n  { id: 'status', label: 'Status', minWidth: 100 },\r\n  { id: 'details', label: 'Detalhes', minWidth: 100 },\r\n];\r\n\r\nfunction setClinicsIntoTable(\r\n  clinics: Clinic[],\r\n  deleteClinic: (clinic: Clinic) => Promise<void>,\r\n  openClinicForm: (clinic?: Clinic) => void\r\n) {\r\n  return clinics.map((clinic: ClinicTableData) => {\r\n    const handleClinicDetails = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      openClinicForm(clinic);\r\n    };\r\n    const handleDeleteClinic = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      deleteClinic(clinic);\r\n    };\r\n\r\n    clinic.status = (ClinicStatus as any)[clinic.status];\r\n    clinic.details = (\r\n      <>\r\n        <IconButton onClick={handleClinicDetails}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDeleteClinic}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n    return clinic;\r\n  });\r\n}\r\n\r\ninterface ClinicsTableProps {\r\n  clinics: Clinic[];\r\n  deleteClinic: (clinic: Clinic) => Promise<void>;\r\n  openClinicForm: (clinic?: Clinic) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ClinicsTable(props: ClinicsTableProps) {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState<ClinicTableData[]>([]);\r\n\r\n  const { clinics, deleteClinic, openClinicForm } = props;\r\n\r\n  useEffect(() => {\r\n    setRows(setClinicsIntoTable(clinics, deleteClinic, openClinicForm));\r\n  }, [clinics, deleteClinic, openClinicForm]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      spacing={1}\r\n      alignItems=\"flex-end\"\r\n      justifyContent=\"flex-end\"\r\n    >\r\n      <OrangeButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => props.openClinicForm()}\r\n      >\r\n        Cadastrar nova clínica\r\n      </OrangeButton>\r\n      <GenericTable columns={columns} rows={rows} />\r\n    </Grid>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { UserAuth } from '../models/UserAuth';\r\n\r\nexport default function useAuth(): [\r\n  token: UserAuth,\r\n  saveToken: (userToken?: UserAuth) => void\r\n] {\r\n  const getAuth = () => {\r\n    const tokenString = localStorage.getItem('auth') || '{}';\r\n    const userToken: UserAuth = JSON.parse(tokenString);\r\n    return userToken;\r\n  };\r\n\r\n  const [auth, setAuth] = useState(getAuth());\r\n\r\n  const saveAuth = (userAuth?: UserAuth) => {\r\n    if (userAuth) {\r\n      localStorage.setItem('auth', JSON.stringify(userAuth));\r\n      setAuth(userAuth);\r\n    } else {\r\n      localStorage.removeItem('auth');\r\n    }\r\n  };\r\n\r\n  return [auth, saveAuth];\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport { OrangeButton, OutlinedButton } from '../Buttons';\r\nimport { Clinic } from '../../models/Clinic';\r\nimport { ClinicPayload } from '../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    ownerHeaderSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    footerSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\ninterface ClinicFormProps {\r\n  currentClinic?: Clinic;\r\n  openClinicsTablePage: () => void;\r\n  setClinic: (id: number | undefined, payload: ClinicPayload) => Promise<void>;\r\n}\r\n\r\nexport default function ClinicForm(props: ClinicFormProps) {\r\n  const { currentClinic, setClinic } = props;\r\n  const [clinicName, setClinicName] = useState<string>(\r\n    currentClinic?.name || ''\r\n  );\r\n  const [taxId, setTaxId] = useState<string>(currentClinic?.tax_id || '');\r\n  const [zipcode, setZipcode] = useState<string>(\r\n    currentClinic?.address_zipcode?.toString() || ''\r\n  );\r\n  const [streetAddress, setStreetAddress] = useState<string>(\r\n    currentClinic?.address_street || ''\r\n  );\r\n  const [city, setCity] = useState<string>(currentClinic?.address_city || '');\r\n  const [stateAddress, setStateAddress] = useState<string>(\r\n    currentClinic?.address_state || ''\r\n  );\r\n  const [phone, setPhone] = useState<string>(currentClinic?.phone || '');\r\n  // TODO: Need to get owner's data. Get clinic is not returning them\r\n  const [ownerName, setOwnerName] = useState<string>(\r\n    currentClinic?.owner?.name || ''\r\n  );\r\n  const [ownerEmail, setOwnerEmail] = useState<string>(\r\n    currentClinic?.owner?.email || ''\r\n  );\r\n  const [ownerPassword, setOwnerPassword] = useState<string>('');\r\n  const classes = useStyles();\r\n\r\n  const handleSetClinic = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      name: clinicName,\r\n      tax_id: taxId,\r\n      address_zipcode: zipcode,\r\n      address_street: streetAddress,\r\n      address_city: city,\r\n      address_state: stateAddress,\r\n      phone,\r\n      user: {\r\n        name: ownerName,\r\n        email: ownerEmail,\r\n        password: ownerPassword,\r\n      },\r\n    };\r\n    setClinic(currentClinic?.id, payload);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form onSubmit={handleSetClinic}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            className={classes.headerSection}\r\n          >\r\n            Dados da clínica\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"clinic-name-input\"\r\n              label=\"Nome da clínica\"\r\n              defaultValue={clinicName}\r\n              onChange={(e) => setClinicName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"tax-id-input\"\r\n              label=\"CNPJ/CPF\"\r\n              defaultValue={taxId}\r\n              onChange={(e) => setTaxId(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"zipcode-input\"\r\n              label=\"CEP\"\r\n              defaultValue={zipcode}\r\n              onChange={(e) => setZipcode(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"street-address-input\"\r\n              label=\"Logradouro\"\r\n              defaultValue={streetAddress}\r\n              onChange={(e) => setStreetAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"city-input\"\r\n              label=\"Cidade\"\r\n              defaultValue={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"state-address-input\"\r\n              label=\"Estado\"\r\n              defaultValue={stateAddress}\r\n              onChange={(e) => setStateAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"phone-input\"\r\n              label=\"Telefone\"\r\n              defaultValue={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            className={clsx(classes.headerSection, classes.ownerHeaderSection)}\r\n          >\r\n            Dados da proprietário\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"owner-name-input\"\r\n              label=\"Nome do proprietário\"\r\n              defaultValue={ownerName}\r\n              onChange={(e) => setOwnerName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"owner-email-input\"\r\n              label=\"Email do proprietário\"\r\n              defaultValue={ownerEmail}\r\n              disabled={!!currentClinic?.owner?.email}\r\n              onChange={(e) => setOwnerEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              type=\"password\"\r\n              id=\"owner-password-input\"\r\n              label=\"Senha do proprietário\"\r\n              defaultValue={ownerPassword}\r\n              onChange={(e) => setOwnerPassword(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          className={classes.footerSection}\r\n        >\r\n          <OutlinedButton\r\n            variant=\"outlined\"\r\n            onClick={props.openClinicsTablePage}\r\n          >\r\n            Cancelar\r\n          </OutlinedButton>\r\n          <OrangeButton type=\"submit\">Salvar</OrangeButton>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Dispatch } from 'react';\r\nimport { baseUrl, getAuth } from '../utils/loggedUser';\r\n\r\nexport enum IActions {\r\n  TERMS_FETCHED,\r\n  TERMS_UPDATED,\r\n}\r\n\r\nexport interface ITermsDispatchProps {\r\n  type: IActions;\r\n  terms: string;\r\n}\r\n\r\nexport function getTermsOfUse(setAlertMessage: (message: string) => void) {\r\n  return async (dispatch: Dispatch<ITermsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/terms`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.TERMS_FETCHED, terms: data.term });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function setTermsOfUse(\r\n  text: string,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<ITermsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/terms/1`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ text }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.TERMS_UPDATED, terms: text });\r\n    } else {\r\n      const error = await response.json();\r\n      setAlertMessage!(error.message);\r\n    }\r\n  };\r\n}\r\n","import { IActions, ITermsDispatchProps } from '../actions/term';\r\n\r\nexport default function termsReducer(\r\n  state: string,\r\n  action: ITermsDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.TERMS_FETCHED:\r\n      return action.terms;\r\n    case IActions.TERMS_UPDATED:\r\n      return action.terms;\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useReducer } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport { OrangeButton } from '../Buttons';\r\nimport termsReducer from '../../reducers/term';\r\nimport { getTermsOfUse, setTermsOfUse } from '../../actions/term';\r\nimport { AlertContext } from '../../utils/alert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    textarea: {\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Settings() {\r\n  const classes = useStyles();\r\n  const [tou, dispatch] = useReducer(termsReducer, '');\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    getTermsOfUse(setAlertMessage)(dispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  const handleSetTerms = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setTermsOfUse(\r\n      ((e.target as HTMLFormElement)[0] as HTMLTextAreaElement).value,\r\n      setAlertMessage\r\n    )(dispatch);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid\r\n        container\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        alignContent=\"flex-start\"\r\n      >\r\n        <Typography variant=\"h6\" gutterBottom className={classes.headerSection}>\r\n          Termos de uso\r\n        </Typography>\r\n      </Grid>\r\n      <form onSubmit={handleSetTerms}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"flex-end\"\r\n          alignItems=\"flex-end\"\r\n          alignContent=\"flex-end\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <TextareaAutosize\r\n              minRows={10}\r\n              placeholder=\"Digite os termos de uso aqui...\"\r\n              defaultValue={tou}\r\n              className={classes.textarea}\r\n            />\r\n          </Grid>\r\n          <OrangeButton type=\"submit\">Salvar</OrangeButton>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Dispatch } from 'react';\r\nimport { ClinicPayload } from '../interfaces';\r\nimport { Clinic } from '../models/Clinic';\r\nimport { baseUrl, getAuth } from '../utils/loggedUser';\r\n\r\nexport enum IActions {\r\n  CLINICS_FETCHED,\r\n  // CLINIC_FETCHED,\r\n  CLINIC_CREATED,\r\n  CLINIC_DELETED,\r\n  CLINIC_UPDATED,\r\n}\r\n\r\nexport interface IClinicsDispatchProps {\r\n  type: IActions;\r\n  clinics: Clinic[];\r\n}\r\n\r\nexport function getClinics(setAlertMessage: (message: string) => void) {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.CLINICS_FETCHED, clinics: data.clinics });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n\r\n// export async function getClinic(id: number) {\r\n//   return fetch(`${baseUrl}/api/v1/clinics/${id}`, {\r\n//     method: 'GET',\r\n//     headers: {\r\n//       Authorization: `Bearer ${getAuth().token}`,\r\n//     },\r\n//   }).then((data) => data.json());\r\n// }\r\n\r\nexport function deleteClinic(\r\n  clinic: Clinic,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics/${clinic.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.CLINIC_DELETED, clinics: [clinic] });\r\n    } else {\r\n      const error = await response.json();\r\n      setAlertMessage!(error.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function createClinic(\r\n  clinic: ClinicPayload,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(clinic),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.CLINIC_CREATED, clinics: [data.clinic] });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n\r\nexport function updateClinic(\r\n  id: number,\r\n  clinic: ClinicPayload,\r\n  setAlertMessage: (message: string) => void\r\n) {\r\n  return async (dispatch: Dispatch<IClinicsDispatchProps>) => {\r\n    const response = await fetch(`${baseUrl}/api/v1/clinics/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${getAuth().token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(clinic),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      dispatch({ type: IActions.CLINIC_UPDATED, clinics: [data.clinic] });\r\n    } else {\r\n      setAlertMessage!(data.message);\r\n    }\r\n  };\r\n}\r\n","import { IActions, IClinicsDispatchProps } from '../actions/clinic';\r\nimport { Clinic } from '../models/Clinic';\r\n\r\nexport default function clinicReducer(\r\n  state: Clinic[],\r\n  action: IClinicsDispatchProps\r\n) {\r\n  const { type } = action;\r\n  switch (type) {\r\n    case IActions.CLINICS_FETCHED:\r\n      return action.clinics;\r\n    case IActions.CLINIC_CREATED:\r\n      return [...state, ...action.clinics];\r\n    case IActions.CLINIC_DELETED:\r\n      return state.filter(\r\n        (clinic: Clinic) => clinic.id !== action.clinics[0].id\r\n      );\r\n    case IActions.CLINIC_UPDATED:\r\n      return state.map((clinic: Clinic) => {\r\n        if (clinic.id === action.clinics[0].id) {\r\n          return action.clinics[0];\r\n        }\r\n        return clinic;\r\n      });\r\n  }\r\n}\r\n","import { useContext, useEffect, useReducer, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LeftNav from '../LeftNav';\r\nimport ClinicsTable from './ClinicsTable';\r\nimport ClinicForm from './ClinicForm';\r\nimport { AdminPanelType, AllPanelTypes, ClinicPayload } from '../../interfaces';\r\nimport { Clinic } from '../../models/Clinic';\r\nimport Settings from './Settings';\r\nimport clinicReducer from '../../reducers/clinic';\r\nimport {\r\n  createClinic,\r\n  deleteClinic,\r\n  getClinics,\r\n  updateClinic,\r\n} from '../../actions/clinic';\r\nimport { AlertContext } from '../../utils/alert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appRoot: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nfunction AdminPage() {\r\n  const classes = useStyles();\r\n  const [panel, setPanel] = useState<AdminPanelType>(\r\n    AdminPanelType.ClinicsTable\r\n  );\r\n  const [currentClinic, setCurrentClinic] = useState<Clinic>();\r\n  const [clinics, dispatch] = useReducer(clinicReducer, []);\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n\r\n  const setClinic = async (id: number | undefined, payload: ClinicPayload) => {\r\n    if (id) {\r\n      await updateClinic(id, payload, setAlertMessage)(dispatch);\r\n    } else {\r\n      await createClinic(payload, setAlertMessage)(dispatch);\r\n    }\r\n    setPanel(AdminPanelType.ClinicsTable);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getClinics(setAlertMessage)(dispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.appRoot]: true,\r\n      })}\r\n    >\r\n      <CssBaseline />\r\n      <LeftNav\r\n        role=\"admin\"\r\n        currentPanel={panel}\r\n        openClinicsTablePage={() => setPanel(AdminPanelType.ClinicsTable)}\r\n        openTermsOfUsePage={() => setPanel(AdminPanelType.Settings)}\r\n        setPanel={(panel: AllPanelTypes) => setPanel(panel as AdminPanelType)}\r\n      />\r\n      <main className={classes.content}>\r\n        {panel === AdminPanelType.ClinicsTable && (\r\n          <ClinicsTable\r\n            clinics={clinics}\r\n            deleteClinic={(clinic: Clinic) =>\r\n              deleteClinic(clinic, setAlertMessage)(dispatch)\r\n            }\r\n            openClinicForm={(clinic?: Clinic) => {\r\n              setCurrentClinic(clinic);\r\n              setPanel(AdminPanelType.ClinicForm);\r\n            }}\r\n          />\r\n        )}\r\n        {panel === AdminPanelType.ClinicForm && (\r\n          <ClinicForm\r\n            currentClinic={currentClinic}\r\n            openClinicsTablePage={() => setPanel(AdminPanelType.ClinicsTable)}\r\n            setClinic={setClinic}\r\n          />\r\n        )}\r\n        {panel === AdminPanelType.Settings && <Settings />}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { UserTableColumn, UserTableData } from '../../interfaces';\r\nimport GenericTable from '../GenericTable';\r\nimport { OrangeButton } from '../Buttons';\r\nimport { User } from '../../models/User';\r\n\r\nconst columns: UserTableColumn[] = [\r\n  // { id: 'id', label: 'ID' },\r\n  { id: 'name', label: 'Nome', minWidth: 100 },\r\n  { id: 'tax_id', label: 'CPF/CNPJ', minWidth: 50 },\r\n  { id: 'email', label: 'E-mail', minWidth: 100 },\r\n  { id: 'address_zipcode', label: 'CEP', minWidth: 50 },\r\n  { id: 'address_street', label: 'Endereço', minWidth: 100 },\r\n  { id: 'address_city', label: 'Cidade', minWidth: 50 },\r\n  { id: 'address_state', label: 'Estado', minWidth: 10 },\r\n  { id: 'crm', label: 'Conselho Regional', minWidth: 50 },\r\n  { id: 'phone', label: 'Telefone', minWidth: 50 },\r\n  { id: 'details', label: 'Detalhes', minWidth: 50 },\r\n];\r\n\r\nfunction setUsersIntoTable(\r\n  users: User[],\r\n  deleteUser: (user: User) => Promise<void>,\r\n  openUserForm: (user?: User) => void\r\n) {\r\n  return users.map((user: UserTableData) => {\r\n    const handleUserDetails = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      openUserForm(user);\r\n    };\r\n    const handleDeleteUser = async (e: React.SyntheticEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      deleteUser(user);\r\n    };\r\n\r\n    user.details = (\r\n      <>\r\n        <IconButton onClick={handleUserDetails}>\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n        <IconButton onClick={handleDeleteUser}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n    return user;\r\n  });\r\n}\r\n\r\ninterface UsersTableProps {\r\n  users: User[];\r\n  deleteUser: (user: User) => Promise<void>;\r\n  openUserForm: (user?: User) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\nexport default function UsersTable(props: UsersTableProps) {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState<UserTableData[]>([]);\r\n\r\n  const { deleteUser, openUserForm, users } = props;\r\n\r\n  useEffect(() => {\r\n    setRows(setUsersIntoTable(users, deleteUser, openUserForm));\r\n  }, [users, deleteUser, openUserForm]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      spacing={1}\r\n      alignItems=\"flex-end\"\r\n      justifyContent=\"flex-end\"\r\n    >\r\n      <OrangeButton\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => props.openUserForm()}\r\n      >\r\n        Cadastrar novo Usuário\r\n      </OrangeButton>\r\n      <GenericTable columns={columns} rows={rows} />\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport { OrangeButton, OutlinedButton } from '../Buttons';\r\nimport { User } from '../../models/User';\r\nimport { UserPayload } from '../../interfaces';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: '64px',\r\n      width: '100%',\r\n      padding: theme.spacing(4),\r\n    },\r\n    headerSection: {\r\n      color: deepOrange[500],\r\n    },\r\n    ownerHeaderSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    footerSection: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\ninterface UserFormProps {\r\n  currentUser?: User;\r\n  openUsersTablePage: () => void;\r\n  setUser: (id: number | undefined, payload: UserPayload) => Promise<void>;\r\n}\r\n\r\nconst roleOptions = [\r\n  { value: 'MANAGER', label: 'Gerente' },\r\n  { value: 'PHYSICIAN', label: 'Médico' },\r\n  { value: 'RECEPTIONIST', label: 'Recepcionista' },\r\n];\r\n\r\nexport default function UserForm(props: UserFormProps) {\r\n  const { currentUser, setUser } = props;\r\n  const [userName, setUserName] = useState<string>(currentUser?.name || '');\r\n  const [taxId, setTaxId] = useState<string>(currentUser?.tax_id || '');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [email, setEmail] = useState<string>(currentUser?.email || '');\r\n\r\n  const [zipcode, setZipcode] = useState<string>(\r\n    currentUser?.address_zipcode?.toString() || ''\r\n  );\r\n  const [streetAddress, setStreetAddress] = useState<string>(\r\n    currentUser?.address_street || ''\r\n  );\r\n  const [city, setCity] = useState<string>(currentUser?.address_city || '');\r\n  const [stateAddress, setStateAddress] = useState<string>(\r\n    currentUser?.address_state || ''\r\n  );\r\n  const [phone, setPhone] = useState<string>(currentUser?.phone || '');\r\n  const [crm, setCrm] = useState<string>(currentUser?.crm || '');\r\n  const currentRole =\r\n    currentUser?.roles &&\r\n    (Array.isArray(currentUser.roles)\r\n      ? currentUser.roles[0]\r\n      : currentUser.roles);\r\n  const [role, setRole] = useState<string>(currentRole || roleOptions[0].value);\r\n  const classes = useStyles();\r\n\r\n  const handleSetUser = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const pseudoPayload = {\r\n      name: userName,\r\n      tax_id: taxId,\r\n      address_zipcode: zipcode,\r\n      address_street: streetAddress,\r\n      address_city: city,\r\n      address_state: stateAddress,\r\n      phone,\r\n      crm,\r\n      role,\r\n    };\r\n    const payload = !!password ? { ...pseudoPayload, password } : pseudoPayload;\r\n    setUser(\r\n      currentUser?.id,\r\n      currentUser?.id ? payload : { ...payload, email: email }\r\n    );\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form onSubmit={handleSetUser}>\r\n        <Grid\r\n          container\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            gutterBottom\r\n            className={classes.headerSection}\r\n          >\r\n            Dados do Usuário\r\n          </Typography>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"user-name-input\"\r\n              label=\"Nome do usuário\"\r\n              defaultValue={userName}\r\n              onChange={(e) => setUserName(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"tax-id-input\"\r\n              label=\"CNPJ/CPF\"\r\n              defaultValue={taxId}\r\n              onChange={(e) => setTaxId(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"crm-input\"\r\n              label=\"Conselho Regional\"\r\n              defaultValue={crm}\r\n              onChange={(e) => setCrm(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"email-input\"\r\n              label=\"E-mail\"\r\n              defaultValue={email}\r\n              disabled={!!currentUser?.email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"password-input\"\r\n              label=\"Senha\"\r\n              defaultValue={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <FormControl>\r\n              <InputLabel htmlFor=\"role-select\">Perfil</InputLabel>\r\n              <Select\r\n                native\r\n                id=\"role-select\"\r\n                value={role}\r\n                onChange={(e) => setRole(e.target.value as string)}\r\n              >\r\n                {roleOptions.map((roleOption) => (\r\n                  <option key={roleOption.value} value={roleOption.value}>\r\n                    {roleOption.label}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"zipcode-input\"\r\n              label=\"CEP\"\r\n              defaultValue={zipcode}\r\n              onChange={(e) => setZipcode(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"street-address-input\"\r\n              label=\"Logradouro\"\r\n              defaultValue={streetAddress}\r\n              onChange={(e) => setStreetAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"city-input\"\r\n              label=\"Cidade\"\r\n              defaultValue={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"state-address-input\"\r\n              label=\"Estado\"\r\n              defaultValue={stateAddress}\r\n              onChange={(e) => setStateAddress(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <TextField\r\n              fullWidth\r\n              id=\"phone-input\"\r\n              label=\"Telefone\"\r\n              defaultValue={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n          className={classes.footerSection}\r\n        >\r\n          <OutlinedButton variant=\"outlined\" onClick={props.openUsersTablePage}>\r\n            Cancelar\r\n          </OutlinedButton>\r\n          <OrangeButton type=\"submit\">Salvar</OrangeButton>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useContext, useEffect, useReducer, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LeftNav from '../LeftNav';\r\nimport {\r\n  AllPanelTypes,\r\n  ManagerPanelType,\r\n  PatientPayload,\r\n  UserPayload,\r\n} from '../../interfaces';\r\nimport UsersTable from './UsersTable';\r\nimport userReducer from '../../reducers/user';\r\nimport {\r\n  getUsers,\r\n  deleteUser,\r\n  updateUser,\r\n  createUser,\r\n} from '../../actions/user';\r\nimport { User } from '../../models/User';\r\nimport UserForm from './UserForm';\r\nimport patientReducer from '../../reducers/patient';\r\nimport questionaireReducer from '../../reducers/questionaire';\r\nimport { Patient } from '../../models/Patient';\r\nimport {\r\n  createPatient,\r\n  deletePatient,\r\n  getPatients,\r\n  updatePatient,\r\n} from '../../actions/patient';\r\nimport {\r\n  clearQuestionaires,\r\n  getQuestionaires,\r\n  sendQuestionaires,\r\n} from '../../actions/questionaire';\r\nimport PatientsTable from '../common/PatientsTable';\r\nimport PatientForm from '../common/PatientForm';\r\nimport { AlertContext } from '../../utils/alert';\r\nimport PatientReports from '../common/PatientReports';\r\nimport ReportsTable from '../common/ReportsTable';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appRoot: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nexport default function ManagerPage() {\r\n  const classes = useStyles();\r\n  const [panel, setPanel] = useState<ManagerPanelType>(\r\n    ManagerPanelType.UsersTable\r\n  );\r\n  const [currentUser, setCurrentUser] = useState<User>();\r\n  const [users, usersDispatch] = useReducer(userReducer, []);\r\n  const [currentPatient, setCurrentPatient] = useState<Patient>();\r\n\r\n  const [patients, patientDispatch] = useReducer(patientReducer, []);\r\n  const [questionaires, questionairesDispatch] = useReducer(\r\n    questionaireReducer,\r\n    []\r\n  );\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    getUsers(setAlertMessage)(usersDispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  useEffect(() => {\r\n    getPatients(setAlertMessage)(patientDispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  const setUser = async (id: number | undefined, payload: UserPayload) => {\r\n    if (id) {\r\n      await updateUser(id, payload, setAlertMessage)(usersDispatch);\r\n    } else {\r\n      await createUser(payload, setAlertMessage)(usersDispatch);\r\n    }\r\n    setPanel(ManagerPanelType.UsersTable);\r\n  };\r\n\r\n  const setPatient = async (\r\n    id: number | undefined,\r\n    patientPayload: PatientPayload,\r\n    questionairePayload: string[]\r\n  ) => {\r\n    let newPatient;\r\n    if (id) {\r\n      delete patientPayload.email;\r\n      await updatePatient(id, patientPayload, setAlertMessage)(patientDispatch);\r\n    } else {\r\n      newPatient = await createPatient(\r\n        patientPayload,\r\n        setAlertMessage\r\n      )(patientDispatch);\r\n    }\r\n    if (id || newPatient.id) {\r\n      await sendQuestionaires(\r\n        id ?? newPatient.id,\r\n        questionairePayload,\r\n        setAlertMessage\r\n      )(questionairesDispatch);\r\n      setPanel(ManagerPanelType.PatientsTable);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.appRoot]: true,\r\n      })}\r\n    >\r\n      <CssBaseline />\r\n      <LeftNav\r\n        role=\"manager\"\r\n        currentPanel={panel}\r\n        setPanel={(panel: AllPanelTypes) => setPanel(panel as ManagerPanelType)}\r\n      />\r\n      <main className={classes.content}>\r\n        {panel === ManagerPanelType.UsersTable && (\r\n          <UsersTable\r\n            users={users}\r\n            deleteUser={(user: User) =>\r\n              deleteUser(user, setAlertMessage)(usersDispatch)\r\n            }\r\n            openUserForm={(user?: User) => {\r\n              setCurrentUser(user);\r\n              setPanel(ManagerPanelType.UserForm);\r\n            }}\r\n          />\r\n        )}\r\n        {panel === ManagerPanelType.UserForm && (\r\n          <UserForm\r\n            currentUser={currentUser}\r\n            setUser={setUser}\r\n            openUsersTablePage={() => setPanel(ManagerPanelType.UsersTable)}\r\n          />\r\n        )}\r\n        {panel === ManagerPanelType.PatientsTable && (\r\n          <PatientsTable\r\n            patients={patients}\r\n            deletePatient={(patient: Patient) =>\r\n              deletePatient(patient, setAlertMessage)(patientDispatch)\r\n            }\r\n            openPatientForm={async (patient?: Patient) => {\r\n              setCurrentPatient(patient);\r\n              patient\r\n                ? await getQuestionaires(\r\n                    patient.id,\r\n                    setAlertMessage\r\n                  )(questionairesDispatch)\r\n                : clearQuestionaires()(questionairesDispatch);\r\n              setPanel(ManagerPanelType.PatientForm);\r\n            }}\r\n          />\r\n        )}\r\n        {panel === ManagerPanelType.PatientForm && (\r\n          <>\r\n            <PatientForm\r\n              currentPatient={currentPatient}\r\n              setPatient={setPatient}\r\n              questionaires={questionaires}\r\n              openPatientsTablePage={() =>\r\n                setPanel(ManagerPanelType.PatientsTable)\r\n              }\r\n            />\r\n            <PatientReports\r\n              questionaires={questionaires?.filter((q) => q.status === 'DONE')}\r\n            />\r\n          </>\r\n        )}\r\n        {panel === ManagerPanelType.ReportsTable && (\r\n          <>\r\n            <ReportsTable patients={patients} />\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport { green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  withStyles,\r\n  createStyles,\r\n} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nimport logo from '../../image/logo.svg';\r\nimport onBoardStep1 from '../../image/onboard-step-1.svg';\r\nimport onBoardStep2 from '../../image/onboard-step-2.svg';\r\nimport onBoardStep3 from '../../image/onboard-step-3.svg';\r\n\r\ninterface OnBoardProps {\r\n  setHasOnboardedToTrue: () => void;\r\n}\r\n\r\nconst tourSteps = [\r\n  {\r\n    title: 'Seja bem-vindo!',\r\n    label:\r\n      'A dor causa muitos prejuízos na vida das pessoas, gerando na maioria das vezes impacto negativo na qualidade de vida.',\r\n    imgPath: onBoardStep1,\r\n  },\r\n  {\r\n    title: 'Seja bem-vindo!',\r\n    label:\r\n      'Para que possamos compreender melhor a complexidade da sua dor, solicitamos que preencha os questionários a seguir que será de grande valia para que o profissional que irá te atender possa conhecer e analisar SUA dor e assim, planejar seu tratamento.',\r\n    imgPath: onBoardStep2,\r\n  },\r\n  {\r\n    title: 'Seja bem-vindo!',\r\n    label:\r\n      'É possível que seja necessário respondê-los em outras oportunidades novamente para que seja feito um seguimento da evolução do seu  tratamento. Caso tenha alguma dúvida chame o profissional que poderá te ajudar!',\r\n    imgPath: onBoardStep3,\r\n  },\r\n];\r\n\r\nconst LoginPatientButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: 'white',\r\n    backgroundColor: '#329D9C',\r\n    '&:hover:not(:disabled)': {\r\n      backgroundColor: green[500],\r\n    },\r\n  },\r\n}))(IconButton);\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    onboard: { paddingTop: '64px' },\r\n    tourTitle: {\r\n      padding: '1rem',\r\n    },\r\n    tourLabel: {\r\n      padding: '1rem',\r\n      height: '150px',\r\n    },\r\n    logo: {\r\n      marginBottom: '2rem',\r\n    },\r\n    img: {\r\n      height: 255,\r\n      maxWidth: 400,\r\n      overflow: 'hidden',\r\n      display: 'block',\r\n      width: '100%',\r\n    },\r\n    greenColor: {\r\n      color: '#329D9C',\r\n    },\r\n  })\r\n);\r\n\r\nexport default function OnBoard(props: OnBoardProps) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tourSteps.length;\r\n\r\n  const handleNext = () => {\r\n    if (activeStep + 1 === maxSteps) {\r\n      setHasOnboardedToTrue();\r\n    } else {\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const { setHasOnboardedToTrue } = props;\r\n  return (\r\n    <div className={classes.onboard}>\r\n      <img src={logo} className={classes.logo} alt=\"Logo da Ador\" />\r\n      <img\r\n        className={classes.img}\r\n        src={tourSteps[activeStep].imgPath}\r\n        alt={tourSteps[activeStep].label}\r\n      />\r\n      <Paper square elevation={0} className={classes.tourTitle}>\r\n        <Typography variant=\"h6\" component=\"h1\">\r\n          {tourSteps[activeStep].title}\r\n        </Typography>\r\n      </Paper>\r\n      <Paper square elevation={0} className={classes.tourLabel}>\r\n        <Typography variant=\"body1\">{tourSteps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        variant=\"dots\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <LoginPatientButton\r\n            size=\"small\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps}\r\n          >\r\n            <KeyboardArrowRight />\r\n          </LoginPatientButton>\r\n        }\r\n        backButton={\r\n          <LoginPatientButton\r\n            size=\"small\"\r\n            onClick={handleBack}\r\n            disabled={activeStep === 0}\r\n          >\r\n            <KeyboardArrowLeft />\r\n          </LoginPatientButton>\r\n        }\r\n      />\r\n      <Button\r\n        size=\"small\"\r\n        onClick={() => {\r\n          setHasOnboardedToTrue();\r\n        }}\r\n      >\r\n        Pular etapa\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/onboard-step-1.21fc026a.svg\";","export default __webpack_public_path__ + \"static/media/onboard-step-2.813ac00c.svg\";","export default __webpack_public_path__ + \"static/media/onboard-step-3.e02cc440.svg\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    greenColor: {\r\n      color: '#329D9C',\r\n    },\r\n    EPCAppBar: {\r\n      backgroundColor: '#329D63',\r\n      color: 'white',\r\n    },\r\n    EPCTitle: {\r\n      color: '#329D63',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    EPCBodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(2),\r\n      },\r\n    },\r\n    EPCSlider: {\r\n      textAlign: 'center',\r\n      color: '#329D63',\r\n      width: '90%',\r\n      marginLeft: '1rem',\r\n    },\r\n    EPCForm: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    EPCFormItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.75rem',\r\n      lineHeight: 1,\r\n    },\r\n    EPCFooter: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    EPCReferenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  'Não posso mais suportar esta dor.',\r\n  'Não importa o que fizer minhas dores não mudarão.',\r\n  'Preciso tomar remédios para dor.',\r\n  'Isso nunca vai acabar.',\r\n  'Sou um caso sem esperança.',\r\n  'Quando ficarei pior novamente?',\r\n  'Essa dor esta me matando.',\r\n  'Eu não consigo mais continuar.',\r\n  'Essa dor esta me deixando maluco.',\r\n];\r\n\r\nasync function postEPCAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/epc`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function EPC(props: PatientFormProps) {\r\n  enum EPCFormPanel {\r\n    DESCRIPTION,\r\n    FORM,\r\n  }\r\n  const classes = useStyles();\r\n  const [currentEPCPanel, setCurrentEPCPanel] = React.useState(\r\n    EPCFormPanel.DESCRIPTION\r\n  );\r\n  const [answers, setAnswers] = React.useState(new Array(questions.length));\r\n\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: (\r\n        <>\r\n          <Typography>0</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Quase nunca\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    { value: 1, label: 1 },\r\n    { value: 2, label: 2 },\r\n    { value: 3, label: 3 },\r\n    { value: 4, label: 4 },\r\n    {\r\n      value: 5,\r\n      label: (\r\n        <>\r\n          <Typography>5</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Quase sempre\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.EPCAppBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Escala de pensamento Catastrófico\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentEPCPanel === EPCFormPanel.DESCRIPTION && (\r\n        <>\r\n          <div className={classes.EPCTitle}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">\r\n              Escala de pensamento Catastrófico\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.EPCBodyContent}>\r\n            <Typography variant=\"body1\">\r\n              Na maior parte do tempo, nós dizemos coisas. Por exemplo: nos\r\n              encorajamos a fazer coisas, nos culpamos quando cometemos um erro\r\n              ou nos recompensamos por algo que fizemos com sucesso.\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              {' '}\r\n              Quando estamos com dor, frequentemente também nos dizemos coisas\r\n              que são diferentes das coisas que nós dizemos quando estamos nos\r\n              sentindo bem.\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              A seguir existe uma lista de pensamentos típicos de pessoas que\r\n              estão com dor.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.EPCAppBar}\r\n              onClick={() => setCurrentEPCPanel(EPCFormPanel.FORM)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.EPCReferenceInfo}>\r\n              Junior JS, Nicholas MK, Pereira IA, Pimenta CAM, Asghari A, Cruz\r\n              RM. Validação da Escala de Pensamentos Catastróficos sobre Dor.\r\n              ACTA FISIATR 2008; 15(1): 31 - 36\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentEPCPanel === EPCFormPanel.FORM && (\r\n        <div className={classes.EPCForm}>\r\n          <Typography variant=\"subtitle1\">\r\n            Marque na escala com que frequência você tem estes pensamentos\r\n            quando sua dor esta forte.\r\n          </Typography>\r\n\r\n          {questions.map((question, index) => (\r\n            <div className={classes.EPCFormItem} key={`question_${index}`}>\r\n              <Typography id={`question_${index}`} gutterBottom>\r\n                {question}\r\n              </Typography>\r\n              <Slider\r\n                aria-labelledby={`question_${index}`}\r\n                defaultValue={0}\r\n                className={classes.EPCSlider}\r\n                step={1}\r\n                valueLabelDisplay=\"auto\"\r\n                marks={marks}\r\n                min={0}\r\n                max={5}\r\n                onChange={(e, v) => {\r\n                  const newAnswers = [...answers];\r\n                  newAnswers[index] = v as number;\r\n                  setAnswers(newAnswers);\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n          <div className={classes.EPCFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.EPCAppBar}\r\n              onClick={() =>\r\n                postEPCAnswers(props.patientAuth, answers, () =>\r\n                  props.setCurrentPanel(PatientPanel.INITIAL)\r\n                )\r\n              }\r\n            >\r\n              Finalizar\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.greenColor}\r\n              onClick={() => setCurrentEPCPanel(EPCFormPanel.DESCRIPTION)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nimport logoWhite from '../../image/logo-white.svg';\r\nimport {\r\n  PatientPanel,\r\n  QuestionaireListProps,\r\n  QUESTIONAIRE_LIST,\r\n} from '../../interfaces';\r\nimport { LoggedPatient } from '../../models/UserAuth';\r\nimport questionaireReducer from '../../reducers/questionaire';\r\nimport { getQuestionairesForPatient } from '../../actions/questionaire';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { AlertContext } from '../../utils/alert';\r\nimport { AuthContext } from '../../utils/loggedUser';\r\nimport { ClinicSlugContext } from '../../utils/clinicSlug';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    logoWhite: {\r\n      textAlign: 'center',\r\n      margin: '1rem',\r\n    },\r\n    profileMenu: {\r\n      backgroundColor: '#CEEBEA',\r\n      textAlign: 'left',\r\n      '&:last-child, &:first-child': {\r\n        borderRadius: '0 0 20px 20px',\r\n      },\r\n      boxShadow: 'none',\r\n    },\r\n    profileButton: {\r\n      backgroundColor: '#329D9C',\r\n      color: 'white',\r\n      margin: '1rem 0',\r\n    },\r\n    expandIcon: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      top: '30px',\r\n      '&.Mui-expanded': {\r\n        top: '42px',\r\n      },\r\n    },\r\n    expandIconProfile: {\r\n      position: 'absolute',\r\n      top: '30px',\r\n    },\r\n    greenColor: {\r\n      color: '#329D9C',\r\n    },\r\n    questionaireList: {\r\n      '& > *': {\r\n        margin: theme.spacing(1, 2, 1),\r\n      },\r\n      '& button': {\r\n        backgroundColor: 'white',\r\n        width: '90%',\r\n      },\r\n    },\r\n    textField: {\r\n      margin: '1rem 0',\r\n      '& .MuiFormLabel-root': {\r\n        color: '#329D9C',\r\n      },\r\n      '& .MuiInputBase-input': {\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n      },\r\n      '& .MuiInput-underline:before': {\r\n        content: 'none',\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\ninterface BannerInfoProps {\r\n  patientInfo: LoggedPatient;\r\n}\r\n\r\nenum BannerPanelType {\r\n  Description,\r\n  Profile,\r\n}\r\n\r\nfunction BannerMenu(props: BannerInfoProps) {\r\n  const classes = useStyles();\r\n  const [panel, setPanel] = useState(BannerPanelType.Description);\r\n\r\n  return panel === BannerPanelType.Description ? (\r\n    <Accordion\r\n      classes={{\r\n        root: classes.profileMenu,\r\n      }}\r\n      defaultExpanded\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<MenuIcon />}\r\n        aria-controls=\"panel1a-content\"\r\n        id=\"panel1a-header\"\r\n        classes={{\r\n          expandIcon: classes.expandIcon,\r\n        }}\r\n      >\r\n        <Grid container>\r\n          <Grid item className={classes.logoWhite} xs={12}>\r\n            <img\r\n              src={logoWhite}\r\n              alt=\"Logo da Ador em branco\"\r\n              className={classes.logoWhite}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"h1\"\r\n              className={classes.greenColor}\r\n            >\r\n              Olá, {props.patientInfo.name}!\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body1\">\r\n              Abaixo estão os questionários que foram Solicitados para que você\r\n              responda. Com os resultados destes questionários, o profissional\r\n              irá conhecer e analisar sua dor e assim, planejar seu tratamento.\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.profileButton}\r\n              onClick={() => setPanel(BannerPanelType.Profile)}\r\n              size=\"small\"\r\n            >\r\n              Ver meu perfil\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  ) : (\r\n    <Paper className={classes.profileMenu}>\r\n      <AppBar\r\n        position=\"static\"\r\n        classes={{ colorPrimary: classes.profileMenu }}\r\n        style={{ paddingTop: 20 }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.expandIconProfile}\r\n            onClick={() => setPanel(BannerPanelType.Description)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Grid container>\r\n            <Grid item className={classes.logoWhite} xs={12}>\r\n              <img\r\n                src={logoWhite}\r\n                alt=\"Logo da Ador em branco\"\r\n                className={classes.logoWhite}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography\r\n                variant=\"h4\"\r\n                component=\"h1\"\r\n                className={classes.greenColor}\r\n              >\r\n                Olá, {props.patientInfo.name}!\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                id=\"standard-disabled\"\r\n                label=\"CPF\"\r\n                defaultValue={props.patientInfo.tax_id}\r\n                className={classes.textField}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                id=\"standard-disabled\"\r\n                label=\"E-mail\"\r\n                defaultValue={props.patientInfo.email}\r\n                className={classes.textField}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                disabled\r\n                id=\"standard-disabled\"\r\n                label=\"Data de Nascimento\"\r\n                defaultValue={props.patientInfo.birthdate}\r\n                className={classes.textField}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function QuestionaireList(props: QuestionaireListProps) {\r\n  const classes = useStyles();\r\n\r\n  const [questionaires, questionairesDispatch] = useReducer(\r\n    questionaireReducer,\r\n    []\r\n  );\r\n  const [, setAuth] = useContext(AuthContext);\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n  const [clinicSlug] = useContext(ClinicSlugContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getQuestionairesForPatient(setAlertMessage)(questionairesDispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  const signout = () => {\r\n    setAuth();\r\n    history.push(`/login/patient/${clinicSlug}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BannerMenu patientInfo={props.patientInfo} />\r\n      <div className={classes.questionaireList}>\r\n        <Typography variant=\"subtitle1\">Questionários:</Typography>\r\n        {QUESTIONAIRE_LIST.filter((item) =>\r\n          questionaires.map((q) => q.type).includes(item.value)\r\n        ).map((item) => (\r\n          <Button\r\n            variant=\"contained\"\r\n            key={item.value}\r\n            onClick={() => {\r\n              if (item.value in PatientPanel) {\r\n                props.setCurrentPanel(\r\n                  PatientPanel[item.value as keyof typeof PatientPanel]\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            {item.label}\r\n          </Button>\r\n        ))}\r\n        <Button onClick={signout}>SAIR</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo-white.b205485d.svg\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#205072',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#205072',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#205072',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    formItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#205072',\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  {\r\n    title: 'A sua dor tem uma ou mais das seguintes características:',\r\n    sections: ['Queimação', 'Sensação de frio dolorosa', 'Choque elétrico'],\r\n  },\r\n  {\r\n    title:\r\n      'Há presença de um ou mais dos seguintes sintomas na mesma área da sua dor:',\r\n    sections: [\r\n      'Formigamento',\r\n      'Alfinetada e agulhada',\r\n      'Adormecimento',\r\n      'Coceira',\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'A dor está localizada em uma área onde o exame físico pode revelar uma ou mais das seguintes características:',\r\n    subtitle: '(Pergunta para profissional de saúde responder)',\r\n    sections: [\r\n      'Hipoestesia (diminuição da sensibilidade) ao toque',\r\n      'Hipoestesia (diminuição da sensibilidade) à picada de agulha',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Na área dolorosa, a dor pode ser causada ou aumentada por:',\r\n    subtitle: '(Pergunta para profissional de saúde responder)',\r\n    sections: ['Escovação'],\r\n  },\r\n];\r\n\r\nasync function postDN4Answers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/dn4`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nconst getRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n  return questions.reduce((acc, q, i) => {\r\n    if (i < questionIndex) {\r\n      return acc + q.sections.length;\r\n    } else if (i === questionIndex) {\r\n      return acc + sectionIndex;\r\n    }\r\n    return acc;\r\n  }, 0);\r\n};\r\n\r\nexport default function DN4(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState(\r\n    new Array(questions.reduce((acc, q) => acc + q.sections.length, 0))\r\n  );\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    value: string,\r\n    questionIndex: number,\r\n    sectionIndex: number\r\n  ): void => {\r\n    const newAnswers = [...answers];\r\n    const questionRealIndex = getRealIndex(questionIndex, sectionIndex);\r\n    newAnswers[questionRealIndex] = Number(value);\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Questionário Dor Neuropática (DN4)\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">\r\n              Questionário Dor Neuropática (DN4)\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              O questionário DN4 avalia a possibilidade da sua dor ser de origem\r\n              dos nervos especificamente, sendo necessário tratamento\r\n              especifico.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              Versão portuguesa do Neuropathic Pain Questionnaire (DN4) do\r\n              French Neuropathic Pain Group. Tradução, adaptação cultural e\r\n              validação da responsabilidade da Faculdade De Medicina da\r\n              Universidade do Porto, com a autorização do autor Didier\r\n              Bouhassira, PhD.\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {question.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.referenceInfo}\r\n                      >\r\n                        {question.subtitle}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {question.sections.map((section, sIndex) => (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        key={`question${qIndex}-section${sIndex}`}\r\n                      >\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">{section}</FormLabel>\r\n                          <RadioGroup\r\n                            row\r\n                            aria-label={section}\r\n                            name={`question${qIndex}-section${sIndex}`}\r\n                            onChange={(e, v) =>\r\n                              handleChange(e, v, qIndex, sIndex)\r\n                            }\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"1\"\r\n                              control={<Radio />}\r\n                              label=\"Sim\"\r\n                              checked={\r\n                                answers[getRealIndex(qIndex, sIndex)] === 1\r\n                              }\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"0\"\r\n                              control={<Radio />}\r\n                              label=\"Não\"\r\n                              checked={\r\n                                answers[getRealIndex(qIndex, sIndex)] === 0\r\n                              }\r\n                            />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postDN4Answers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={questions[currentPanel - 1].sections.some(\r\n                (s, sIndex) =>\r\n                  answers[getRealIndex(currentPanel - 1, sIndex)] === undefined\r\n              )}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#7A3FE1',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#7A3FE1',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#7A3FE1',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    formItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    formLabel: { fontSize: '0.875rem', margin: '5px 0' },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#7A3FE1',\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  {\r\n    title: 'Seção 1 - Intensidade da dor',\r\n    alternatives: [\r\n      'Posso tolerar a dor que estou sentindo sem ter que  tomar analgésicos',\r\n      'A dor é forte, mas suporto-a sem tomar analgésicos',\r\n      'Os analgésicos aliviam completamente a dor',\r\n      'Os analgésicos aliviam moderadamente a dor',\r\n      'Os analgésicos aliviam muito pouco a dor',\r\n      'Os analgésicos não afetam de forma alguma a dor e não os estou tomando',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 2 - Cuidados pessoais (lavar-se, vestir-se, etc)',\r\n    alternatives: [\r\n      'Posso me cuidar normalmente sem que isso cause mais dor',\r\n      'Posso me cuidar normalmente, mas isso causa mais dor',\r\n      'Dói para eu me cuidar e eu sou lento e cuidadoso',\r\n      'Preciso de alguma ajuda, mas consigo realizar a maioria dos meus cuidados pessoais',\r\n      'Preciso de ajuda todos os dias para a maioria dos meus cuidados pessoais',\r\n      'Não consigo me vestir, me lavo com dificuldades e fico na cama',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 3 - Levantar pesos',\r\n    alternatives: [\r\n      'Posso levantar pesos consideráveis sem sentir mais dor',\r\n      'Posso levantar pesos consideráveis, mas isso causa mais dor',\r\n      'A dor me impede de levantar coisas pesadas, mas posso levantá-las se bem posicionadas. Ex: Em cima de uma mesa',\r\n      'A dor me impede de levantar pesos consideráveis, mas posso levantar pesos leves a médios, se estiverem posicionados convenientemente',\r\n      'Posso levantar somente pesos bem leves',\r\n      'Não posso levantar ou carregar nada',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 4 - Caminhar',\r\n    alternatives: [\r\n      'A dor não me impede de andar qualquer distância',\r\n      'A dor me impede de andar mais de 1,6 quilômetros',\r\n      'A dor me impede de andar mais de 800 metros',\r\n      'A dor me impede de andar mais de 400 metros',\r\n      'Posso andar somente com uma bengala ou muletas',\r\n      'Fico na cama a maior parte do tempo e tenho que me arrastar para ir ao banheiro',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 5 - Sentar',\r\n    alternatives: [\r\n      'Posso me sentar em qualquer cadeira, por quanto tempo quiser',\r\n      'Só posso me sentar na minha cadeira favorita, por quanto tempo quiser',\r\n      'A dor me impede de sentar por mais de 1 hora',\r\n      'A dor me impede de sentar por mais de meia hora',\r\n      'A dor me impede de sentar por mais de 10 minutos',\r\n      'A dor me impede completamente de sentar',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 6 - Ficar em pé',\r\n    alternatives: [\r\n      'Posso ficar em pé o quanto tempo quiser, sem sentir mais dor',\r\n      'Posso ficar em pé o quanto tempo quiser, mas isso me causa mais dor',\r\n      'A dor me impede de ficar em pé por mais de 1 hora',\r\n      'A dor me impede de ficar em pé por mais de 30 minutos',\r\n      'A dor me impede de ficar em pé por mais de 10 minutos',\r\n      'A dor me impede completamente de ficar em pé',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 7 - Dormir',\r\n    alternatives: [\r\n      'A dor não me impede de dormir bem',\r\n      'Só posso dormir bem tomando comprimidos',\r\n      'Mesmo quando tomo os comprimidos, só consigo dormir menos de seis horas',\r\n      'Mesmo quando tomo os comprimidos, só consigo dormir menos de quatro horas',\r\n      'Mesmo quando tomo os comprimidos, só consigo dormir menos de duas horas',\r\n      'A dor me impede completamente de dormir',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 8 - Vida sexual',\r\n    alternatives: [\r\n      'Minha vida sexual é normal e não causa mais dor',\r\n      'Minha vida sexual é normal, mas causa alguma dor adicional',\r\n      'Minha vida sexual é quase normal, mas com muita dor',\r\n      'Minha vida sexual é severamente restrita pela dor',\r\n      'Minha vida sexual é quase inexistente devido à dor',\r\n      'A dor me impede completamente de ter vida sexual',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 9 - Vida social',\r\n    alternatives: [\r\n      'Minha vida social é normal e não me causa mais dor',\r\n      'Minha vida social é normal, mas aumenta o grau de dor',\r\n      'A dor não tem efeito significativo na minha vida social, com exceção de limitar meus interesses energéticos, como por exemplo, dançar, etc.',\r\n      'A dor restringiu minha vida social e não saio tanto como antes',\r\n      'A dor restringiu minha vida social à minha casa',\r\n      'Não tenho vida social por causa da dor',\r\n    ],\r\n  },\r\n  {\r\n    title: 'Seção 10 - Viajar',\r\n    alternatives: [\r\n      'Posso viajar para qualquer lugar sem me causar mais dor',\r\n      'Posso viajar para qualquer lugar, mas isso causa mais dor',\r\n      'A dor é forte, mas consigo fazer jornadas de mais de duas horas',\r\n      'A dor me restringe a jornadas de menos de 1 hora',\r\n      'A dor me restringe a jornadas curtas necessárias, de menos de 30 minutos',\r\n      'A dor me impede de viajar, exceto ir ao médico ou ao hospital',\r\n    ],\r\n  },\r\n];\r\n\r\nasync function postOSWAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(\r\n    `${baseUrl}/api/v1/forms/patient/fill/OSWESTRY`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${auth.token}`,\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ answers }),\r\n    }\r\n  );\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function OSWESTRY(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState(new Array(questions.length));\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    value: string,\r\n    questionIndex: number\r\n  ): void => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[questionIndex] = Number(value);\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Questionário Oswestry de Lombalgia\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">Oswestry de Lombalgia</Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              Esse questionário avalia o impacto da dor nas costas em suas\r\n              atividades diárias.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              Vigatto R, Alexandre NMC, Correa HR Filho. Development of a\r\n              Brazilian Portuguese Version of the Oswestry DisabilitY. Index:\r\n              Cross-Cultural Adaptation, Reability and Validity. Spine.\r\n              2007;32(4):481-6.\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          {currentPanel === 1 && (\r\n            <div>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"body1\">\r\n                    Selecione em cada seção, somente uma alternativa, a que se\r\n                    aplica ao seu caso.\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n                    (Nós entendemos que talvez você ache que duas das afirmações\r\n                    de uma seção podem estar relacionadas com seu caso, mas\r\n                    marque apenas a alternativa que melhor descreve o seu\r\n                    problema.)\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          )}\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body1\">{question.title}</Typography>\r\n                    </Grid>\r\n                    <FormControl component=\"fieldset\">\r\n                      <RadioGroup\r\n                        onChange={(e, v) => handleChange(e, v, qIndex)}\r\n                        aria-label={question.title}\r\n                        name={`question${qIndex}`}\r\n                      >\r\n                        {question.alternatives.map((alternative, aIndex) => (\r\n                          <FormControlLabel\r\n                            value={aIndex}\r\n                            control={<Radio />}\r\n                            label={alternative}\r\n                            checked={answers[qIndex] === aIndex}\r\n                            classes={{ label: classes.formLabel }}\r\n                          />\r\n                        ))}\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postOSWAnswers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={answers[currentPanel - 1] === undefined}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n} from '@material-ui/core/styles';\r\nimport { green, grey, orange, red, yellow } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Radio, { RadioProps } from '@material-ui/core/Radio';\r\nimport clsx from 'clsx';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#205072',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#205072',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#205072',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    formItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    formLabel: { fontSize: '0.875rem', margin: '5px 0' },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#205072',\r\n    },\r\n    alternativeGreen: {\r\n      color: green[700],\r\n    },\r\n    alternativeYellow: {\r\n      color: yellow[700],\r\n    },\r\n    alternativeOrange: {\r\n      color: orange[700],\r\n    },\r\n    alternativeRed: {\r\n      color: red[700],\r\n    },\r\n  })\r\n);\r\n\r\nconst GreenRadio = withStyles({\r\n  root: {\r\n    color: green[600],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst YellowRadio = withStyles({\r\n  root: {\r\n    color: yellow[600],\r\n    '&$checked': {\r\n      color: yellow[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst OrangeRadio = withStyles({\r\n  root: {\r\n    color: orange[600],\r\n    '&$checked': {\r\n      color: orange[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst RedRadio = withStyles({\r\n  root: {\r\n    color: red[600],\r\n    '&$checked': {\r\n      color: red[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props: RadioProps) => <Radio color=\"default\" {...props} />);\r\n\r\nconst getRadioColorByValue = (value: number) => {\r\n  switch (value) {\r\n    case 0:\r\n      return GreenRadio;\r\n    case 1:\r\n      return YellowRadio;\r\n    case 2:\r\n      return OrangeRadio;\r\n    case 3:\r\n      return RedRadio;\r\n    default:\r\n      return Radio;\r\n  }\r\n};\r\n\r\nconst questions = [\r\n  {\r\n    title: 'Eu me sinto tenso ou contraído',\r\n    alternatives: [\r\n      { label: 'A maior parte do tempo', value: 3 },\r\n      { label: 'Boa parte do tempo', value: 2 },\r\n      { label: 'De vez em quando', value: 1 },\r\n      { label: 'Nunca', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Eu ainda sinto gosto (satisfação) pelas mesmas coisas de que costumava gostar',\r\n    alternatives: [\r\n      { label: 'Sim, do mesmo jeito que antes', value: 0 },\r\n      { label: 'Não tanto quanto antes', value: 1 },\r\n      { label: 'Só um pouco', value: 2 },\r\n      { label: 'Já não sinto mais prazer em nada', value: 3 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Eu sinto um espécie de medo, como se alguma coisa ruim fosse acontecer',\r\n    alternatives: [\r\n      { label: 'Sim, de um jeito muito forte', value: 3 },\r\n      { label: 'Sim, mas não tão forte', value: 2 },\r\n      { label: 'Um pouco, mas isso não me preocupa', value: 1 },\r\n      { label: 'Não sinto nada disso', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Dou risada e me divirto quando vejo coisas engraçadas',\r\n    alternatives: [\r\n      { label: 'Sim, do mesmo jeito que antes', value: 0 },\r\n      { label: 'Atualmente u pouco menos', value: 1 },\r\n      { label: 'Atualmente bem menos', value: 2 },\r\n      { label: 'Não consigo mais', value: 3 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Estou com a cabeça cheia de preocupações',\r\n    alternatives: [\r\n      { label: 'A maior parte do tempo', value: 3 },\r\n      { label: 'Boa parte do tempo', value: 2 },\r\n      { label: 'De vez em quando', value: 1 },\r\n      { label: 'Raramente', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Eu me sinto alegre',\r\n    alternatives: [\r\n      { label: 'A maior parte do tempo', value: 0 },\r\n      { label: 'Muitas vezes', value: 1 },\r\n      { label: 'Poucas vezes', value: 2 },\r\n      { label: 'Nunca', value: 3 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Consigo ficar sentado á vontade e me sentir relaxado',\r\n    alternatives: [\r\n      { label: 'Nunca', value: 3 },\r\n      { label: 'Poucas vezes', value: 2 },\r\n      { label: 'Muitas vezes', value: 1 },\r\n      { label: 'Sim, quase sempre', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Estou lento (lerdo) para pensar e fazer as coisas',\r\n    alternatives: [\r\n      { label: 'Nunca', value: 0 },\r\n      { label: 'De vez em quando', value: 1 },\r\n      { label: 'Muitas vezes', value: 2 },\r\n      { label: 'Quase sempre', value: 3 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Tenho uma sensação ruim de medo (como um frio na espinha ou um aperto no estômago)',\r\n    alternatives: [\r\n      { label: 'Quase sempre', value: 3 },\r\n      { label: 'Muitas vezes', value: 2 },\r\n      { label: 'De vez em quando', value: 1 },\r\n      { label: 'Nunca', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Eu perdi o interesse em cuidar da minha aparência',\r\n    alternatives: [\r\n      { label: 'Cuido-me do mesmo jeito que antes', value: 0 },\r\n      { label: 'Talvez não tanto quanto antes', value: 1 },\r\n      { label: 'Não estou mais me cuidando como eu deveria', value: 2 },\r\n      { label: 'Completamente', value: 3 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Eu me sinto inquieto, como se eu não pudesse ficar parado em nenhum lugar',\r\n    alternatives: [\r\n      { label: 'Sim, demais', value: 3 },\r\n      { label: 'Bastante', value: 2 },\r\n      { label: 'Muitas vezes', value: 1 },\r\n      { label: 'Quase sempre', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Fico esperando animado as coisas boas que estão por vir',\r\n    alternatives: [\r\n      { label: 'Do mesmo jeito que antes', value: 0 },\r\n      { label: 'Um pouco menos que antes', value: 1 },\r\n      { label: 'Bem menos do que antes', value: 2 },\r\n      { label: 'Quase nunca', value: 3 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'De repente, tenho a sensação de entrar em pânico',\r\n    alternatives: [\r\n      { label: 'A quase todo tempo', value: 3 },\r\n      { label: 'Várias vezes', value: 2 },\r\n      { label: 'De vez em quando', value: 1 },\r\n      { label: 'Não sinto isso', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Consigo sentir prazer ao assistir a um bom programa de TV, de rádio ou quando leio alguma coisa',\r\n    alternatives: [\r\n      { label: 'Quase sempre', value: 0 },\r\n      { label: 'Várias vezes', value: 1 },\r\n      { label: 'Poucas vezes', value: 2 },\r\n      { label: 'Quase nunca', value: 3 },\r\n    ],\r\n  },\r\n];\r\n\r\nasync function postHADAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/had`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function HAD(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState(new Array(questions.length));\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    value: string,\r\n    questionIndex: number\r\n  ): void => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[questionIndex] = Number(value);\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">Questionário HAD</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">Ansiedade e Depressão (HAD)</Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              É comum em decorrência da dor, sentir desamino, tristeza, falta de\r\n              motivação ou qualquer outra alteração de humor.\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              {' '}\r\n              Essa avaliação poderá colaborar para identificar algum desses\r\n              sinais que são frequentes na dor crônica.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              Botega NJ, Bio MR, Zomignani MA et al - Transtornos de humor em\r\n              enfermarias de clínica médica e validação de escala de medida\r\n              (HAD) de ansiedade e depressão. Rev Saúde Pública,1995;29:355-363\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          <div>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body1\">\r\n                  Leia as frases a seguir e selecione a resposta que melhor\r\n                  corresponde como você tem se sentido na última semana.\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n                  (Não é preciso ficar pensando muito em cada questão. Vale mais\r\n                  a sua resposta espontânea.)\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"body1\">{question.title}</Typography>\r\n                    </Grid>\r\n                    <FormControl component=\"fieldset\">\r\n                      <RadioGroup\r\n                        onChange={(e, v) => handleChange(e, v, qIndex)}\r\n                        aria-label={question.title}\r\n                        name={`question${qIndex}`}\r\n                      >\r\n                        {question.alternatives.map((alternative) => {\r\n                          const CustomRadio = getRadioColorByValue(\r\n                            alternative.value\r\n                          );\r\n                          return (\r\n                            <FormControlLabel\r\n                              value={alternative.value}\r\n                              key={alternative.value}\r\n                              control={<CustomRadio />}\r\n                              label={alternative.label}\r\n                              checked={answers[qIndex] === alternative.value}\r\n                              classes={{\r\n                                label: clsx(classes.formLabel, {\r\n                                  [classes.alternativeGreen]:\r\n                                    alternative.value === 0,\r\n                                  [classes.alternativeYellow]:\r\n                                    alternative.value === 1,\r\n                                  [classes.alternativeOrange]:\r\n                                    alternative.value === 2,\r\n                                  [classes.alternativeRed]:\r\n                                    alternative.value === 3,\r\n                                }),\r\n                              }}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postHADAnswers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={answers[currentPanel - 1] === undefined}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\r\nimport LooksTwoIcon from '@material-ui/icons/LooksTwo';\r\nimport Looks3Icon from '@material-ui/icons/Looks3';\r\nimport Looks4Icon from '@material-ui/icons/Looks4';\r\nimport Looks5Icon from '@material-ui/icons/Looks5';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#7A3FE1',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#7A3FE1',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#7A3FE1',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    formItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#7A3FE1',\r\n    },\r\n    section: {\r\n      margin: '12px 0',\r\n    },\r\n    numberButtonPrimary: {\r\n      color: '#E6E6E6',\r\n    },\r\n    numberButtonSecondary: {\r\n      color: '#7A3FE1',\r\n    },\r\n    numberSpacing: {\r\n      margin: '0 auto',\r\n      textAlign: 'center',\r\n    },\r\n    numberOptionLabel: {\r\n      textAlign: 'center',\r\n      fontSize: '0.625rem',\r\n    },\r\n    radioLabel: {\r\n      width: '75px',\r\n      textAlign: 'center',\r\n    },\r\n    radioSpanLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n    radioGroup: {\r\n      justifyContent: 'center',\r\n    },\r\n    slider: {\r\n      textAlign: 'center',\r\n      color: '#7A3FE1',\r\n      width: '90%',\r\n      marginLeft: '1rem',\r\n    },\r\n    sliderMakrLabel: {\r\n      fontSize: '0.625rem',\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  {\r\n    title: null,\r\n    type: 'number',\r\n    sections: [\r\n      'Selecione na escala abaixo como você em geral diria que sua saúde é:',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Excelente', value: 1 },\r\n      { label: 'Muito boa', value: 2 },\r\n      { label: 'Boa', value: 3 },\r\n      { label: 'Ruim', value: 4 },\r\n      { label: 'Muito ruim', value: 5 },\r\n    ],\r\n  },\r\n  {\r\n    title: null,\r\n    sections: [\r\n      'Comparada há um ano atrás, como você se classificaria sua saúde em geral, agora?',\r\n    ],\r\n    type: 'number',\r\n    alternatives: [\r\n      { label: 'Muito melhor', value: 1 },\r\n      { label: 'Um pouco melhor', value: 2 },\r\n      { label: 'Quase a mesma', value: 3 },\r\n      { label: 'Um pouco pior', value: 4 },\r\n      { label: 'Muito pior', value: 5 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Os seguintes itens são sobre atividades que você poderia fazer atualmente durante um dia comum. Devido à sua saúde, você teria dificuldade para fazer estas atividades? Neste caso, quando:',\r\n    type: 'radio',\r\n    sections: [\r\n      'Atividades Rigorosas, que exigem muito esforço, tais como correr, levantar objetos pesados, participar em esportes árduos.',\r\n      'Atividades moderadas, tais como mover uma mesa, passar aspirador de pó, jogar bola, varrer a casa.',\r\n      'Levantar ou carregar mantimentos',\r\n      'Subir vários lances de escada',\r\n      'Subir um lance de escada',\r\n      'Curvar-se, ajoelhar-se ou dobrar-se',\r\n      'Andar mais de 1 quilômetro',\r\n      'Andar vários quarteirões',\r\n      'Andar um quarteirão',\r\n      'Tomar banho ou vestir-se',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sim, dificulta muito', value: 1 },\r\n      { label: 'Sim, dificulta um pouco', value: 2 },\r\n      { label: 'Não dificulta de modo algum', value: 3 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Durante as últimas 4 semanas, você teve algum dos seguintes problemas com seu trabalho ou com alguma atividade regular, como conseqüência de sua saúde física?',\r\n    type: 'radio',\r\n    sections: [\r\n      'Você diminui a quantidade de tempo que se dedicava ao seu trabalho ou a outras atividades?',\r\n      'Realizou menos tarefas do que você gostaria?',\r\n      'Esteve limitado no seu tipo de trabalho ou a outras atividades?',\r\n      'Teve dificuldade de fazer seu trabalho ou outras atividades (p. ex. necessitou de um esforço extra)?',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sim', value: 1 },\r\n      { label: 'Não', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Durante as últimas 4 semanas, você teve algum dos seguintes problemas com seu trabalho ou outra atividade regular diária, como conseqüência de algum problema emocional (como se sentir deprimido ou ansioso)?',\r\n    type: 'radio',\r\n    sections: [\r\n      'Você diminui a quantidade de tempo que se dedicava ao seu trabalho ou a outras atividades?',\r\n      'Realizou menos tarefas do que você gostaria?',\r\n      'Não realizou ou fez qualquer das atividades com tanto cuidado como geralmente faz?',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sim', value: 1 },\r\n      { label: 'Não', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: null,\r\n    sections: [\r\n      'Durante as últimas 4 semanas, de que maneira sua saúde física ou problemas emocionais interferiram nas suas atividades sociais normais, em relação à família, amigos ou em grupo?',\r\n    ],\r\n    type: 'number',\r\n    alternatives: [\r\n      { label: 'De forma nenhuma', value: 1 },\r\n      { label: 'Um pouco', value: 2 },\r\n      { label: 'Moderado', value: 3 },\r\n      { label: 'Bastante', value: 4 },\r\n      { label: 'Extremamente', value: 5 },\r\n    ],\r\n  },\r\n  {\r\n    title: null,\r\n    sections: ['Quanta dor no corpo você teve durante as últimas 4 semanas?'],\r\n    type: 'slider',\r\n    alternatives: [\r\n      { label: 'Nenhuma', value: 1 },\r\n      { label: 'Muito leve', value: 2 },\r\n      { label: 'Leve', value: 3 },\r\n      { label: 'Moderada', value: 4 },\r\n      { label: 'Grave', value: 5 },\r\n      { label: 'Muito grave', value: 6 },\r\n    ],\r\n  },\r\n  {\r\n    title: null,\r\n    sections: [\r\n      'Durante as últimas 4 semanas, quanto a dor interferiu com seu trabalho normal (incluindo o trabalho dentro de casa)?',\r\n    ],\r\n    type: 'number',\r\n    alternatives: [\r\n      { label: 'De forma nenhuma', value: 1 },\r\n      { label: 'Um pouco', value: 2 },\r\n      { label: 'Moderado', value: 3 },\r\n      { label: 'Bastante', value: 4 },\r\n      { label: 'Extremamente', value: 5 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Estas questões são sobre como você se sente e como tudo tem acontecido com você durante as últimas 4 semanas. Para cada questão, marque o número que mais se aproxime de maneira como você se sente, em relação às últimas 4 semanas.',\r\n    type: 'radio',\r\n    sections: [\r\n      'Quanto tempo você tem se sentindo cheio de vigor, de vontade, de força?',\r\n      'Quanto tempo você tem se sentido uma pessoa muito nervosa?',\r\n      'Quanto tempo você tem se sentido tão deprimido que nada pode anima-lo?',\r\n      'Quanto tempo você tem se sentido calmo ou tranqüilo?',\r\n      'Quanto tempo você tem se sentido com muita energia?',\r\n      'Quanto tempo você tem se sentido desanimado ou abatido?',\r\n      'Quanto tempo você tem se sentido esgotado?',\r\n      'Quanto tempo você tem se sentido uma pessoa feliz?',\r\n      'Quanto tempo você tem se sentido cansado?',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Todo tempo', value: 1 },\r\n      { label: 'A maior parte do tempo', value: 2 },\r\n      { label: 'Uma boa parte do tempo', value: 3 },\r\n      { label: 'Alguma parte do tempo', value: 4 },\r\n      { label: 'Uma pequena parte do tempo', value: 5 },\r\n      { label: 'Nunca', value: 6 },\r\n    ],\r\n  },\r\n  {\r\n    title: null,\r\n    sections: [\r\n      'Durante as últimas 4 semanas, quanto de seu tempo a sua saúde física ou problemas emocionais interferiram com as suas atividades sociais (como visitar amigos, parentes, etc)?',\r\n    ],\r\n    type: 'number',\r\n    alternatives: [\r\n      { label: 'Todo tempo', value: 1 },\r\n      { label: 'A maior parte do tempo', value: 2 },\r\n      { label: 'Alguma parte do tempo', value: 3 },\r\n      { label: 'Uma pequena parte do tempo', value: 4 },\r\n      { label: 'Nunca', value: 5 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'O quanto verdadeiro ou falso é cada uma das afirmações para você?',\r\n    sections: [\r\n      'Eu costumo obedecer um pouco mais facilmente que as outras pessoas',\r\n      'Eu sou tão saudável quanto qualquer pessoa que eu conheço',\r\n      'Eu acho que a minha saúde vai piorar',\r\n      'Minha saúde é excelente',\r\n    ],\r\n    type: 'number',\r\n    alternatives: [\r\n      { label: 'Verdadeiro', value: 1 },\r\n      { label: 'A maioria das vezes verdadeiro', value: 2 },\r\n      { label: 'Não sei', value: 3 },\r\n      { label: 'A maioria das vezes falso', value: 4 },\r\n      { label: 'Falso', value: 5 },\r\n    ],\r\n  },\r\n];\r\n\r\nasync function postSF36Answers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/sf36`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nconst getRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n  return questions.reduce((acc, q, i) => {\r\n    if (i < questionIndex) {\r\n      return acc + q.sections.length;\r\n    } else if (i === questionIndex) {\r\n      return acc + sectionIndex;\r\n    }\r\n    return acc;\r\n  }, 0);\r\n};\r\n\r\nexport default function SF36(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState(new Array(36));\r\n\r\n  const handleChange = (\r\n    value: string,\r\n    questionIndex: number,\r\n    sectionIndex: number\r\n  ): void => {\r\n    const newAnswers = [...answers];\r\n    const questionRealIndex = getRealIndex(questionIndex, sectionIndex);\r\n    newAnswers[questionRealIndex] = Number(value);\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">Qualidade de Vida (SF36)</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">Qualidade de Vida (SF36)</Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              O questionário SF 36 avalia o impacto da dor em várias áreas da\r\n              sua vida, dentre elas: capacidade física, impacto social,\r\n              emocional, psicológico e a dor, entre outros.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              Ciconelli, Rozana Mesquita; Ferraz, Marcos Bosi; Santos, Wilton;\r\n              Meinão, Ivone; Quaresma, Marina Rodrigues. Tradução para a língua\r\n              portuguesa e validação do questionário genérico de avaliação de\r\n              qualidade de vida SF-36 (Brasil SF-36) / Brazilian-Portuguese\r\n              version of the SF-36. A reliable and valid quality of life outcome\r\n              measure. Rev. bras. reumatol;39(3):143-50, maio-jun. 1999.\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {question.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {question.sections.map((section, sIndex) => (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        key={`question${qIndex}-section${sIndex}`}\r\n                        className={classes.section}\r\n                      >\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">{section}</FormLabel>\r\n                          {question.type === 'number' && (\r\n                            <FormGroup row>\r\n                              {question.alternatives.map((alternative) => {\r\n                                return (\r\n                                  <Grid\r\n                                    item\r\n                                    xs={2}\r\n                                    className={classes.numberSpacing}\r\n                                  >\r\n                                    <IconButton\r\n                                      color={\r\n                                        answers[\r\n                                          getRealIndex(qIndex, sIndex)\r\n                                        ] === alternative.value\r\n                                          ? 'secondary'\r\n                                          : 'primary'\r\n                                      }\r\n                                      onClick={(e) =>\r\n                                        handleChange(\r\n                                          alternative.value.toString(),\r\n                                          qIndex,\r\n                                          sIndex\r\n                                        )\r\n                                      }\r\n                                      classes={{\r\n                                        colorPrimary:\r\n                                          classes.numberButtonPrimary,\r\n                                        colorSecondary:\r\n                                          classes.numberButtonSecondary,\r\n                                      }}\r\n                                    >\r\n                                      {alternative.value === 1 && (\r\n                                        <LooksOneIcon />\r\n                                      )}\r\n                                      {alternative.value === 2 && (\r\n                                        <LooksTwoIcon />\r\n                                      )}\r\n                                      {alternative.value === 3 && (\r\n                                        <Looks3Icon />\r\n                                      )}\r\n                                      {alternative.value === 4 && (\r\n                                        <Looks4Icon />\r\n                                      )}\r\n                                      {alternative.value === 5 && (\r\n                                        <Looks5Icon />\r\n                                      )}\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                      className={classes.numberOptionLabel}\r\n                                    >\r\n                                      {alternative.label}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                );\r\n                              })}\r\n                            </FormGroup>\r\n                          )}\r\n                          {question.type === 'radio' && (\r\n                            <RadioGroup\r\n                              row\r\n                              aria-label={section}\r\n                              name={`question${qIndex}-section${sIndex}`}\r\n                              onChange={(e, v) =>\r\n                                handleChange(v, qIndex, sIndex)\r\n                              }\r\n                              classes={{ row: classes.radioGroup }}\r\n                            >\r\n                              {question.alternatives.map((alternative) => (\r\n                                <FormControlLabel\r\n                                  value={alternative.value}\r\n                                  control={<Radio />}\r\n                                  classes={{\r\n                                    labelPlacementBottom: classes.radioLabel,\r\n                                    label: classes.radioSpanLabel,\r\n                                  }}\r\n                                  label={alternative.label}\r\n                                  labelPlacement=\"bottom\"\r\n                                  checked={\r\n                                    answers[getRealIndex(qIndex, sIndex)] ===\r\n                                    alternative.value\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          )}\r\n                          {question.type === 'slider' && (\r\n                            <Slider\r\n                              defaultValue={1}\r\n                              classes={{\r\n                                root: classes.slider,\r\n                                markLabel: classes.sliderMakrLabel,\r\n                              }}\r\n                              step={1}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={question.alternatives}\r\n                              min={1}\r\n                              max={6}\r\n                              onChange={(e, v) => {\r\n                                handleChange(\r\n                                  (v as number).toString(),\r\n                                  qIndex,\r\n                                  sIndex\r\n                                );\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </FormControl>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postSF36Answers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={questions[currentPanel - 1].sections.some(\r\n                (s, sIndex) =>\r\n                  answers[getRealIndex(currentPanel - 1, sIndex)] === undefined\r\n              )}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\nimport BodyMapBPI from './BodyMapBPI';\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#329D9C',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#329D9C',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#329D9C',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    formItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#329D9C',\r\n    },\r\n    section: {\r\n      margin: '12px 0',\r\n    },\r\n    slider: {\r\n      textAlign: 'center',\r\n      color: '#329D9C',\r\n      width: '90%',\r\n      marginLeft: '1rem',\r\n    },\r\n    sliderMakrLabel: {\r\n      fontSize: '0.625rem',\r\n      whiteSpace: 'break-spaces',\r\n    },\r\n    radioLabel: {\r\n      width: '75px',\r\n      textAlign: 'center',\r\n    },\r\n    radioSpanLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n    radioGroup: {\r\n      justifyContent: 'center',\r\n    },\r\n    formControl: {\r\n      width: '100%',\r\n    },\r\n    treatmentItem: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(3),\r\n      // marginBottom: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ntype QuestionType =\r\n  | 'booleans'\r\n  | 'body_pain'\r\n  | 'grades'\r\n  | 'treatments'\r\n  | 'slider'\r\n  | 'percentages';\r\ninterface QuestionObject {\r\n  title: string;\r\n  type: QuestionType;\r\n  alternatives: { label: string; value: number }[];\r\n  sections: string[];\r\n}\r\n\r\nconst questions: QuestionObject[] = [\r\n  {\r\n    title:\r\n      'Durante a vida, a maioria das pessoas apresenta dor de vez em quando (dor de cabeça, dor de dente, etc.).',\r\n    type: 'booleans',\r\n    sections: ['Você teve hoje, dor diferente dessas?'],\r\n    alternatives: [\r\n      { label: 'Sim', value: 1 },\r\n      { label: 'Não', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Selecione a cor que corresponde a sua dor E depois toque sobre o diagrama nas áreas onde você sente esta intensidade de dor.',\r\n    type: 'body_pain',\r\n    sections: ['(Pode-se marcar quantas áreas do corpo desejar)'],\r\n    alternatives: [],\r\n  },\r\n  {\r\n    title: 'Selecione na escala de 0 a 10 a resposta da pergunta abaixo:',\r\n    type: 'grades',\r\n    sections: [\r\n      'O número que melhor descreve a pior dor  que você sentiu nas últimas 24 horas:',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sem dor', value: 0 },\r\n      { label: '', value: 1 },\r\n      { label: '', value: 2 },\r\n      { label: '', value: 3 },\r\n      { label: '', value: 4 },\r\n      { label: '', value: 5 },\r\n      { label: '', value: 6 },\r\n      { label: '', value: 7 },\r\n      { label: '', value: 8 },\r\n      { label: '', value: 9 },\r\n      { label: 'Pior dor', value: 10 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Selecione na escala de 0 a 10 a resposta da pergunta abaixo:',\r\n    type: 'grades',\r\n    sections: [\r\n      'O número que melhor descreve a dor mais fraca que você sentiu nas últimas 24 horas:',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sem dor', value: 0 },\r\n      { label: '', value: 1 },\r\n      { label: '', value: 2 },\r\n      { label: '', value: 3 },\r\n      { label: '', value: 4 },\r\n      { label: '', value: 5 },\r\n      { label: '', value: 6 },\r\n      { label: '', value: 7 },\r\n      { label: '', value: 8 },\r\n      { label: '', value: 9 },\r\n      { label: 'Pior dor', value: 10 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Selecione na escala de 0 a 10 a resposta da pergunta abaixo:',\r\n    type: 'grades',\r\n    sections: ['O número que melhor descreve a média da sua dor.'],\r\n    alternatives: [\r\n      { label: 'Sem dor', value: 0 },\r\n      { label: '', value: 1 },\r\n      { label: '', value: 2 },\r\n      { label: '', value: 3 },\r\n      { label: '', value: 4 },\r\n      { label: '', value: 5 },\r\n      { label: '', value: 6 },\r\n      { label: '', value: 7 },\r\n      { label: '', value: 8 },\r\n      { label: '', value: 9 },\r\n      { label: 'Pior dor', value: 10 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Selecione na escala de 0 a 10 a resposta da pergunta abaixo:',\r\n    type: 'grades',\r\n    sections: [\r\n      'O número que mostra quanta dor você está sentindo agora (neste momento).',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sem dor', value: 0 },\r\n      { label: '', value: 1 },\r\n      { label: '', value: 2 },\r\n      { label: '', value: 3 },\r\n      { label: '', value: 4 },\r\n      { label: '', value: 5 },\r\n      { label: '', value: 6 },\r\n      { label: '', value: 7 },\r\n      { label: '', value: 8 },\r\n      { label: '', value: 9 },\r\n      { label: 'Pior dor', value: 10 },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Quais tratamentos ou medicações você está recebendo para dor?',\r\n    type: 'treatments',\r\n    sections: [\r\n      'Você deve relatar todos os remédios em uso e outros tratamentos como: fisioterapia, acupuntura e etc… que está realizando atualmente.',\r\n    ],\r\n    alternatives: [],\r\n  },\r\n  {\r\n    title:\r\n      'Marque na escala a porcentagem que demonstra qual a intensidade da melhora proporcionada pelos tratamentos ou medicações que você está usando nas últimas 24 horas?',\r\n    type: 'slider',\r\n    sections: [''],\r\n    alternatives: [\r\n      { label: 'Sem alívio', value: 0 },\r\n      { label: '', value: 50 },\r\n      { label: 'Alívio total', value: 100 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Marque na escala de 0 a 10 o número que melhor descreve como, nas últimas 24 horas, a dor interferiu na sua:',\r\n    type: 'percentages',\r\n    sections: [\r\n      'Atividade geral',\r\n      'Humor',\r\n      'Habilidade de caminhar',\r\n      'Trabalho',\r\n      'Relacionamento com outras pessoas',\r\n      'Habilidade para apressiar a vida',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Não interferiu', value: 0 },\r\n      { label: '', value: 1 },\r\n      { label: '', value: 2 },\r\n      { label: '', value: 3 },\r\n      { label: '', value: 4 },\r\n      { label: '', value: 5 },\r\n      { label: '', value: 6 },\r\n      { label: '', value: 7 },\r\n      { label: '', value: 8 },\r\n      { label: '', value: 9 },\r\n      { label: 'Interferiu completamente', value: 10 },\r\n    ],\r\n  },\r\n];\r\n\r\ninterface Answers {\r\n  booleans: any[];\r\n  body_pain: any[];\r\n  grades: any[];\r\n  treatments: any[];\r\n  slider: any[];\r\n  percentages: any[];\r\n}\r\n\r\nasync function postBPIAnswers(\r\n  auth: UserAuth,\r\n  answers: Answers,\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/bpi`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function BPI(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState<Answers>({\r\n    booleans: [],\r\n    body_pain: [],\r\n    grades: [0, 0, 0, 0],\r\n    treatments: [{ name: '', started_at: '', frequency: '' }],\r\n    slider: [0],\r\n    percentages: [0, 0, 0, 0, 0, 0],\r\n  });\r\n\r\n  const handleChange = (\r\n    value: any,\r\n    type:\r\n      | 'booleans'\r\n      | 'body_pain'\r\n      | 'grades'\r\n      | 'treatments'\r\n      | 'slider'\r\n      | 'percentages',\r\n    index: number\r\n  ): void => {\r\n    setAnswers((s) => {\r\n      const newAnswers = _.cloneDeep(s);\r\n      if (type === 'body_pain') {\r\n        newAnswers[type] = value;\r\n      } else if (newAnswers[type].length > index) {\r\n        newAnswers[type][index] = value;\r\n      } else {\r\n        newAnswers[type].push(value);\r\n      }\r\n\r\n      if (_.isEqual(newAnswers, s)) {\r\n        return s;\r\n      }\r\n      return newAnswers;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">Breve Inventário de Dor</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">Breve Inventário de Dor</Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              O Breve Inventário de Dor auxilia a identificar os locais,\r\n              características e intensidade da dor, além dos tratamentos em uso\r\n              e o impacto da dor em alguns aspectos da sua vida.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              Ferreira KA, Teixeira MJ, Mendonza TR, Cleeland CS. Validation of\r\n              Brief Pain Inventory to Brazilian patients with pain. Support Care\r\n              Cancer. 2010 Mar 10. [Epud ahead of print].\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {question.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {question.sections.map((section, sIndex) => (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        key={`question${qIndex}-section${sIndex}`}\r\n                        className={classes.section}\r\n                      >\r\n                        <FormControl\r\n                          component=\"fieldset\"\r\n                          className={classes.formControl}\r\n                        >\r\n                          <FormLabel component=\"legend\">{section}</FormLabel>\r\n                          {question.type === 'booleans' && (\r\n                            <RadioGroup\r\n                              row\r\n                              aria-label={section}\r\n                              name={`question${qIndex}-section${sIndex}`}\r\n                              onChange={(e, v) =>\r\n                                handleChange(Number(v), question.type, sIndex)\r\n                              }\r\n                              classes={{ row: classes.radioGroup }}\r\n                            >\r\n                              {question.alternatives.map((alternative) => (\r\n                                <FormControlLabel\r\n                                  value={alternative.value}\r\n                                  control={<Radio />}\r\n                                  classes={{\r\n                                    labelPlacementBottom: classes.radioLabel,\r\n                                    label: classes.radioSpanLabel,\r\n                                  }}\r\n                                  label={alternative.label}\r\n                                  labelPlacement=\"bottom\"\r\n                                  checked={\r\n                                    answers[question.type][sIndex] ===\r\n                                    alternative.value\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          )}\r\n                          {question.type === 'body_pain' && (\r\n                            <BodyMapBPI\r\n                              disabledBodyMapClick={false}\r\n                              markBodyPartsForBPI={(values) =>\r\n                                handleChange(\r\n                                  values.reduce(\r\n                                    (\r\n                                      acc: {\r\n                                        area: number;\r\n                                        pain_level: number;\r\n                                      }[],\r\n                                      value,\r\n                                      arrayIndex\r\n                                    ) =>\r\n                                      value\r\n                                        ? [\r\n                                            ...acc,\r\n                                            {\r\n                                              area: arrayIndex + 1,\r\n                                              pain_level: value,\r\n                                            },\r\n                                          ]\r\n                                        : acc,\r\n                                    []\r\n                                  ),\r\n                                  question.type,\r\n                                  sIndex\r\n                                )\r\n                              }\r\n                              preSelectedValues={answers.body_pain.reduce(\r\n                                (acc, body) => {\r\n                                  acc[body.area - 1] = body.pain_level;\r\n                                  return acc;\r\n                                },\r\n                                new Array(53).fill(0)\r\n                              )}\r\n                            />\r\n                          )}\r\n                          {question.type === 'grades' && (\r\n                            <Slider\r\n                              defaultValue={0}\r\n                              classes={{\r\n                                root: classes.slider,\r\n                                markLabel: classes.sliderMakrLabel,\r\n                              }}\r\n                              step={1}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={question.alternatives}\r\n                              min={0}\r\n                              max={10}\r\n                              onChange={(e, v) => {\r\n                                handleChange(v, question.type, qIndex - 2);\r\n                              }}\r\n                            />\r\n                          )}\r\n                          {question.type === 'treatments' && (\r\n                            <>\r\n                              {answers.treatments.map(\r\n                                (treatment, treatIndex) => (\r\n                                  <>\r\n                                    <div className={classes.treatmentItem}>\r\n                                      <TextField\r\n                                        id={`name_${treatIndex}`}\r\n                                        label=\"Nome do tratamento\"\r\n                                        value={treatment?.name}\r\n                                        onChange={(e) =>\r\n                                          handleChange(\r\n                                            {\r\n                                              ...treatment,\r\n                                              name: e.target.value,\r\n                                            },\r\n                                            question.type,\r\n                                            treatIndex\r\n                                          )\r\n                                        }\r\n                                        fullWidth\r\n                                      />\r\n                                    </div>\r\n                                    <div>\r\n                                      <TextField\r\n                                        id={`started_at_${treatIndex}`}\r\n                                        label=\"Quando iniciou?\"\r\n                                        value={treatment?.started_at}\r\n                                        onChange={(e) =>\r\n                                          handleChange(\r\n                                            {\r\n                                              ...treatment,\r\n                                              started_at: e.target.value,\r\n                                            },\r\n                                            question.type,\r\n                                            treatIndex\r\n                                          )\r\n                                        }\r\n                                        fullWidth\r\n                                      />\r\n                                    </div>\r\n                                    <div>\r\n                                      <TextField\r\n                                        id={`frequency_${treatIndex}`}\r\n                                        label=\"Qual a dose/frequência do tratamento?\"\r\n                                        value={treatment?.frequency}\r\n                                        onChange={(e) =>\r\n                                          handleChange(\r\n                                            {\r\n                                              ...treatment,\r\n                                              frequency: e.target.value,\r\n                                            },\r\n                                            question.type,\r\n                                            treatIndex\r\n                                          )\r\n                                        }\r\n                                        fullWidth\r\n                                      />\r\n                                    </div>\r\n                                    <Divider\r\n                                      className={classes.divider}\r\n                                      variant=\"middle\"\r\n                                    />\r\n                                  </>\r\n                                )\r\n                              )}\r\n\r\n                              <Button\r\n                                variant=\"text\"\r\n                                className={classes.mainColor}\r\n                                onClick={() =>\r\n                                  setAnswers((s) => ({\r\n                                    ...s,\r\n                                    treatments: [\r\n                                      ...s.treatments,\r\n                                      {\r\n                                        name: '',\r\n                                        started_at: '',\r\n                                        frequency: '',\r\n                                      },\r\n                                    ],\r\n                                  }))\r\n                                }\r\n                              >\r\n                                Adicionar mais tratamentos\r\n                              </Button>\r\n                            </>\r\n                          )}\r\n                          {question.type === 'slider' && (\r\n                            <Slider\r\n                              defaultValue={0}\r\n                              classes={{\r\n                                root: classes.slider,\r\n                                markLabel: classes.sliderMakrLabel,\r\n                              }}\r\n                              step={1}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={question.alternatives}\r\n                              min={0}\r\n                              max={100}\r\n                              onChange={(e, v) => {\r\n                                handleChange(v, question.type, sIndex);\r\n                              }}\r\n                            />\r\n                          )}\r\n                          {question.type === 'percentages' && (\r\n                            <Slider\r\n                              defaultValue={0}\r\n                              classes={{\r\n                                root: classes.slider,\r\n                                markLabel: classes.sliderMakrLabel,\r\n                              }}\r\n                              step={1}\r\n                              valueLabelDisplay=\"auto\"\r\n                              marks={question.alternatives}\r\n                              min={0}\r\n                              max={10}\r\n                              onChange={(e, v) => {\r\n                                handleChange(v, question.type, sIndex);\r\n                              }}\r\n                            />\r\n                          )}\r\n                        </FormControl>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postBPIAnswers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={questions[currentPanel - 1].sections.some(\r\n                (s, sIndex) => {\r\n                  if (questions[currentPanel - 1].type === 'grades') {\r\n                    return false;\r\n                  }\r\n                  return (\r\n                    answers[questions[currentPanel - 1].type].length <=\r\n                      sIndex ||\r\n                    [undefined, null].includes(\r\n                      answers[questions[currentPanel - 1].type][sIndex]\r\n                    )\r\n                  );\r\n                }\r\n              )}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport BodyMapFibromialgia from './BodyMapFibromialgia';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport _ from 'lodash';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#329D9C',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#329D9C',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#329D9C',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    formItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#329D9C',\r\n    },\r\n    section: {\r\n      margin: '12px 0',\r\n    },\r\n    radioLabel: {\r\n      width: '50px',\r\n      textAlign: 'center',\r\n    },\r\n    radioSpanLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n    radioGroup: {\r\n      justifyContent: 'center',\r\n    },\r\n    formControl: {\r\n      width: '100%',\r\n    },\r\n  })\r\n);\r\n\r\ntype QuestionType = 'body_pain' | 'idg' | 'ess' | 'booleans';\r\ninterface QuestionObject {\r\n  title: string;\r\n  type: QuestionType;\r\n  alternatives: { label: string; value: number }[];\r\n  sections: string[];\r\n}\r\n\r\nconst questions: QuestionObject[] = [\r\n  {\r\n    title: '',\r\n    type: 'body_pain',\r\n    sections: [\r\n      'Selecione a região que você teve dor ou sensibilidade nos últimos 7 dias nas áreas mostradas abaixo.',\r\n    ],\r\n    alternatives: [],\r\n  },\r\n  {\r\n    title: '',\r\n    type: 'idg',\r\n    sections: ['Marque abaixo cada área onde você teve dor ou sensibilidade.'],\r\n    alternatives: [\r\n      { label: 'Cinta de ombro esquerda', value: 0 },\r\n      { label: 'Cinta de ombro direita', value: 1 },\r\n      { label: 'Braço superior esquerdo', value: 2 },\r\n      { label: 'Braço direito', value: 3 },\r\n      { label: 'Braço inferior esquerdo', value: 4 },\r\n      { label: 'Braço inferior direito', value: 5 },\r\n      { label: 'Quadril (nádega), esquerda', value: 6 },\r\n      { label: 'Quadril (nádega), direita', value: 7 },\r\n      { label: 'Perna superior esquerda', value: 8 },\r\n      { label: 'Perna superior, direita', value: 9 },\r\n      { label: 'Perna inferior, esquerda', value: 10 },\r\n      { label: 'Perna inferior, direita', value: 11 },\r\n      { label: 'Mandíbula, esquerda', value: 12 },\r\n      { label: 'Mandíbula, direita', value: 13 },\r\n      { label: 'Peito', value: 14 },\r\n      { label: 'Abdômen', value: 15 },\r\n      { label: 'Pescoço', value: 16 },\r\n      { label: 'Parte superior das costas', value: 17 },\r\n      { label: 'Parte inferior das costas', value: 18 },\r\n      { label: 'Nenhuma dessas áreas', value: 19 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Para cada sintoma listado, use a escala para indicar a gravidade do sintoma por 7 dias.',\r\n    type: 'ess',\r\n    sections: [\r\n      'Fadiga',\r\n      'Pensando ou lembrando do problema',\r\n      'Levantar-se cansado (não satisfeito)',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sem problemas', value: 1 },\r\n      { label: 'Problema leve', value: 2 },\r\n      { label: 'Problema moderado', value: 3 },\r\n      { label: 'Problema sério', value: 4 },\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Durante os últimos 6 meses, você teve algum dos seguintes sintomas?',\r\n    type: 'booleans',\r\n    sections: ['Fadiga', 'Depressão', 'Dor de cabeça'],\r\n    alternatives: [\r\n      { label: 'Sim', value: 1 },\r\n      { label: 'Não', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: '',\r\n    type: 'booleans',\r\n    sections: [\r\n      'Os sintomas são as questões 2 e 3 e a dor generalizada está presente em um nível semelhante por pelo menos 3 meses?',\r\n    ],\r\n    alternatives: [\r\n      { label: 'Sim', value: 1 },\r\n      { label: 'Não', value: 0 },\r\n    ],\r\n  },\r\n  {\r\n    title: '',\r\n    type: 'booleans',\r\n    sections: ['Você tem um distúrbio que, de outra forma, explicaria a dor?'],\r\n    alternatives: [\r\n      { label: 'Sim', value: 1 },\r\n      { label: 'Não', value: 0 },\r\n    ],\r\n  },\r\n];\r\n\r\ninterface Answers {\r\n  body_pain: any[];\r\n  idg: any[];\r\n  ess: any[];\r\n  booleans: any[];\r\n}\r\n\r\nasync function postFibromialgiaAnswers(\r\n  auth: UserAuth,\r\n  answers: Answers,\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(\r\n    `${baseUrl}/api/v1/forms/patient/fill/fibromialgia`,\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${auth.token}`,\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ answers }),\r\n    }\r\n  );\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nconst getBooleansRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n  const booleansQuestions = questions.filter((q) => q.type === 'booleans');\r\n  return booleansQuestions.reduce((acc, q, i) => {\r\n    if (i < questionIndex - 3) {\r\n      return acc + q.sections.length;\r\n    } else if (i === questionIndex - 3) {\r\n      return acc + sectionIndex;\r\n    }\r\n    return acc;\r\n  }, 0);\r\n};\r\n\r\nexport default function Fibromialgia(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState<Answers>({\r\n    body_pain: [],\r\n    idg: new Array(20).fill(0),\r\n    ess: new Array(3),\r\n    booleans: new Array(5),\r\n  });\r\n\r\n  const handleChange = (\r\n    value: any,\r\n    type: QuestionType,\r\n    index: number\r\n  ): void => {\r\n    setAnswers((s) => {\r\n      const newAnswers = _.cloneDeep(s);\r\n      if (type === 'body_pain') {\r\n        newAnswers[type] = value;\r\n      } else if (newAnswers[type].length > index) {\r\n        newAnswers[type][index] = value;\r\n      } else {\r\n        newAnswers[type].push(value);\r\n      }\r\n      if (_.isEqual(newAnswers, s)) {\r\n        return s;\r\n      }\r\n      return newAnswers;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Índice de Dor da Fibromialgia\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">Índice de Dor da Fibromialgia</Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              O Índice de Dor Generalizada é usado para que possa colaborar com\r\n              o diagnóstico clinico de algumas patologias.\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              Wolfe F, Clauw DJ, Fitzcharles MA, Goldenberg DL, Katz RS, Mease\r\n              P, et al. The American College of Rheumatology preliminary\r\n              diagnostic criteria for fibromyalgia and measurement of symptom\r\n              severity. Arthritis Care Res(Hoboken). 2010;62:600-10.\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {question.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {question.sections.map((section, sIndex) => (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        key={`question${qIndex}-section${sIndex}`}\r\n                        className={classes.section}\r\n                      >\r\n                        <FormControl\r\n                          component=\"fieldset\"\r\n                          className={classes.formControl}\r\n                        >\r\n                          <FormLabel component=\"legend\">{section}</FormLabel>\r\n\r\n                          {question.type === 'body_pain' && (\r\n                            <BodyMapFibromialgia\r\n                              disabledBodyMapClick={false}\r\n                              markBodyParts={(values) =>\r\n                                handleChange(\r\n                                  values.reduce(\r\n                                    (\r\n                                      acc: {\r\n                                        area: number;\r\n                                        pain_flag: number;\r\n                                      }[],\r\n                                      value,\r\n                                      arrayIndex\r\n                                    ) =>\r\n                                      value\r\n                                        ? [\r\n                                            ...acc,\r\n                                            {\r\n                                              area: arrayIndex + 1,\r\n                                              pain_flag: value,\r\n                                            },\r\n                                          ]\r\n                                        : acc,\r\n                                    []\r\n                                  ),\r\n                                  question.type,\r\n                                  sIndex\r\n                                )\r\n                              }\r\n                              preSelectedValues={answers.body_pain.reduce(\r\n                                (acc, body) => {\r\n                                  acc[body.area - 1] = body.pain_level;\r\n                                  return acc;\r\n                                },\r\n                                new Array(19).fill(0)\r\n                              )}\r\n                            />\r\n                          )}\r\n                          {question.type === 'idg' && (\r\n                            <FormControl component=\"fieldset\">\r\n                              <FormGroup>\r\n                                {question.alternatives.map(\r\n                                  (alternative, aIndex) => (\r\n                                    <FormControlLabel\r\n                                      control={\r\n                                        <Checkbox\r\n                                          checked={!!answers.idg[aIndex]}\r\n                                          onChange={(event) =>\r\n                                            handleChange(\r\n                                              Number(event.target.checked),\r\n                                              question.type,\r\n                                              aIndex\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      }\r\n                                      label={alternative.label}\r\n                                      key={`idg-question-${aIndex}`}\r\n                                    />\r\n                                  )\r\n                                )}\r\n                              </FormGroup>\r\n                            </FormControl>\r\n                          )}\r\n                          {question.type === 'ess' && (\r\n                            <RadioGroup\r\n                              row\r\n                              aria-label={section}\r\n                              name={`question${qIndex}-section${sIndex}`}\r\n                              onChange={(e, v) =>\r\n                                handleChange(Number(v), question.type, sIndex)\r\n                              }\r\n                              classes={{ row: classes.radioGroup }}\r\n                            >\r\n                              {question.alternatives.map((alternative) => (\r\n                                <FormControlLabel\r\n                                  value={alternative.value}\r\n                                  key={alternative.value}\r\n                                  control={<Radio />}\r\n                                  classes={{\r\n                                    labelPlacementBottom: classes.radioLabel,\r\n                                  }}\r\n                                  label={\r\n                                    <>\r\n                                      <Typography\r\n                                        paragraph\r\n                                        className={classes.radioSpanLabel}\r\n                                      >\r\n                                        {alternative.value}\r\n                                      </Typography>\r\n                                      <Typography\r\n                                        paragraph\r\n                                        className={classes.radioSpanLabel}\r\n                                      >\r\n                                        {alternative.label}\r\n                                      </Typography>\r\n                                    </>\r\n                                  }\r\n                                  labelPlacement=\"bottom\"\r\n                                  checked={\r\n                                    answers[question.type][sIndex] ===\r\n                                    alternative.value\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          )}\r\n                          {question.type === 'booleans' && (\r\n                            <RadioGroup\r\n                              row\r\n                              aria-label={section}\r\n                              name={`question${qIndex}-section${sIndex}`}\r\n                              onChange={(e, v) =>\r\n                                handleChange(\r\n                                  Number(v),\r\n                                  question.type,\r\n                                  getBooleansRealIndex(qIndex, sIndex)\r\n                                )\r\n                              }\r\n                              classes={{ row: classes.radioGroup }}\r\n                            >\r\n                              {question.alternatives.map((alternative) => (\r\n                                <FormControlLabel\r\n                                  value={alternative.value}\r\n                                  key={alternative.value}\r\n                                  control={<Radio />}\r\n                                  classes={{\r\n                                    labelPlacementBottom: classes.radioLabel,\r\n                                  }}\r\n                                  label={alternative.label}\r\n                                  labelPlacement=\"bottom\"\r\n                                  checked={\r\n                                    answers[question.type][\r\n                                      getBooleansRealIndex(qIndex, sIndex)\r\n                                    ] === alternative.value\r\n                                  }\r\n                                />\r\n                              ))}\r\n                            </RadioGroup>\r\n                          )}\r\n                        </FormControl>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postFibromialgiaAnswers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={questions[currentPanel - 1].sections.some(\r\n                (s, sIndex) => {\r\n                  return (\r\n                    answers[questions[currentPanel - 1].type].length <=\r\n                      sIndex ||\r\n                    [undefined, null].includes(\r\n                      answers[questions[currentPanel - 1].type][sIndex]\r\n                    )\r\n                  );\r\n                }\r\n              )}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#3f51b5',\r\n    },\r\n    IADAppBar: {\r\n      backgroundColor: '#3f51b5',\r\n      color: 'white',\r\n    },\r\n    IADTitle: {\r\n      color: '#3f51b5',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    IADBodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(2),\r\n      },\r\n    },\r\n    IADSlider: {\r\n      textAlign: 'center',\r\n      color: '#3f51b5v',\r\n      width: '85%',\r\n      marginLeft: '1rem',\r\n    },\r\n    IADForm: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    IADFormItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.75rem',\r\n      lineHeight: 1,\r\n    },\r\n    IADFooter: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    IADReferenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  'Muitas vezes eu consigo influenciar a intensidade da dor que sinto.', //1\r\n  'Provavelmente eu sempre terei que tomar medicamento para dor.', //2\r\n  'Sempre que eu sinto dor eu quero que a minha família me trate melhor.', //3\r\n  'Eu não espero cura médica para a minha dor.', //4\r\n  'O maior alívio da dor que eu tive foi com o uso de medicamentos', //5\r\n  'A ansiedade aumenta a minha dor.', //6\r\n  'Sempre que eu sinto dor as pessoas devem me tratar com cuidado e preocupação', //7\r\n  'Eu desisti de buscar a completa eliminação da minha dor através do trabalho da medicina.', //8\r\n  'É resposabilidade daqueles que me amam ajudarem-me quando eu sentir dor.', //9\r\n  'O estresse da minha vida aumenta a minha dor.', //10\r\n  'Ecercício e movimento são bons para o meu problema da dor.', //11\r\n  'Concentrando-me ou relanxando-me consigo diminuir a minha dor.', //12\r\n  'Remédio é um dos melhores tratamentos para dor crônica.', //13\r\n  'A minha família precisa aprender a cuidar melhor de mim quando eu estiver com dor.', //14\r\n  'A drepressão aumenta a dor que sinto.', //15\r\n  'Se eu me exercitasse poderia piorar ainda mais o meu problema de dor.', //16\r\n  'Eu acredito poder controlar a dor que sinto mudando meus pensamentos.', //17\r\n  'Muitas vezes quando eu estou com dor eu preciso de mais carinho do que estou recebendo agora.', //18\r\n  'Alguma coisa está errada com o meu corpo que impede muito movimento ou exercício.', //19\r\n  'Eu aprendi a controlar a minha dor.', //20\r\n  'Eu confio que a medicina poder curar a minha dor.', //21\r\n  'Eu sei com certeza que posso aprender a lidar com a dor.', //22\r\n  'A minha dor não me impede de levar uma vida fisicamente ativa.', //23\r\n  'A minha dor física não será curada.', //24\r\n  'Há uma forte ligação entre as minhas emoções e a intensidade da minha dor.', //25\r\n  'Eu posso fazer quase tudo tão bem quanto eu podia antes de ter o problema da dor.', //26\r\n  'Se eu não fizer exercícios regularmente o problema da minha dor continuará a piorar.', //27\r\n  'O exercício pode diminuir a intensidade da dor que eu sinto.', //28\r\n  'Estou convencido de que não há procedimento médico que ajude a minha dor.', //29\r\n  'A dor que sinto impediria qualquer pessoa de levar uma vida ativa.', //30\r\n];\r\n\r\nasync function postIADAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/iad`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function IAD(props: PatientFormProps) {\r\n  enum IADFormPanel {\r\n    DESCRIPTION,\r\n    FORM,\r\n  }\r\n  const classes = useStyles();\r\n  const [currentIADPanel, setCurrentIADPanel] = React.useState(\r\n    IADFormPanel.DESCRIPTION\r\n  );\r\n  const [answers, setAnswers] = React.useState(\r\n    new Array(questions.length).fill(0)\r\n  );\r\n\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: (\r\n        <>\r\n          <Typography>0</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Totalmente falso\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: 1,\r\n      label: (\r\n        <>\r\n          <Typography>1</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Quase falso\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: 2,\r\n      label: (\r\n        <>\r\n          <Typography>2</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Nem verdadeiro nem falso\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: 3,\r\n      label: (\r\n        <>\r\n          <Typography>3</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Quase verdadeiro\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      value: 4,\r\n      label: (\r\n        <>\r\n          <Typography>4</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Totalmente verdadeiro\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.IADAppBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Inventário de atitude frente à dor\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentIADPanel === IADFormPanel.DESCRIPTION && (\r\n        <>\r\n          <div className={classes.IADTitle}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">\r\n              Inventário de atitude frente à dor\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.IADBodyContent}>\r\n            <Typography variant=\"body1\">\r\n              O Inventário de Atitude Frente à Dor (IAD) (Jensen et al., 1987)\r\n              foi proposto como instrumento para avaliar as atitudes frente à\r\n              dor de doentes com dor crônica não-oncológica (Pimenta, 1999) e\r\n              contém 30 itens correspondentes a sete domínios ou escalas (cura\r\n              médica, controle, solicitude, incapacidade, medicação, emoção e\r\n              dano físico). Cada domínio constitui-se de um conjunto de\r\n              assertivas que são submetidas ao entrevistado solicitando que\r\n              avalie seu grau de concordância com cada uma, utilizando-se uma\r\n              escala do tipo Likert de cinco pontos, que varia de 0-4\r\n              (0=totalmente falso, 1= quase falso, 2=nem verdadeiro nem falso,\r\n              3=quase verdadeiro, 4=totalmente verdadeiro).\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.IADAppBar}\r\n              onClick={() => setCurrentIADPanel(IADFormPanel.FORM)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.IADReferenceInfo}>\r\n              {\r\n                'Jensen et al., 1987; Jensen & Karoly, 1992; Jensen et al., 1994'\r\n              }\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentIADPanel === IADFormPanel.FORM && (\r\n        <div className={classes.IADForm}>\r\n          <Typography variant=\"subtitle1\">\r\n            Marque na escala com que frequência você tem estes pensamentos\r\n            quando sua dor esta forte.\r\n          </Typography>\r\n\r\n          {questions.map((question, index) => (\r\n            <div className={classes.IADFormItem} key={`question_${index}`}>\r\n              <Typography id={`question_${index}`} gutterBottom>\r\n                {question}\r\n              </Typography>\r\n              <Slider\r\n                aria-labelledby={`question_${index}`}\r\n                defaultValue={0}\r\n                className={classes.IADSlider}\r\n                step={1}\r\n                valueLabelDisplay=\"auto\"\r\n                marks={marks}\r\n                min={0}\r\n                max={4}\r\n                onChange={(e, v) => {\r\n                  const newAnswers = [...answers];\r\n                  newAnswers[index] = v as number;\r\n                  setAnswers(newAnswers);\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n          <div className={classes.IADFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.IADAppBar}\r\n              onClick={() =>\r\n                postIADAnswers(props.patientAuth, answers, () =>\r\n                  props.setCurrentPanel(PatientPanel.INITIAL)\r\n                )\r\n              }\r\n            >\r\n              Finalizar\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentIADPanel(IADFormPanel.DESCRIPTION)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#3f51b5',\r\n    },\r\n    SBSTAppBar: {\r\n      backgroundColor: '#3f51b5',\r\n      color: 'white',\r\n    },\r\n    SBSTTitle: {\r\n      color: '#3f51b5',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    SBSTBodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(2),\r\n      },\r\n    },\r\n    SBSTForm: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    SBSTReferenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    radioGroup: {\r\n      justifyContent: 'center',\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  'A minha dor nas costas se espalhou pelas pernas nas duas últimas semanas.', //1\r\n  'Eu tive dor no ombro e/ou na nuca pelo menos uma vez nas últimas duas semanas.', //2\r\n  'Eu evito andar longas distâncias por causa da minha dor nas costas.', //3\r\n  'Nas duas últimas semanas, tenho me vestido mais devagar por causa da minha dor nas costas.', //4\r\n  'A atividade física não é realmente segura para uma pessoa com um problema como o meu.', //5\r\n  'Tenho ficado preocupado por muito tempo por causa da minha dor nas costas.', //6\r\n  'Eu sinto que minha dor nas costas é terrível e que nunca vai melhorar.', //7\r\n  'Em geral, eu não tenho gostado de todas as coisas como eu costumava gostar.', //8\r\n  'Em geral, quanto a sua dor nas costas o incomodou nas duas últimas semanas. Nada ( 0 ) Pouco ( 0 ) Moderado ( 0 ) Muito ( 1 ) Extremamente ( 1 )', //9\r\n];\r\n\r\nasync function postSBSTAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/sbst`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function SBST(props: PatientFormProps) {\r\n  enum SBSTFormPanel {\r\n    DESCRIPTION,\r\n    FORM,\r\n  }\r\n  const classes = useStyles();\r\n  const [currentSBSTPanel, setCurrentSBSTPanel] = React.useState(\r\n    SBSTFormPanel.DESCRIPTION\r\n  );\r\n  const [answers, setAnswers] = React.useState(new Array(questions.length));\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.SBSTAppBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Start Back Screening Tool (SBST)\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentSBSTPanel === SBSTFormPanel.DESCRIPTION && (\r\n        <>\r\n          <div className={classes.SBSTTitle}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">\r\n              Start Back Screening Tool (SBST)\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.SBSTBodyContent}>\r\n            <Typography variant=\"body1\">\r\n              Fatores psicossociais não são rotineiramente identificados na\r\n              avaliação fisioterapêutica e podem influenciar no prognóstico de\r\n              pacientes com dor lombar. O questionário STarT Back Screening Tool\r\n              (SBST) foi criado para distinguir subgrupos dentre pacientes com\r\n              dor lombar em relação ao prognóstico no tratamento considerando\r\n              fatores físicos e psicossociais, classificando-os em baixo, médio\r\n              e alto risco de mau prognóstico\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.SBSTAppBar}\r\n              onClick={() => setCurrentSBSTPanel(SBSTFormPanel.FORM)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.SBSTReferenceInfo}>\r\n              Versão Brasileira do STarT Back Screening Tool - tradução,\r\n              adaptação transcultural, confiabilidade e validade de construto\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentSBSTPanel === SBSTFormPanel.FORM && (\r\n        <Grid container spacing={1}>\r\n          <Typography variant=\"subtitle1\">\r\n            Marque na escala com que frequência você tem estes pensamentos\r\n            quando sua dor esta forte.\r\n          </Typography>\r\n\r\n          {questions.map((question, index) => (\r\n            <Grid item xs={12} key={`question_${index}`}>\r\n              <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">{question}</FormLabel>\r\n                <RadioGroup\r\n                  row\r\n                  aria-label={question}\r\n                  name={`question_${index}`}\r\n                  classes={{ row: classes.radioGroup }}\r\n                  onChange={(e, v) => {\r\n                    const newAnswers = [...answers];\r\n                    newAnswers[index] = Number(v);\r\n                    setAnswers(newAnswers);\r\n                  }}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"0\"\r\n                    control={<Radio />}\r\n                    label=\"Discordo\"\r\n                    checked={answers[index] === 0}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"1\"\r\n                    control={<Radio />}\r\n                    label=\"Concordo\"\r\n                    checked={answers[index] === 1}\r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n          ))}\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.SBSTAppBar}\r\n              onClick={() =>\r\n                postSBSTAnswers(props.patientAuth, answers, () =>\r\n                  props.setCurrentPanel(PatientPanel.INITIAL)\r\n                )\r\n              }\r\n            >\r\n              Finalizar\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentSBSTPanel(SBSTFormPanel.DESCRIPTION)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    greenColor: {\r\n      color: '#329D9C',\r\n    },\r\n    PSEQAppBar: {\r\n      backgroundColor: '#329D63',\r\n      color: 'white',\r\n    },\r\n    PSEQTitle: {\r\n      color: '#329D63',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    PSEQBodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(2),\r\n      },\r\n    },\r\n    PSEQSlider: {\r\n      textAlign: 'center',\r\n      color: '#329D63',\r\n      width: '80%',\r\n      marginLeft: '1.75rem',\r\n    },\r\n    PSEQForm: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    PSEQFormItem: {\r\n      margin: theme.spacing(3, 0, 6),\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.625rem',\r\n      lineHeight: 1,\r\n    },\r\n    PSEQFooter: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    PSEQReferenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  'Eu posso aproveitar as coisas, apesar da dor.', //1\r\n  'Eu posso fazer a maioria das tarefas domésticas (por exemplo, arrumar, lavar louça, etc), apesar da dor.', //2\r\n  'Eu posso socializar com meus amigos ou familiares como eu costumava fazer, apesar da dor.', //3\r\n  'Eu posso lidar com a minha dor na maioria das situações.', //4\r\n  'Eu posso fazer alguma forma de trabalho, apesar da dor. (“Trabalho” inclui tarefas domésticas, trabalho remunerado e não remunerado).', //5\r\n  'Eu ainda posso fazer muitas das coisas que eu gosto de fazer, como hobbies ou atividades de lazer, apesar da dor.', //6\r\n  'Eu posso lidar com a dor sem medicação', //7\r\n  'Eu ainda posso realizar a maioria dos meus objetivos na vida, apesar da dor.', //8\r\n  'Eu posso viver um estilo de vida normal, apesar da dor.', //9\r\n  'Eu posso gradualmente me tornar mais ativo, apesar da dor.', //10\r\n];\r\n\r\nasync function postPSEQAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/pseq`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function PSEQ(props: PatientFormProps) {\r\n  enum PSEQFormPanel {\r\n    DESCRIPTION,\r\n    FORM,\r\n  }\r\n  const classes = useStyles();\r\n  const [currentPSEQPanel, setCurrentPSEQPanel] = React.useState(\r\n    PSEQFormPanel.DESCRIPTION\r\n  );\r\n  const [answers, setAnswers] = React.useState(\r\n    new Array(questions.length).fill(0)\r\n  );\r\n\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: (\r\n        <>\r\n          <Typography>0</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Completamente confiante\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n    { value: 1, label: 1 },\r\n    { value: 2, label: 2 },\r\n    { value: 3, label: 3 },\r\n    { value: 4, label: 4 },\r\n    { value: 5, label: 5 },\r\n    {\r\n      value: 6,\r\n      label: (\r\n        <>\r\n          <Typography>6</Typography>\r\n          <Typography className={classes.sliderSubLabel}>\r\n            Não completamente confiante\r\n          </Typography>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.PSEQAppBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Autoeficácia da dor (PSEQ)\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPSEQPanel === PSEQFormPanel.DESCRIPTION && (\r\n        <>\r\n          <div className={classes.PSEQTitle}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">Autoeficácia da dor (PSEQ)</Typography>\r\n          </div>\r\n          <div className={classes.PSEQBodyContent}>\r\n            <Typography variant=\"body1\">\r\n              Por favor, avalie como você está <b>confiante</b> de que você pode\r\n              fazer as seguintes coisas no momento, <b>apesar da dor</b>. Para\r\n              indicar sua resposta escolha um dos números na escala abaixo de\r\n              cada item, onde 6 = nada confiante e 1 = completamente confiante\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.PSEQAppBar}\r\n              onClick={() => setCurrentPSEQPanel(PSEQFormPanel.FORM)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.PSEQReferenceInfo}>\r\n              Nicholas M.K. Self-efficacy and chronic pain. Paper presented at\r\n              the annual conference of the British Psychological Society. St.\r\n              Andrews, 1989.\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPSEQPanel === PSEQFormPanel.FORM && (\r\n        <div className={classes.PSEQForm}>\r\n          <Typography variant=\"subtitle1\">\r\n            Lembre-se, este questionário <b>não</b> está perguntando se você não\r\n            tem feito essas coisas, mas sim{' '}\r\n            <b>\r\n              como você está confiante de que você pode fazê-las no momento,\r\n              apesar da dor\r\n            </b>\r\n            .\r\n          </Typography>\r\n\r\n          {questions.map((question, index) => (\r\n            <div className={classes.PSEQFormItem} key={`question_${index}`}>\r\n              <Typography id={`question_${index}`} gutterBottom>\r\n                {question}\r\n              </Typography>\r\n              <Slider\r\n                aria-labelledby={`question_${index}`}\r\n                defaultValue={0}\r\n                className={classes.PSEQSlider}\r\n                step={1}\r\n                valueLabelDisplay=\"auto\"\r\n                marks={marks}\r\n                min={0}\r\n                max={6}\r\n                onChange={(e, v) => {\r\n                  const newAnswers = [...answers];\r\n                  newAnswers[index] = v as number;\r\n                  setAnswers(newAnswers);\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n          <div className={classes.PSEQFooter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.PSEQAppBar}\r\n              onClick={() =>\r\n                postPSEQAnswers(props.patientAuth, answers, () =>\r\n                  props.setCurrentPanel(PatientPanel.INITIAL)\r\n                )\r\n              }\r\n            >\r\n              Finalizar\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.greenColor}\r\n              onClick={() => setCurrentPSEQPanel(PSEQFormPanel.DESCRIPTION)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#205072',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#205072',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#205072',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#205072',\r\n    },\r\n    radioSpanLabel: {\r\n      fontSize: '0.75rem',\r\n    },\r\n    radioLabel: {\r\n      marginLeft: '8px',\r\n      marginRight: '8px',\r\n    },\r\n  })\r\n);\r\n\r\nconst questions = [\r\n  {\r\n    title: 'Qual a intensidade da sua dor para as seguintes atividades?',\r\n    sections: [\r\n      'Caminhando em lugar plano.',\r\n      'Subindo ou descendo escadas.',\r\n      'A noite deitado na cama.',\r\n      'Sentando-se ou deitando-se.',\r\n      'Ficando em pé.',\r\n    ],\r\n  },\r\n  {\r\n    title: '',\r\n    sections: [\r\n      'Qual a intensidade de sua rigidez logo após acordar de manhã?',\r\n      'Qual a intensidade de sua rigidez após de sentar, se deitar ou repousar no decorrer do dia?',\r\n    ],\r\n  },\r\n  {\r\n    title:\r\n      'Qual o grau de dificuldade que você tem ao realizar as seguintes atividades?',\r\n    sections: [\r\n      'Descer escadas.', //1\r\n      'Subir escadas.', //2\r\n      'Levantar-se estando sentada.', //3\r\n      'Ficar em pé.', //4\r\n      'Abaixar-se para pegar algo.', //5\r\n      'Andar no plano.', //6\r\n      'Entrar e sair do carro.', //7\r\n      'Ir fazer compras.', //8\r\n      'Colocar meias.', //9\r\n      'Levantar-se da cama.', //10\r\n      'Tirar as meias.', //11\r\n      'Ficar deitado na cama.', //12\r\n      'Entrar e sair do banho.', //13\r\n      'Se sentar.', //14\r\n      'Sentar e levantar do vaso sanitário.', //15\r\n      'Fazer tarefas domésticas pesadas.', //16\r\n      'Fazer tarefas domésticas leves.', //17\r\n    ],\r\n  },\r\n];\r\n\r\nasync function postWOMACAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/womac`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nconst getRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n  return questions.reduce((acc, q, i) => {\r\n    if (i < questionIndex) {\r\n      return acc + q.sections.length;\r\n    } else if (i === questionIndex) {\r\n      return acc + sectionIndex;\r\n    }\r\n    return acc;\r\n  }, 0);\r\n};\r\n\r\nexport default function WOMAC(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState(\r\n    new Array(questions.reduce((acc, q) => acc + q.sections.length, 0))\r\n  );\r\n\r\n  const handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    value: string,\r\n    questionIndex: number,\r\n    sectionIndex: number\r\n  ): void => {\r\n    const newAnswers = [...answers];\r\n    const questionRealIndex = getRealIndex(questionIndex, sectionIndex);\r\n    newAnswers[questionRealIndex] = Number(value);\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Qualidade de vida específico para osteoartrose WOMAC (Western\r\n            Ontario McMaster Universities)\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">\r\n              Qualidade de vida específico para osteoartrose WOMAC (Western\r\n              Ontario McMaster Universities)\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              O WOMAC é um questionário de qualidade de vida tridimensional\r\n              (dor, rigidez articular e atividade física), específico para a\r\n              avaliação de pacientes com osteoartrose. A sua versão para a\r\n              língua portuguesa foi realizada pelo método tradicional e por um\r\n              método simplificado, testado anteriormente com outros instrumentos\r\n              de avaliação de qualidade de vida\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              American College of Rheumatology. Western Ontario and McMaster\r\n              Universities Osteoarthritis Index (WOMAC).\r\n              http://www.rheumatology.org/practice/clinical/clinicianresearchers/outcomes-instrumentation/WOMAC.asp.\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {question.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {question.sections.map((section, sIndex) => (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        key={`question${qIndex}-section${sIndex}`}\r\n                      >\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">{section}</FormLabel>\r\n                          <RadioGroup\r\n                            row\r\n                            aria-label={section}\r\n                            name={`question${qIndex}-section${sIndex}`}\r\n                            onChange={(e, v) =>\r\n                              handleChange(e, v, qIndex, sIndex)\r\n                            }\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"0\"\r\n                              control={<Radio />}\r\n                              label=\"Nenhum\"\r\n                              checked={\r\n                                answers[getRealIndex(qIndex, sIndex)] === 0\r\n                              }\r\n                              classes={{\r\n                                labelPlacementBottom: classes.radioLabel,\r\n                                label: classes.radioSpanLabel,\r\n                              }}\r\n                              labelPlacement=\"bottom\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"1\"\r\n                              control={<Radio />}\r\n                              label=\"Pouca\"\r\n                              checked={\r\n                                answers[getRealIndex(qIndex, sIndex)] === 1\r\n                              }\r\n                              classes={{\r\n                                labelPlacementBottom: classes.radioLabel,\r\n                                label: classes.radioSpanLabel,\r\n                              }}\r\n                              labelPlacement=\"bottom\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"2\"\r\n                              control={<Radio />}\r\n                              label=\"Moderada\"\r\n                              checked={\r\n                                answers[getRealIndex(qIndex, sIndex)] === 2\r\n                              }\r\n                              classes={{\r\n                                labelPlacementBottom: classes.radioLabel,\r\n                                label: classes.radioSpanLabel,\r\n                              }}\r\n                              labelPlacement=\"bottom\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"3\"\r\n                              control={<Radio />}\r\n                              label=\"Intensa\"\r\n                              checked={\r\n                                answers[getRealIndex(qIndex, sIndex)] === 3\r\n                              }\r\n                              classes={{\r\n                                labelPlacementBottom: classes.radioLabel,\r\n                                label: classes.radioSpanLabel,\r\n                              }}\r\n                              labelPlacement=\"bottom\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"4\"\r\n                              control={<Radio />}\r\n                              label=\"Muito intensa\"\r\n                              checked={\r\n                                answers[getRealIndex(qIndex, sIndex)] === 4\r\n                              }\r\n                              classes={{\r\n                                labelPlacementBottom: classes.radioLabel,\r\n                                label: classes.radioSpanLabel,\r\n                              }}\r\n                              labelPlacement=\"bottom\"\r\n                            />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postWOMACAnswers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={questions[currentPanel - 1].sections.some(\r\n                (s, sIndex) =>\r\n                  answers[getRealIndex(currentPanel - 1, sIndex)] === undefined\r\n              )}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { PatientFormProps, PatientPanel } from '../../interfaces';\r\nimport { baseUrl } from '../../utils/loggedUser';\r\nimport { UserAuth } from '../../models/UserAuth';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainColor: {\r\n      color: '#205072',\r\n    },\r\n    appBar: {\r\n      backgroundColor: '#205072',\r\n      color: 'white',\r\n    },\r\n    title: {\r\n      color: '#205072',\r\n      margin: theme.spacing(5, 2, 2),\r\n    },\r\n    bodyContent: {\r\n      '& > *': {\r\n        textAlign: 'left',\r\n        margin: theme.spacing(6, 3),\r\n      },\r\n    },\r\n    form: {\r\n      margin: theme.spacing(2),\r\n      textAlign: 'left',\r\n    },\r\n    footer: {\r\n      textAlign: 'center',\r\n      '& button': {\r\n        display: 'block',\r\n        margin: '1rem auto',\r\n      },\r\n    },\r\n    referenceInfo: {\r\n      fontSize: '0.75rem',\r\n      color: grey[500],\r\n    },\r\n    progressBarRoot: {\r\n      margin: '15px 0',\r\n    },\r\n    progressBarLine: {\r\n      backgroundColor: '#205072',\r\n    },\r\n    slider: {\r\n      textAlign: 'center',\r\n      color: '#7A3FE1',\r\n      width: '90%',\r\n      marginLeft: '1rem',\r\n    },\r\n    sliderMakrLabel: {\r\n      fontSize: '0.625rem',\r\n    },\r\n    sliderSubLabel: {\r\n      whiteSpace: 'break-spaces',\r\n      width: '50px',\r\n      fontSize: '0.75rem',\r\n      lineHeight: 1,\r\n    },\r\n    sectionElement: {\r\n      height: '130px',\r\n    },\r\n  })\r\n);\r\n\r\nasync function postSPADIAnswers(\r\n  auth: UserAuth,\r\n  answers: number[],\r\n  goToQuestionaire: () => void\r\n) {\r\n  const response = await fetch(`${baseUrl}/api/v1/forms/patient/fill/spadi`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${auth.token}`,\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ answers }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    goToQuestionaire();\r\n  }\r\n}\r\n\r\nexport default function SPADI(props: PatientFormProps) {\r\n  const classes = useStyles();\r\n  const questions = [\r\n    {\r\n      title: 'Escala de incapacidade',\r\n      subtitle:\r\n        'Os números ao lado de cada item representam o grau de dificuldade que você teve ao fazer aquela atividade. O número zero representa \"Sem dificuldade\" e o número dez representa \"Não consegui fazer\". Por favor, indique o número que melhor descreve quanta dificuldade você teve para fazer cada uma das atividades na semana passada. Se você não teve a oportunidade de fazer uma das atividades na semana passada, por favor, tente estimar qual número você daria para sua dificuldade.',\r\n      sections: [\r\n        'Lavar seu cabelo com o braço afetado?',\r\n        'Lavar suas costas como braço afetado?',\r\n        'Vestir uma camiseta ou blusa pela cabeça',\r\n        'Vestir uma camisa que abotoa na frente?',\r\n        'Vestir suas calças?',\r\n        'Colocar algo em uma prateleira alta com o braço afetado?',\r\n        'Carregar um objeto pesado de 5kg (saco grande de arroz) com o braço afetado?',\r\n        'Retirar algo do bolso de trás com o braço afetado?',\r\n      ],\r\n      alternatives: [\r\n        { label: 'N/A', value: -1 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>0</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Sem dificuldade\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 0,\r\n        },\r\n        { label: '1', value: 1 },\r\n        { label: '2', value: 2 },\r\n        { label: '3', value: 3 },\r\n        { label: '4', value: 4 },\r\n        { label: '5', value: 5 },\r\n        { label: '6', value: 6 },\r\n        { label: '7', value: 7 },\r\n        { label: '8', value: 8 },\r\n        { label: '9', value: 9 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>10</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Não consegui fazer\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 10,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Escala de dor',\r\n      subtitle:\r\n        'Os números ao lado de cada item representam quanta dor você sente em cada situação. O número zero representa \"Sem dor\" e o número dez representa \"A pior dor\". Por favor, indique o número que melhor descreve quanta dor você sentiu durante a semana passada em cada uma das seguintes situações. Se você não teve a oportunidade de fazer uma das atividades na semana passada, por favor, tente estimar qual número você daria para sua dor.',\r\n      sections: [\r\n        'Qual foi a intensidade da sua dor quando foi a pior na semana passada?', //1\r\n        'Quando se deitou em cima do braço afetado?', //2\r\n        'Quando tentou pegfar algo em uma prateleira alta com o braço afetado?', //3\r\n        'Quando tentou tocar a parte de trás do pescoço com o braço afetado?', //4\r\n        'Quando tentou empurrar algo com o braço afetado?', //5\r\n      ],\r\n      alternatives: [\r\n        { label: 'N/A', value: -1 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>0</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Sem dor\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 0,\r\n        },\r\n        { label: '1', value: 1 },\r\n        { label: '2', value: 2 },\r\n        { label: '3', value: 3 },\r\n        { label: '4', value: 4 },\r\n        { label: '5', value: 5 },\r\n        { label: '6', value: 6 },\r\n        { label: '7', value: 7 },\r\n        { label: '8', value: 8 },\r\n        { label: '9', value: 9 },\r\n        {\r\n          label: (\r\n            <>\r\n              <Typography>10</Typography>\r\n              <Typography className={classes.sliderSubLabel}>\r\n                Pior dor\r\n              </Typography>\r\n            </>\r\n          ),\r\n          value: 10,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const getRealIndex = (questionIndex: number, sectionIndex: number) => {\r\n    return questions.reduce((acc, q, i) => {\r\n      if (i < questionIndex) {\r\n        return acc + q.sections.length;\r\n      } else if (i === questionIndex) {\r\n        return acc + sectionIndex;\r\n      }\r\n      return acc;\r\n    }, 0);\r\n  };\r\n  const [currentPanel, setCurrentPanel] = React.useState(0);\r\n  const [answers, setAnswers] = React.useState(\r\n    new Array(questions.reduce((acc, q) => acc + q.sections.length, 0)).fill(-1)\r\n  );\r\n\r\n  const handleChange = (\r\n    value: string,\r\n    questionIndex: number,\r\n    sectionIndex: number\r\n  ): void => {\r\n    const newAnswers = [...answers];\r\n    const questionRealIndex = getRealIndex(questionIndex, sectionIndex);\r\n    newAnswers[questionRealIndex] = Number(value);\r\n    setAnswers(newAnswers);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => props.setCurrentPanel(PatientPanel.INITIAL)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"subtitle1\">\r\n            Índice de dor e incapacidade no ombro (SPADI)\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {currentPanel === 0 && (\r\n        <>\r\n          <div className={classes.title}>\r\n            <Typography variant=\"h6\">Questionário</Typography>\r\n            <Typography variant=\"h6\">\r\n              Índice de dor e incapacidade no ombro (SPADI)\r\n            </Typography>\r\n          </div>\r\n          <div className={classes.bodyContent}>\r\n            <Typography variant=\"body1\">\r\n              O Shoulder Pain and Disability Index (SPADI) é um questionário de\r\n              qualidade de vida desenvolvido para avaliar a dor e a incapacidade\r\n              associadas às disfunções de ombro\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() => setCurrentPanel(1)}\r\n            >\r\n              Começar\r\n            </Button>\r\n            <Typography variant=\"body2\" className={classes.referenceInfo}>\r\n              Roach KE, Budiman-Mak E, Songsiridej N, Lertratanakul Y.\r\n              Development of a shoulder pain and disability index. Arthritis\r\n              Care Res. 1991;4(4):143-9.\r\n            </Typography>\r\n          </div>\r\n        </>\r\n      )}\r\n      {currentPanel > 0 && (\r\n        <div className={classes.form}>\r\n          <LinearProgress\r\n            variant=\"determinate\"\r\n            value={(currentPanel / questions.length) * 100}\r\n            classes={{\r\n              root: classes.progressBarRoot,\r\n              bar: classes.progressBarLine,\r\n            }}\r\n          />\r\n          {questions.map(\r\n            (question, qIndex) =>\r\n              currentPanel - 1 === qIndex && (\r\n                <div key={`question${qIndex}`}>\r\n                  <Grid container spacing={1}>\r\n                    <Grid item xs={12}>\r\n                      <Typography variant=\"subtitle1\">\r\n                        {question.title}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.referenceInfo}\r\n                      >\r\n                        {question?.subtitle}\r\n                      </Typography>\r\n                    </Grid>\r\n                    {question.sections.map((section, sIndex) => (\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        key={`question${qIndex}-section${sIndex}`}\r\n                        className={classes.sectionElement}\r\n                      >\r\n                        <FormControl component=\"fieldset\" fullWidth>\r\n                          <FormLabel component=\"legend\">{section}</FormLabel>\r\n                          <Slider\r\n                            defaultValue={-1}\r\n                            classes={{\r\n                              root: classes.slider,\r\n                              markLabel: classes.sliderMakrLabel,\r\n                            }}\r\n                            step={1}\r\n                            valueLabelDisplay=\"auto\"\r\n                            marks={question.alternatives}\r\n                            min={-1}\r\n                            max={10}\r\n                            onChange={(e, v) => {\r\n                              handleChange(\r\n                                (v as number).toString(),\r\n                                qIndex,\r\n                                sIndex\r\n                              );\r\n                            }}\r\n                          />\r\n                        </FormControl>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </div>\r\n              )\r\n          )}\r\n\r\n          <div className={classes.footer}>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.appBar}\r\n              onClick={() =>\r\n                currentPanel === questions.length\r\n                  ? postSPADIAnswers(props.patientAuth, answers, () =>\r\n                      props.setCurrentPanel(PatientPanel.INITIAL)\r\n                    )\r\n                  : setCurrentPanel(currentPanel + 1)\r\n              }\r\n              disabled={questions[currentPanel - 1].sections.some(\r\n                (s, sIndex) =>\r\n                  answers[getRealIndex(currentPanel - 1, sIndex)] === undefined\r\n              )}\r\n            >\r\n              {currentPanel === questions.length ? 'Finalizar' : 'Próximo'}\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              className={classes.mainColor}\r\n              onClick={() => setCurrentPanel(currentPanel - 1)}\r\n            >\r\n              Anterior\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport React from 'react';\r\n\r\nimport { PatientPanel } from '../../interfaces';\r\nimport OnBoard from './OnBoard';\r\nimport EPC from './EPC';\r\nimport QuestionaireList from './QuestionaireList';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport DN4 from './DN4';\r\nimport OSWESTRY from './OSWESTRY';\r\nimport HAD from './HAD';\r\nimport SF36 from './SF36';\r\nimport BPI from './BPI';\r\nimport Fibromialgia from './Fibromialgia';\r\nimport IAD from './IAD';\r\nimport SBST from './SBST';\r\nimport PSEQ from './PSEQ';\r\nimport WOMAC from './WOMAC';\r\nimport SPADI from './SPADI';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      height: '100vh',\r\n    },\r\n  })\r\n);\r\n\r\nfunction getHasOnboardedLocalStorage(): boolean {\r\n  const hasGoneOnboard = localStorage.getItem('onboard') || 'false';\r\n  return JSON.parse(hasGoneOnboard);\r\n}\r\n\r\nfunction setHasOnboardedLocalStorage(isOnboard: boolean): void {\r\n  localStorage.setItem('onboard', JSON.stringify(isOnboard));\r\n}\r\n\r\nexport default function PatientPage() {\r\n  const classes = useStyles();\r\n  const [hasOnboarded, setHasOnboarded] = React.useState(\r\n    getHasOnboardedLocalStorage()\r\n  );\r\n\r\n  const [currentPanel, setCurrentPanel] = React.useState(PatientPanel.INITIAL);\r\n  const [auth] = useAuth();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {hasOnboarded ? (\r\n        <>\r\n          {currentPanel === PatientPanel.INITIAL && (\r\n            <QuestionaireList\r\n              setCurrentPanel={setCurrentPanel}\r\n              patientInfo={auth.patient!}\r\n            />\r\n          )}\r\n          {currentPanel === PatientPanel.EPC && (\r\n            <EPC setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.DN4 && (\r\n            <DN4 setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.OSWESTRY && (\r\n            <OSWESTRY setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.HAD && (\r\n            <HAD setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.SF36 && (\r\n            <SF36 setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.BPI && (\r\n            <BPI setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.FIBROMIALGIA && (\r\n            <Fibromialgia\r\n              setCurrentPanel={setCurrentPanel}\r\n              patientAuth={auth}\r\n            />\r\n          )}\r\n          {currentPanel === PatientPanel.IAD && (\r\n            <IAD setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.SBST && (\r\n            <SBST setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.PSEQ && (\r\n            <PSEQ setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.WOMAC && (\r\n            <WOMAC setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n          {currentPanel === PatientPanel.SPADI && (\r\n            <SPADI setCurrentPanel={setCurrentPanel} patientAuth={auth} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <OnBoard\r\n          setHasOnboardedToTrue={() => {\r\n            setHasOnboardedLocalStorage(true);\r\n            setHasOnboarded(true);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useReducer, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LeftNav from '../LeftNav';\r\nimport {\r\n  AllPanelTypes,\r\n  PatientPayload,\r\n  ReceptionistPanelType,\r\n} from '../../interfaces';\r\nimport { Patient } from '../../models/Patient';\r\nimport patientReducer from '../../reducers/patient';\r\nimport questionaireReducer from '../../reducers/questionaire';\r\nimport {\r\n  createPatient,\r\n  deletePatient,\r\n  getPatients,\r\n  updatePatient,\r\n} from '../../actions/patient';\r\nimport PatientForm from '../common/PatientForm';\r\nimport {\r\n  clearQuestionaires,\r\n  getQuestionaires,\r\n  sendQuestionaires,\r\n} from '../../actions/questionaire';\r\nimport PatientsTable from '../common/PatientsTable';\r\nimport { AlertContext } from '../../utils/alert';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appRoot: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nfunction ReceptionistPage() {\r\n  const classes = useStyles();\r\n  const [panel, setPanel] = useState<ReceptionistPanelType>(\r\n    ReceptionistPanelType.PatientsTable\r\n  );\r\n  const [currentPatient, setCurrentPatient] = useState<Patient>();\r\n\r\n  const [patients, dispatch] = useReducer(patientReducer, []);\r\n  const [questionaires, questionairesDispatch] = useReducer(\r\n    questionaireReducer,\r\n    []\r\n  );\r\n  const [, setAlertMessage] = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    getPatients(setAlertMessage)(dispatch);\r\n  }, [setAlertMessage]);\r\n\r\n  const setPatient = async (\r\n    id: number | undefined,\r\n    patientPayload: PatientPayload,\r\n    questionairePayload: string[]\r\n  ) => {\r\n    let newPatient;\r\n    if (id) {\r\n      delete patientPayload.email;\r\n      await updatePatient(id, patientPayload, setAlertMessage)(dispatch);\r\n    } else {\r\n      newPatient = await createPatient(\r\n        patientPayload,\r\n        setAlertMessage\r\n      )(dispatch);\r\n    }\r\n    if (newPatient) {\r\n      await sendQuestionaires(\r\n        id ?? newPatient.id,\r\n        questionairePayload,\r\n        setAlertMessage\r\n      )(questionairesDispatch);\r\n      setPanel(ReceptionistPanelType.PatientsTable);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.appRoot]: true,\r\n      })}\r\n    >\r\n      <CssBaseline />\r\n      <LeftNav\r\n        role=\"receptionist\"\r\n        currentPanel={ReceptionistPanelType.PatientsTable}\r\n        setPanel={(panel: AllPanelTypes) =>\r\n          setPanel(panel as ReceptionistPanelType)\r\n        }\r\n      />\r\n      <main className={classes.content}>\r\n        {panel === ReceptionistPanelType.PatientsTable && (\r\n          <PatientsTable\r\n            patients={patients}\r\n            deletePatient={(patient: Patient) =>\r\n              deletePatient(patient, setAlertMessage)(dispatch)\r\n            }\r\n            openPatientForm={async (patient?: Patient) => {\r\n              setCurrentPatient(patient);\r\n              patient\r\n                ? await getQuestionaires(\r\n                    patient.id,\r\n                    setAlertMessage\r\n                  )(questionairesDispatch)\r\n                : clearQuestionaires()(questionairesDispatch);\r\n              setPanel(ReceptionistPanelType.PatientForm);\r\n            }}\r\n          />\r\n        )}\r\n        {panel === ReceptionistPanelType.PatientForm && (\r\n          <PatientForm\r\n            currentPatient={currentPatient}\r\n            setPatient={setPatient}\r\n            questionaires={questionaires}\r\n            openPatientsTablePage={() =>\r\n              setPanel(ReceptionistPanelType.PatientsTable)\r\n            }\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReceptionistPage;\r\n","import { useState } from 'react';\r\nimport Snackbar, { SnackbarCloseReason } from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport {\r\n  BrowserRouter,\r\n  Redirect,\r\n  Route,\r\n  RouteProps,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport Login from './components/Login';\r\nimport PhysicianPage from './components/physician/PhysicianPage';\r\nimport useAuth from './hooks/useAuth';\r\nimport { RolesEnum } from './interfaces';\r\nimport { AuthContext, isValidRole } from './utils/loggedUser';\r\nimport AdminPage from './components/admin/AdminPage';\r\n\r\nimport './App.css';\r\nimport ManagerPage from './components/manager/ManagerPage';\r\nimport PatientPage from './components/patient/PatientPage';\r\nimport ReceptionistPage from './components/receptionist/ReceptionistPage';\r\nimport { AlertContext } from './utils/alert';\r\nimport { ClinicSlugContext } from './utils/clinicSlug';\r\n\r\nfunction App() {\r\n  const [auth, setAuth] = useAuth();\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [clinicSlug, setClinicSlug] = useState('');\r\n\r\n  const currentRole =\r\n    auth?.user?.roles[0] || (auth?.patient?.id ? 'PATIENT' : undefined);\r\n  const defaultPath = isValidRole(currentRole)\r\n    ? `/${RolesEnum[currentRole]}`\r\n    : '/login';\r\n\r\n  function PrivateRoute({ children, ...rest }: RouteProps) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          auth.token ? (\r\n            rest.path?.includes(defaultPath) ? (\r\n              children\r\n            ) : (\r\n              <Redirect to={defaultPath} />\r\n            )\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleClose = (\r\n    event: React.SyntheticEvent<Element, Event>,\r\n    reason: SnackbarCloseReason\r\n  ) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setAlertMessage('');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={[auth, setAuth]}>\r\n      <AlertContext.Provider value={[alertMessage, setAlertMessage]}>\r\n        <div className=\"App\">\r\n          <Snackbar\r\n            open={!!alertMessage}\r\n            autoHideDuration={6000}\r\n            onClose={handleClose}\r\n          >\r\n            <MuiAlert\r\n              elevation={6}\r\n              variant=\"filled\"\r\n              onClose={() => setAlertMessage('')}\r\n              severity=\"error\"\r\n            >\r\n              {alertMessage}\r\n            </MuiAlert>\r\n          </Snackbar>\r\n          <ClinicSlugContext.Provider value={[clinicSlug, setClinicSlug]}>\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route exact path=\"/login\">\r\n                  <Login />\r\n                </Route>\r\n                <Route path=\"/login/patient/:clinic_slug\">\r\n                  <Login isPatient={true} />\r\n                </Route>\r\n                <Route exact path=\"/\">\r\n                  <Redirect to={defaultPath} />\r\n                </Route>\r\n                <PrivateRoute path=\"/admin\">\r\n                  <AdminPage />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/manager\">\r\n                  <ManagerPage />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/physician\">\r\n                  <PhysicianPage />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/receptionist\">\r\n                  <ReceptionistPage />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/patient\">\r\n                  <PatientPage />\r\n                </PrivateRoute>\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </ClinicSlugContext.Provider>\r\n        </div>\r\n      </AlertContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}